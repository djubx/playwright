<-- START_DESCRIPTION -->
# Flutter Mailer Package Overview
=====================================

The `flutter_mailer` package is a Flutter plugin that allows you to send emails from your Flutter app. It provides a simple and easy-to-use API for composing and sending emails.

### When to Use

You can use this package in various scenarios, such as:

* Sending feedback or support emails from your app
* Sharing content or files via email
* Implementing email-based authentication or password recovery

### Features

The `flutter_mailer` package offers the following features:

* Compose and send emails with subject, body, and attachments
* Support for HTML and plain text email bodies
* Attach files from device storage or assets
* Customize email headers and sender information

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Setting Up and Using Flutter Mailer
=====================================

### Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_mailer: ^0.4.1
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_mailer/flutter_mailer.dart';
```
### Step 3: Compose and Send an Email

Create a `MailOptions` object to compose the email:
```dart
MailOptions mailOptions = MailOptions(
  body: 'Hello, this is a test email.',
  subject: 'Test Email',
  recipients: ['recipient@example.com'],
);
```
Then, use the `FlutterMailer` class to send the email:
```dart
await FlutterMailer.send(mailOptions);
```
### Platform-Specific Details

* **Android:** Make sure to add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
```
* **iOS:** No additional setup is required.

### Optimizations

* You can customize the email headers and sender information by using the `MailOptions` object.
* You can attach files from device storage or assets by using the `MailOptions` object.

<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:flutter_mailer/flutter_mailer.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Mailer Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _recipientController = TextEditingController();
  final _subjectController = TextEditingController();
  final _bodyController = TextEditingController();

  Future<void> _sendEmail() async {
    // Create a MailOptions object to compose the email
    MailOptions mailOptions = MailOptions(
      body: _bodyController.text,
      subject: _subjectController.text,
      recipients: [_recipientController.text],
    );

    // Send the email using the FlutterMailer class
    await FlutterMailer.send(mailOptions);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Mailer Example'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _recipientController,
              decoration: InputDecoration(
                labelText: 'Recipient',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            TextField(
              controller: _subjectController,
              decoration: InputDecoration(
                labelText: 'Subject',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            TextField(
              controller: _bodyController,
              decoration: InputDecoration(
                labelText: 'Body',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: _sendEmail,
              child: Text('Send Email'),
            ),
          ],
        ),
      ),
    );
  }
}
```
// The app starts by creating a Material app with a home page.
// The home page is a stateful widget that contains a form with three text fields: recipient, subject, and body.
// When the user clicks the "Send Email" button, the `_sendEmail` function is called.
// This function creates a `MailOptions` object to compose the email using the text field values.
// Then, it uses the `FlutterMailer` class to send the email.
// The email is sent using the `send` method, which returns a future that completes when the email is sent.
// The app does not handle any errors that may occur during email sending.
<-- END_MAIN -->