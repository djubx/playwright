<-- START_DESCRIPTION -->

# Motion Tab Bar V2 Package Overview
=====================================

The `motion_tab_bar_v2` package is a Flutter library that provides a customizable and animated tab bar. It is designed to be used with the `DefaultTabController` widget to create a smooth and interactive tab navigation experience.

### When to Use This Package

This package is ideal for apps that require a tab-based navigation system with animations and customizations. It is suitable for both Android and iOS platforms.

### Features

*   Customizable tab bar with animations
*   Supports both Android and iOS platforms
*   Compatible with `DefaultTabController` widget
*   Highly customizable with various properties and callbacks

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Motion Tab Bar V2 Tutorial
==========================

### Setup Process

To use the `motion_tab_bar_v2` package, follow these steps:

1.  Add the package to your `pubspec.yaml` file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  motion_tab_bar_v2: ^1.5.1
```

2.  Run `flutter pub get` to install the package.

### Using the Package

Here's a basic example of how to use the `motion_tab_bar_v2` package:

```dart
import 'package:flutter/material.dart';
import 'package:motion_tab_bar_v2/motion-tab-bar.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> with TickerProviderStateMixin {
  late TabController _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 3, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Motion Tab Bar V2 Example'),
      ),
      body: TabBarView(
        controller: _tabController,
        children: [
          Center(child: Text('Tab 1')),
          Center(child: Text('Tab 2')),
          Center(child: Text('Tab 3')),
        ],
      ),
      bottomNavigationBar: MotionTabBar(
        initialIndex: 0,
        controller: _tabController,
        labels: [
          'Tab 1',
          'Tab 2',
          'Tab 3',
        ],
        icons: [
          Icons.home,
          Icons.settings,
          Icons.info,
        ],
      ),
    );
  }
}
```

### Platform-Specific Details

The `motion_tab_bar_v2` package works on both Android and iOS platforms. However, you may need to adjust the styling and layout to fit your specific use case.

### Required Configurations or Optimizations

You can customize the appearance and behavior of the `MotionTabBar` widget by using various properties and callbacks. For example, you can change the color scheme, icon size, and animation duration.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:motion_tab_bar_v2/motion-tab-bar.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Motion Tab Bar V2 Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> with TickerProviderStateMixin {
  late TabController _tabController;

  // Initialize the TabController with 3 tabs
  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 3, vsync: this);
  }

  // Dispose of the TabController when the widget is removed
  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Motion Tab Bar V2 Example'),
      ),
      // Create a TabBarView with 3 tabs
      body: TabBarView(
        controller: _tabController,
        children: [
          // Tab 1: Display a centered text
          Center(child: Text('Tab 1')),
          // Tab 2: Display a centered text
          Center(child: Text('Tab 2')),
          // Tab 3: Display a centered text
          Center(child: Text('Tab 3')),
        ],
      ),
      // Create a MotionTabBar with 3 tabs
      bottomNavigationBar: MotionTabBar(
        initialIndex: 0,
        controller: _tabController,
        labels: [
          'Tab 1',
          'Tab 2',
          'Tab 3',
        ],
        icons: [
          Icons.home,
          Icons.settings,
          Icons.info,
        ],
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user launches the app and is presented with a tab bar with 3 tabs.
// 2. The user selects a tab, and the corresponding content is displayed.
// 3. The user can switch between tabs by tapping on the tab bar.
// 4. The MotionTabBar widget animates the tab selection and content transition.
```

<-- END_MAIN -->