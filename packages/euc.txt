<-- START_DESCRIPTION -->

# Overview of the "euc" Flutter Package
=====================================

The "euc" Flutter package is a utility library that provides a simple way to handle errors and exceptions in Flutter applications. It allows developers to catch and handle errors in a centralized manner, making it easier to manage error handling code.

### When to Use This Package

This package is useful when you want to:

* Catch and handle errors in a centralized manner
* Display error messages to the user
* Log errors for debugging purposes
* Handle exceptions in a consistent way throughout your app

### Features

* Catch and handle errors using a single callback function
* Display error messages to the user using a customizable dialog
* Log errors to the console or a file
* Support for both synchronous and asynchronous error handling

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the "euc" Package
=====================================

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  euc: ^1.0.0
```
Then run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:euc/euc.dart';
```
### Step 3: Create a Callback Function

Create a callback function that will handle errors:
```dart
void errorCallback(Error error) {
  // Handle the error here
  print('Error: $error');
}
```
### Step 4: Use the `Euc` Widget

Wrap your app with the `Euc` widget and pass the callback function:
```dart
Euc(
  child: MyApp(),
  errorCallback: errorCallback,
)
```
### Platform-Specific Details

* Android: No additional setup required.
* iOS: No additional setup required.

### Configurations and Optimizations

* You can customize the error dialog by passing a `dialogBuilder` function to the `Euc` widget.
* You can log errors to a file by passing a `logger` function to the `Euc` widget.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:euc/euc.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Euc(
      child: MaterialApp(
        title: 'Euc Demo',
        home: MyHomePage(),
      ),
      errorCallback: (error) {
        // Handle the error here
        print('Error: $error');
      },
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Euc Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Simulate an error
            throw Exception('Something went wrong');
          },
          child: Text('Throw Error'),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and the `Euc` widget is created.
// 2. The `Euc` widget wraps the entire app and catches any errors that occur.
// 3. When an error occurs, the `errorCallback` function is called.
// 4. The `errorCallback` function handles the error and prints it to the console.
// 5. The app continues to run and the error is not propagated further.
```

// Summary: The code flows by first creating the `Euc` widget, which catches any errors that occur in the app. When an error occurs, the `errorCallback` function is called, which handles the error and prints it to the console. The app continues to run and the error is not propagated further.

<-- END_MAIN -->