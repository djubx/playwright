<-- START_DESCRIPTION -->

# Random Abstract Avatar Package
The "random_abstract_avatar" Flutter package is a lightweight library that generates random, abstract avatars for users. It's perfect for applications where you want to provide a unique visual representation for each user without requiring them to upload a profile picture.

## Features
- Generates random, abstract avatars
- Customizable avatar size and shape
- Supports multiple color palettes

## When to Use
- When you want to provide a unique visual representation for each user without requiring them to upload a profile picture
- In applications where user profiles are not a primary focus, but you still want to provide a visually appealing experience

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
To use the "random_abstract_avatar" package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File
```yml
dependencies:
  flutter:
    sdk: flutter
  random_abstract_avatar: ^1.0.0
```

### Step 2: Import the Package in Your Dart File
```dart
import 'package:random_abstract_avatar/random_abstract_avatar.dart';
```

### Step 3: Use the Package to Generate an Avatar
```dart
RandomAbstractAvatar(
  size: 100,
  shape: AvatarShape.circle,
  colors: [Colors.blue, Colors.red, Colors.green],
)
```

### Platform-Specific Details
- Android: No additional configuration required
- iOS: No additional configuration required

### Optimizations
- To improve performance, consider caching the generated avatars

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:random_abstract_avatar/random_abstract_avatar.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Random Abstract Avatar Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Random Abstract Avatar Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Generate a random avatar with default settings
              RandomAbstractAvatar(
                size: 100,
              ),
              SizedBox(height: 20),
              // Generate a random avatar with custom size and shape
              RandomAbstractAvatar(
                size: 150,
                shape: AvatarShape.square,
              ),
              SizedBox(height: 20),
              // Generate a random avatar with custom colors
              RandomAbstractAvatar(
                size: 100,
                colors: [Colors.red, Colors.green, Colors.blue],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a screen containing three random avatars.
// 2. The first avatar is generated with default settings (size: 100, shape: circle).
// 3. The second avatar is generated with a custom size (150) and shape (square).
// 4. The third avatar is generated with custom colors (red, green, blue).
// 5. The user can view the avatars and see how they are randomly generated.

// In summary, this code demonstrates how to use the "random_abstract_avatar" package to generate random avatars with different settings.

// END_MAIN -->
```