<-- START_DESCRIPTION -->

# Equal Space Flutter Package
================================

The `equal_space` Flutter package is a utility package that helps to divide a given space into equal parts. It is useful when you need to arrange widgets in a row or column with equal spacing between them.

## Features

*   Divide a given space into equal parts
*   Arrange widgets in a row or column with equal spacing between them
*   Support for both horizontal and vertical spacing

## When to Use

*   When you need to arrange multiple widgets in a row or column with equal spacing between them
*   When you need to divide a given space into equal parts

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Setup

To use the `equal_space` package, you need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  equal_space: ^1.0.0
```

Then, run `flutter pub get` to get the package.

## Basic Usage

To use the `equal_space` package, you need to import it:

```dart
import 'package:equal_space/equal_space.dart';
```

Then, you can use the `EqualSpace` widget to divide a given space into equal parts:

```dart
EqualSpace(
  children: [
    Container(
      color: Colors.red,
    ),
    Container(
      color: Colors.blue,
    ),
    Container(
      color: Colors.green,
    ),
  ],
)
```

This will divide the available space into three equal parts and arrange the containers in a row with equal spacing between them.

## Platform-Specific Details

The `equal_space` package works on both Android and iOS platforms. However, you need to make sure that you have the latest version of Flutter installed.

## Configurations and Optimizations

You can configure the `EqualSpace` widget to divide the space into a specific number of parts by using the `numParts` property:

```dart
EqualSpace(
  numParts: 4,
  children: [
    Container(
      color: Colors.red,
    ),
    Container(
      color: Colors.blue,
    ),
    Container(
      color: Colors.green,
    ),
  ],
)
```

This will divide the available space into four equal parts.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:equal_space/equal_space.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Equal Space Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Equal Space Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // Divide the space into three equal parts
            EqualSpace(
              children: [
                Container(
                  color: Colors.red,
                  height: 50,
                ),
                Container(
                  color: Colors.blue,
                  height: 50,
                ),
                Container(
                  color: Colors.green,
                  height: 50,
                ),
              ],
            ),
            SizedBox(height: 20),
            // Divide the space into four equal parts
            EqualSpace(
              numParts: 4,
              children: [
                Container(
                  color: Colors.red,
                  height: 50,
                ),
                Container(
                  color: Colors.blue,
                  height: 50,
                ),
                Container(
                  color: Colors.green,
                  height: 50,
                ),
                Container(
                  color: Colors.yellow,
                  height: 50,
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and the MyApp widget is built.
// 2. The MyApp widget returns a MaterialApp with a title and a theme.
// 3. The MaterialApp builds the MyHomePage widget.
// 4. The MyHomePage widget returns a Scaffold with an AppBar and a body.
// 5. The body of the Scaffold is a Center widget with a Column child.
// 6. The Column widget has two children: an EqualSpace widget and a SizedBox.
// 7. The EqualSpace widget divides the available space into three equal parts and arranges three containers in a row with equal spacing between them.
// 8. The SizedBox widget adds a gap of 20 pixels between the two EqualSpace widgets.
// 9. The second EqualSpace widget divides the available space into four equal parts and arranges four containers in a row with equal spacing between them.

// In summary, the app demonstrates the use of the EqualSpace widget to divide a given space into equal parts and arrange widgets in a row with equal spacing between them.
```

<-- END_MAIN -->