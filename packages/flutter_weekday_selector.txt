<-- START_DESCRIPTION -->

# Flutter Weekday Selector Package
=====================================

The `flutter_weekday_selector` package is a useful Flutter package that allows users to select weekdays in a convenient and user-friendly way. It is ideal for applications that require users to choose specific days of the week, such as scheduling apps, reminders, or calendar events.

### Features

*   Easy-to-use weekday selector widget
*   Customizable UI to fit your app's theme
*   Support for both Android and iOS platforms

### When to Use

*   Scheduling apps: Allow users to select specific days for recurring events or appointments.
*   Reminders: Enable users to choose which days of the week they want to receive reminders.
*   Calendar events: Let users select the days of the week for events or meetings.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Flutter Weekday Selector Package
================================================================

### Step 1: Add the Package to Your Project

Add the `flutter_weekday_selector` package to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_weekday_selector: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:flutter_weekday_selector/flutter_weekday_selector.dart';
```

### Step 3: Use the WeekdaySelector Widget

Use the `WeekdaySelector` widget in your Flutter app:

```dart
WeekdaySelector(
  onChanged: (int day) {
    // Handle the selected day
  },
)
```

### Platform-Specific Details

*   Android: No additional configuration is required.
*   iOS: No additional configuration is required.

### Optimizations

*   You can customize the UI of the `WeekdaySelector` widget to fit your app's theme.
*   You can use the `initialDay` property to set the initial selected day.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_weekday_selector/flutter_weekday_selector.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Weekday Selector Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _selectedDay = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Weekday Selector Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            WeekdaySelector(
              onChanged: (int day) {
                // Handle the selected day
                setState(() {
                  _selectedDay = day;
                });
              },
              initialDay: _selectedDay,
            ),
            SizedBox(height: 20),
            Text(
              'Selected Day: ${_getDayName(_selectedDay)}',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }

  String _getDayName(int day) {
    switch (day) {
      case 0:
        return 'Monday';
      case 1:
        return 'Tuesday';
      case 2:
        return 'Wednesday';
      case 3:
        return 'Thursday';
      case 4:
        return 'Friday';
      case 5:
        return 'Saturday';
      case 6:
        return 'Sunday';
      default:
        return '';
    }
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget is a stateless widget that wraps the MaterialApp widget.
// The MaterialApp widget is the top-level widget for the app, and it provides a basic material design visual layout structure.
// The home property of the MaterialApp widget is set to the MyHomePage widget, which is the main page of the app.
// The MyHomePage widget is a stateful widget that displays a WeekdaySelector widget and a Text widget.
// The WeekdaySelector widget allows the user to select a day of the week, and the Text widget displays the selected day.
// When the user selects a new day, the onChanged callback of the WeekdaySelector widget is called, which updates the _selectedDay variable and rebuilds the UI.
```

<-- END_MAIN -->