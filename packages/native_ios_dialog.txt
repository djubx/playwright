<-- START_DESCRIPTION -->

Native iOS Dialog Package for Flutter
=====================================

The `native_ios_dialog` package allows you to display native iOS dialogs in your Flutter application. This package is useful when you want to provide a more native experience for your iOS users.

Features
--------

*   Display native iOS alerts and action sheets
*   Customize the dialog's title, message, and actions
*   Handle user input from the dialog

When to Use
------------

You can use this package when you want to:

*   Display a confirmation dialog to the user
*   Ask the user to choose from a list of options
*   Provide a more native experience for your iOS users

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
----------------

### Step 1: Add the Package to Your Project

Add the `native_ios_dialog` package to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  native_ios_dialog: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:native_ios_dialog/native_ios_dialog.dart';
```

### Step 3: Display a Dialog

Use the `showDialog` function to display a native iOS dialog:

```dart
NativeIosDialog.showDialog(
  title: 'Confirmation',
  message: 'Are you sure you want to delete this item?',
  actions: [
    NativeIosDialogAction(
      title: 'Delete',
      style: NativeIosDialogActionStyle.destructive,
      onPressed: () {
        // Handle delete action
      },
    ),
    NativeIosDialogAction(
      title: 'Cancel',
      style: NativeIosDialogActionStyle.cancel,
      onPressed: () {
        // Handle cancel action
      },
    ),
  ],
);
```

Platform-Specific Details
-------------------------

This package uses the `UIAlertController` class on iOS to display native dialogs.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:native_ios_dialog/native_ios_dialog.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Native iOS Dialog Example'),
        ),
        body: Center(
          child: ElevatedButton(
            child: Text('Show Dialog'),
            onPressed: () {
              // Show a native iOS dialog
              NativeIosDialog.showDialog(
                title: 'Confirmation',
                message: 'Are you sure you want to delete this item?',
                actions: [
                  NativeIosDialogAction(
                    title: 'Delete',
                    style: NativeIosDialogActionStyle.destructive,
                    onPressed: () {
                      // Handle delete action
                      print('Delete action pressed');
                    },
                  ),
                  NativeIosDialogAction(
                    title: 'Cancel',
                    style: NativeIosDialogActionStyle.cancel,
                    onPressed: () {
                      // Handle cancel action
                      print('Cancel action pressed');
                    },
                  ),
                ],
              );
            },
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user presses the 'Show Dialog' button.
// 2. The NativeIosDialog.showDialog function is called to display a native iOS dialog.
// 3. The dialog is displayed with a title, message, and two actions: 'Delete' and 'Cancel'.
// 4. When the user presses the 'Delete' action, the delete action is handled and a message is printed to the console.
// 5. When the user presses the 'Cancel' action, the cancel action is handled and a message is printed to the console.

// In summary, this code displays a native iOS dialog with two actions and handles the user's input.
```

<-- END_MAIN -->