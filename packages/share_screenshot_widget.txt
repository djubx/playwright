<-- START_DESCRIPTION -->

# Share Screenshot Widget Flutter Package
=====================================

The `share_screenshot_widget` Flutter package allows users to share screenshots of their app's content with others. This package is useful when you want to enable users to share a specific part of your app's UI, such as a quote, image, or achievement.

### Features

*   Supports sharing screenshots of any widget
*   Allows customization of the shared image
*   Works on both Android and iOS platforms

### When to Use

*   When you want to enable users to share a specific part of your app's UI
*   When you want to allow users to share their progress or achievements on social media
*   When you want to provide a way for users to save a screenshot of your app's content

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Share Screenshot Widget Package
=====================================================

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  share_screenshot_widget: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:share_screenshot_widget/share_screenshot_widget.dart';
```

### Step 3: Use the ShareScreenshotWidget

Wrap the widget you want to share with the `ShareScreenshotWidget`:

```dart
ShareScreenshotWidget(
  child: Text('Hello, World!'),
  onShare: (image) {
    // Share the image
  },
)
```

### Platform-Specific Details

*   On Android, the package uses the `android.graphics.Bitmap` class to create the screenshot.
*   On iOS, the package uses the `UIImage` class to create the screenshot.

### Required Configurations or Optimizations

*   Make sure to add the necessary permissions to your AndroidManifest.xml file:

```xml
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```

*   On iOS, make sure to add the necessary permissions to your Info.plist file:

```xml
<key>NSPhotoLibraryAddUsageDescription</key>
<string>This app needs access to the photo library to share screenshots.</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:share_screenshot_widget/share_screenshot_widget.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Share Screenshot Widget Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Share Screenshot Widget Demo'),
      ),
      body: Center(
        child: ShareScreenshotWidget(
          child: Text(
            'Hello, World!',
            style: TextStyle(fontSize: 24),
          ),
          onShare: (image) {
            // Share the image
            print('Image shared!');
          },
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a screen containing a text widget.
// 2. The text widget is wrapped with the ShareScreenshotWidget.
// 3. When the user taps the ShareScreenshotWidget, a screenshot of the text widget is taken.
// 4. The screenshot is then shared using the onShare callback.
// 5. The onShare callback can be used to share the image on social media, save it to the gallery, or perform any other action.
```

<-- END_MAIN -->