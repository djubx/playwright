<-- START_DESCRIPTION -->

# Flutter Fortune Wheel Package
================================

The `flutter_fortune_wheel` package is a Flutter library that allows you to create a fortune wheel game in your app. It provides a customizable and interactive wheel that can be used to select random items or rewards.

## Features

* Customizable wheel with variable number of sections
* Interactive wheel that can be spun by the user
* Support for different section colors and labels
* Optional animation and sound effects

## When to Use

This package is ideal for apps that require a fun and interactive way to select random items or rewards, such as:

* Games and quizzes
* Prize wheels and giveaways
* Randomized selection tools

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_fortune_wheel: ^1.0.0
```
Then run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_fortune_wheel/flutter_fortune_wheel.dart';
```
## Step 3: Create a Fortune Wheel

Create a `FortuneWheel` widget and customize its properties:
```dart
FortuneWheel(
  sections: 8,
  sectionColors: [
    Colors.red,
    Colors.blue,
    Colors.green,
    Colors.yellow,
    Colors.purple,
    Colors.orange,
    Colors.pink,
    Colors.brown,
  ],
  sectionLabels: [
    'Section 1',
    'Section 2',
    'Section 3',
    'Section 4',
    'Section 5',
    'Section 6',
    'Section 7',
    'Section 8',
  ],
)
```
## Step 4: Add Animation and Sound Effects (Optional)

You can add animation and sound effects to the wheel by using the ` animation` and `soundEffect` properties:
```dart
FortuneWheel(
  // ...
  animation: FortuneWheelAnimation.spin,
  soundEffect: FortuneWheelSoundEffect.tick,
)
```
## Platform-Specific Details

* Android: Make sure to add the `android.permission.VIBRATE` permission to your `AndroidManifest.xml` file if you want to use the vibration sound effect.
* iOS: Make sure to add the `NSAppTransportSecurity` key to your `Info.plist` file if you want to use the sound effects.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_fortune_wheel/flutter_fortune_wheel.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Fortune Wheel Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _selectedSection = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Fortune Wheel Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            FortuneWheel(
              sections: 8,
              sectionColors: [
                Colors.red,
                Colors.blue,
                Colors.green,
                Colors.yellow,
                Colors.purple,
                Colors.orange,
                Colors.pink,
                Colors.brown,
              ],
              sectionLabels: [
                'Section 1',
                'Section 2',
                'Section 3',
                'Section 4',
                'Section 5',
                'Section 6',
                'Section 7',
                'Section 8',
              ],
              animation: FortuneWheelAnimation.spin,
              soundEffect: FortuneWheelSoundEffect.tick,
              onSectionSelected: (section) {
                setState(() {
                  _selectedSection = section;
                });
              },
            ),
            SizedBox(height: 20),
            Text(
              'Selected Section: ${_selectedSection + 1}',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by creating a MaterialApp with a title and a theme.
// The home page is a Scaffold with an AppBar and a body.
// The body is a Center widget with a Column of children.
// The first child is a FortuneWheel widget with 8 sections, each with a different color and label.
// The wheel has an animation and sound effect when spun.
// When a section is selected, the _selectedSection variable is updated and the UI is rebuilt to show the selected section.
// The selected section is displayed below the wheel.

```

<-- END_MAIN -->