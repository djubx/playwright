```markdown
<!-- START_DESCRIPTION -->
# Exploring the `city_picker_china` Flutter Package

The `city_picker_china` package is a powerful tool for Flutter developers looking to implement a city selection feature specifically for Chinese cities. This package provides a user-friendly interface for selecting provinces, cities, and districts, making it an essential addition for applications targeting users in China.

## When to Use This Package
You should consider using the `city_picker_china` package in scenarios such as:
- Building applications that require location-based services in China.
- Creating forms that need users to select their city or region.
- Developing e-commerce applications that require shipping address input.

## Key Features
- **Hierarchical City Selection**: Allows users to select from a structured list of provinces, cities, and districts.
- **Customizable UI**: Offers options to customize the appearance of the picker to match your app's design.
- **Easy Integration**: Simple to integrate into existing Flutter applications with minimal setup.
- **Lightweight**: The package is lightweight, ensuring it does not bloat your application.

<!-- END_DESCRIPTION -->
```

```markdown
<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using `city_picker_china`

## Installation
To get started with the `city_picker_china` package, you need to add it to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  city_picker_china: ^1.0.0  # Check for the latest version on pub.dev
```

After adding the dependency, run `flutter pub get` to install the package.

## Platform-Specific Configuration
### Android
For Android, ensure that your `minSdkVersion` is set to at least 21 in your `android/app/build.gradle` file:

```gradle
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
    }
}
```

### iOS
For iOS, you may need to set the deployment target in your `ios/Podfile`:

```ruby
platform :ios, '10.0'
```

## Using the Package
To use the `city_picker_china` package, you can create a simple widget that utilizes the city picker. Hereâ€™s a basic example:

```dart
import 'package:flutter/material.dart';
import 'package:city_picker_china/city_picker_china.dart';

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('City Picker Example')),
        body: Center(
          child: CityPicker(
            onCitySelected: (province, city, district) {
              // Handle the selected city here
              print('Selected: $province, $city, $district');
            },
          ),
        ),
      ),
    );
  }
}
```

In this example, the `CityPicker` widget is used to display the city selection interface. The `onCitySelected` callback provides the selected province, city, and district.

<!-- END_TUTORIAL -->
```

```markdown
<!-- START_MAIN -->
# Complete Example of `city_picker_china`

```dart
import 'package:flutter/material.dart';
import 'package:city_picker_china/city_picker_china.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('City Picker Example')),
        body: Center(
          child: CityPicker(
            onCitySelected: (province, city, district) {
              // This callback is triggered when a city is selected
              print('Selected: $province, $city, $district');
            },
          ),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function initializes the Flutter app by calling runApp() with RealFlutter as the root widget.
// 2. RealFlutter builds a MaterialApp with a Scaffold containing an AppBar and a Center widget.
// 3. Inside the Center widget, the CityPicker widget is instantiated.
// 4. The CityPicker widget displays a city selection interface to the user.
// 5. When the user selects a city, the onCitySelected callback is triggered, printing the selected province, city, and district to the console.
```
<!-- END_MAIN -->
``` 

This structured approach provides a comprehensive overview of the `city_picker_china` package, guiding developers through its features, setup, and practical usage in a Flutter application.