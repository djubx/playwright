<-- START_DESCRIPTION -->
# whatsapp_camera Flutter Package
The whatsapp_camera package is a powerful tool for Flutter developers that allows them to access the device's camera and capture images or videos. This package is ideal for apps that require camera functionality, such as social media apps, camera apps, or any other app that needs to capture visual content.

## Features
- Capture images or videos using the device's camera
- Switch between front and rear cameras
- Control camera settings such as flash mode and camera resolution
- Support for both Android and iOS platforms

## When to Use
This package is perfect for apps that require camera functionality, such as:
- Social media apps that allow users to capture and share images or videos
- Camera apps that provide advanced camera features and settings
- Any other app that needs to capture visual content using the device's camera

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Setup and Usage
To use the whatsapp_camera package, follow these steps:

### Step 1: Add the Package to Your Flutter Project
Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  whatsapp_camera: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package
Import the package in your Dart file:
```dart
import 'package:whatsapp_camera/whatsapp_camera.dart';
```
### Step 3: Request Camera Permissions
Request camera permissions using the `requestCameraPermissions` method:
```dart
await WhatsappCamera.requestCameraPermissions();
```
### Step 4: Initialize the Camera
Initialize the camera using the `initializeCamera` method:
```dart
await WhatsappCamera.initializeCamera();
```
### Step 5: Capture Images or Videos
Use the `captureImage` or `captureVideo` methods to capture images or videos:
```dart
await WhatsappCamera.captureImage();
// or
await WhatsappCamera.captureVideo();
```
### Platform-Specific Details
- Android: Make sure to add the following lines to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.CAMERA" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```
- iOS: Make sure to add the following lines to your `Info.plist` file:
```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to capture images and videos.</string>
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs photo library access to save captured images and videos.</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:whatsapp_camera/whatsapp_camera.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Step 1: Request camera permissions
  Future<void> _requestCameraPermissions() async {
    await WhatsappCamera.requestCameraPermissions();
  }

  // Step 2: Initialize the camera
  Future<void> _initializeCamera() async {
    await WhatsappCamera.initializeCamera();
  }

  // Step 3: Capture images or videos
  Future<void> _captureImage() async {
    await WhatsappCamera.captureImage();
  }

  Future<void> _captureVideo() async {
    await WhatsappCamera.captureVideo();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Whatsapp Camera Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _requestCameraPermissions,
              child: Text('Request Camera Permissions'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _initializeCamera,
              child: Text('Initialize Camera'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _captureImage,
              child: Text('Capture Image'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _captureVideo,
              child: Text('Capture Video'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user requests camera permissions by pressing the 'Request Camera Permissions' button.
// 2. The user initializes the camera by pressing the 'Initialize Camera' button.
// 3. The user captures an image or video by pressing the 'Capture Image' or 'Capture Video' button.
// 4. The captured image or video is saved to the device's gallery.

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Whatsapp Camera Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}
```
<-- END_MAIN -->