<-- START_DESCRIPTION -->

**Stetho Network Inspector Flutter Package**
=============================================

The `stetho_network_inspector` package is a powerful tool for inspecting network traffic in Flutter applications. It allows developers to monitor and analyze network requests, responses, and errors in real-time, making it easier to debug and optimize network-related issues.

**When to Use**
---------------

This package is particularly useful when:

* Debugging network-related issues, such as failed requests or unexpected responses.
* Optimizing network performance, such as reducing latency or improving data transfer rates.
* Testing network-related features, such as authentication or caching.

**Features**
------------

* Real-time network traffic inspection.
* Request and response logging.
* Error logging and analysis.
* Support for HTTP and HTTPS protocols.
* Compatible with both Android and iOS platforms.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setup and Usage**
-------------------

### Step 1: Add the Package to Your Project

Add the `stetho_network_inspector` package to your `pubspec.yaml` file:
```yml
dependencies:
  stetho_network_inspector: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Initialize the Package

In your `main.dart` file, import the package and initialize it:
```dart
import 'package:stetho_network_inspector/stetho_network_inspector.dart';

void main() {
  StethoNetworkInspector.initialize();
  runApp(MyApp());
}
```
### Step 3: Configure the Package (Optional)

You can configure the package to suit your needs. For example, you can set the log level or specify a custom logger:
```dart
StethoNetworkInspector.configure(
  logLevel: LogLevel.verbose,
  logger: (message) => print(message),
);
```
### Platform-Specific Details

* Android: No additional configuration is required.
* iOS: You need to add the following lines to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
This allows the package to inspect network traffic on iOS devices.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:stetho_network_inspector/stetho_network_inspector.dart';

void main() {
  StethoNetworkInspector.initialize();
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Stetho Network Inspector Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Stetho Network Inspector Demo'),
        ),
        body: Center(
          child: ElevatedButton(
            onPressed: () async {
              // Send a GET request to a sample API endpoint
              final response = await http.get(Uri.parse('https://jsonplaceholder.typicode.com/todos/1'));

              // Log the response using StethoNetworkInspector
              StethoNetworkInspector.logResponse(response);
            },
            child: Text('Send Request'),
          ),
        ),
      ),
    );
  }
}

// The following comments explain the flow of the application:

// 1. The user presses the "Send Request" button, which sends a GET request to a sample API endpoint.
// 2. The `http.get` function returns a `Response` object, which is then passed to the `StethoNetworkInspector.logResponse` function.
// 3. The `StethoNetworkInspector.logResponse` function logs the response using the Stetho Network Inspector package.
// 4. The logged response is then displayed in the Stetho Network Inspector UI, where the user can inspect the response details.

// Summary: This code demonstrates how to use the Stetho Network Inspector package to log and inspect network responses in a Flutter application.
```

<-- END_MAIN -->