<-- START_DESCRIPTION -->

# Mapbox Maps Flutter Package
================================

The `mapbox_maps_flutter` package is a powerful and flexible library for embedding Mapbox maps into Flutter applications. It provides a wide range of features, including support for various map styles, markers, polylines, polygons, and more.

When to Use This Package
------------------------

This package is ideal for applications that require interactive maps, such as:

* Location-based services (e.g., ride-hailing, food delivery)
* Navigation and routing
* Geographic information systems (GIS)
* Real estate and property mapping

Features
--------

* Support for various map styles (e.g., streets, satellite, hybrid)
* Markers, polylines, polygons, and other overlays
* Interactive maps with zoom, pan, and rotate gestures
* Support for custom map styles and tile sources
* Integration with Mapbox services (e.g., directions, geocoding)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `mapbox_maps_flutter` package, follow these steps:

### Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  mapbox_maps_flutter: ^0.14.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:mapbox_maps_flutter/mapbox_maps_flutter.dart';
```
### Step 3: Set Up Your Mapbox Account

Create a Mapbox account and obtain an access token. You can find instructions on the Mapbox website.

### Step 4: Configure the Package

Configure the package with your access token:
```dart
MapboxMapsFlutter.initialize(
  accessToken: 'YOUR_ACCESS_TOKEN',
);
```
### Platform-Specific Details

#### Android

Add the following lines to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
```
#### iOS

Add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:mapbox_maps_flutter/mapbox_maps_flutter.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  MapboxMapController _mapController;

  @override
  void initState() {
    super.initState();
    MapboxMapsFlutter.initialize(
      accessToken: 'YOUR_ACCESS_TOKEN',
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: MapboxMap(
        onMapCreated: (MapboxMapController controller) {
          _mapController = controller;
        },
        initialCameraPosition: CameraPosition(
          target: LatLng(37.7749, -122.4194),
          zoom: 12,
        ),
      ),
    );
  }

  // Add a marker to the map
  void _addMarker() {
    _mapController.addMarker(
      MarkerOptions(
        position: LatLng(37.7749, -122.4194),
        title: 'Marker',
        snippet: 'This is a marker',
      ),
    );
  }

  // Add a polyline to the map
  void _addPolyline() {
    _mapController.addPolyline(
      PolylineOptions(
        points: [
          LatLng(37.7749, -122.4194),
          LatLng(37.7859, -122.4364),
        ],
        color: Colors.blue,
        width: 5,
      ),
    );
  }

  // Add a polygon to the map
  void _addPolygon() {
    _mapController.addPolygon(
      PolygonOptions(
        points: [
          LatLng(37.7749, -122.4194),
          LatLng(37.7859, -122.4364),
          LatLng(37.7963, -122.4574),
        ],
        fillColor: Colors.red,
        strokeColor: Colors.black,
        strokeWidth: 2,
      ),
    );
  }
}

// Application flow:
// 1. The app initializes the Mapbox Maps Flutter package with an access token.
// 2. The app creates a Mapbox map and sets its initial camera position.
// 3. The app adds a marker to the map at a specific location.
// 4. The app adds a polyline to the map between two points.
// 5. The app adds a polygon to the map with three points.
```

// Final summary:
// The code initializes the Mapbox Maps Flutter package, creates a map, and adds markers, polylines, and polygons to the map.
// The app demonstrates how to use the package to display interactive maps with various overlays.

<-- END_MAIN -->