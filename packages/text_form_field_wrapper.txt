<-- START_DESCRIPTION -->

# Text Form Field Wrapper Package
=====================================

The `text_form_field_wrapper` package is a Flutter package that provides a simple and efficient way to wrap `TextFormField` widgets with additional functionality. It allows you to easily add features such as validation, error messages, and loading indicators to your text form fields.

## When to Use This Package
---------------------------

You can use this package when you need to create complex text form fields with additional functionality. For example, you might use it to:

* Create a login form with validation and error messages
* Build a registration form with loading indicators
* Design a feedback form with custom validation rules

## Features
------------

The `text_form_field_wrapper` package provides the following features:

* Validation: You can add custom validation rules to your text form fields
* Error messages: You can display error messages below the text form field
* Loading indicators: You can show a loading indicator while the form is being processed
* Customizable: You can customize the appearance and behavior of the text form field wrapper

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Project
-----------------------------------------

To use the `text_form_field_wrapper` package, you need to add it to your project. You can do this by adding the following line to your `pubspec.yaml` file:
```yml
dependencies:
  text_form_field_wrapper: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package
---------------------------

To use the package, you need to import it in your Dart file:
```dart
import 'package:text_form_field_wrapper/text_form_field_wrapper.dart';
```
## Step 3: Create a Text Form Field Wrapper
-----------------------------------------

To create a text form field wrapper, you can use the `TextFormFieldWrapper` widget:
```dart
TextFormFieldWrapper(
  child: TextFormField(
    decoration: InputDecoration(
      labelText: 'Email',
    ),
  ),
)
```
## Step 4: Add Validation
----------------------

To add validation, you can use the `validation` property:
```dart
TextFormFieldWrapper(
  child: TextFormField(
    decoration: InputDecoration(
      labelText: 'Email',
    ),
  ),
  validation: (value) {
    if (value.isEmpty) {
      return 'Please enter an email address';
    }
    return null;
  },
)
```
## Step 5: Customize the Appearance
----------------------------------

To customize the appearance, you can use the `decoration` property:
```dart
TextFormFieldWrapper(
  child: TextFormField(
    decoration: InputDecoration(
      labelText: 'Email',
      border: OutlineInputBorder(),
    ),
  ),
)
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:text_form_field_wrapper/text_form_field_wrapper.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Text Form Field Wrapper Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _formKey = GlobalKey<FormState>();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Text Form Field Wrapper Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              // Create a text form field wrapper with validation
              TextFormFieldWrapper(
                child: TextFormField(
                  decoration: InputDecoration(
                    labelText: 'Email',
                  ),
                ),
                validation: (value) {
                  if (value.isEmpty) {
                    return 'Please enter an email address';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              // Create a text form field wrapper with a loading indicator
              TextFormFieldWrapper(
                child: TextFormField(
                  decoration: InputDecoration(
                    labelText: 'Password',
                  ),
                ),
                loading: true,
              ),
              SizedBox(height: 16),
              // Create a text form field wrapper with a custom appearance
              TextFormFieldWrapper(
                child: TextFormField(
                  decoration: InputDecoration(
                    labelText: 'Name',
                    border: OutlineInputBorder(),
                  ),
                ),
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState.validate()) {
                    // Form is valid, proceed with submission
                  }
                },
                child: Text('Submit'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a form containing three text form fields.
// 2. The user enters their email address, password, and name.
// 3. The form is validated when the user submits it.
// 4. If the form is valid, the app proceeds with submission.
// 5. If the form is invalid, the app displays error messages to the user.
```

<-- END_MAIN -->