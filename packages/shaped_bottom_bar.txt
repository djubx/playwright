<-- START_DESCRIPTION -->

Shaped Bottom Bar Flutter Package
=====================================

The `shaped_bottom_bar` Flutter package is a customizable bottom navigation bar that allows you to create unique and visually appealing bottom bars for your Flutter applications. This package provides a range of features, including:

* Customizable shapes and sizes
* Support for icons, text, and other widgets
* Animations and transitions
* Platform-specific configurations for Android and iOS

When to Use This Package
------------------------

This package is ideal for applications that require a unique and customizable bottom navigation bar. It is particularly useful for applications that need to display a prominent call-to-action or require a high degree of customization.

Features
--------

* Customizable shapes and sizes
* Support for icons, text, and other widgets
* Animations and transitions
* Platform-specific configurations for Android and iOS

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `shaped_bottom_bar` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  shaped_bottom_bar: ^1.0.0
```
2. Import the package in your Dart file:
```dart
import 'package:shaped_bottom_bar/shaped_bottom_bar.dart';
```
3. Create a `ShapedBottomBar` widget and customize its properties:
```dart
ShapedBottomBar(
  shape: ShapedBottomBarShape.circle,
  size: 60,
  icon: Icon(Icons.home),
  onPressed: () {
    // Handle press event
  },
)
```
Platform-Specific Configurations
-------------------------------

### Android

To use the `shaped_bottom_bar` package on Android, you need to add the following configuration to your `AndroidManifest.xml` file:
```xml
<application
  ...
  android:theme="@style/Theme.AppCompat.Light.NoActionBar"
  ...
>
```
### iOS

To use the `shaped_bottom_bar` package on iOS, you need to add the following configuration to your `Info.plist` file:
```xml
<key>UIViewControllerBasedStatusBarAppearance</key>
<false/>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:shaped_bottom_bar/shaped_bottom_bar.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  int _currentIndex = 0;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shaped Bottom Bar Demo',
      home: Scaffold(
        body: IndexedStack(
          index: _currentIndex,
          children: [
            Center(
              child: Text('Home'),
            ),
            Center(
              child: Text('Settings'),
            ),
          ],
        ),
        bottomNavigationBar: ShapedBottomBar(
          shape: ShapedBottomBarShape.circle,
          size: 60,
          icon: Icon(Icons.home),
          onPressed: (index) {
            setState(() {
              _currentIndex = index;
            });
          },
          items: [
            ShapedBottomBarItem(
              icon: Icon(Icons.home),
              label: 'Home',
            ),
            ShapedBottomBarItem(
              icon: Icon(Icons.settings),
              label: 'Settings',
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user launches the app and is presented with a home screen.
// 2. The user taps on the bottom navigation bar to switch between home and settings screens.
// 3. The app updates the UI to reflect the selected screen.
// 4. The user can repeat steps 2-3 to switch between screens.

// Summary:
// This code demonstrates the use of the `shaped_bottom_bar` package to create a customizable bottom navigation bar.
// The app uses a `ShapedBottomBar` widget to display a circular bottom bar with icons and labels.
// The app updates the UI to reflect the selected screen when the user taps on the bottom navigation bar.
```

<-- END_MAIN -->