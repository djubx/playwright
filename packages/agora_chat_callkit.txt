<-- START_DESCRIPTION -->

# Agora Chat CallKit Flutter Package
=====================================

The Agora Chat CallKit is a Flutter package designed to simplify the process of integrating Agora's real-time communication (RTC) capabilities into your Flutter applications. This package provides a straightforward and efficient way to implement voice and video calling, as well as real-time messaging, into your apps.

### When to Use This Package

The Agora Chat CallKit package is ideal for applications that require real-time communication features, such as:

* Voice and video conferencing
* Online meetings and webinars
* Real-time messaging and chat
* Live streaming and broadcasting

### Key Features

* Support for voice and video calls
* Real-time messaging and chat
* Support for group calls and conferences
* High-quality audio and video
* Low latency and reliable connectivity
* Easy integration with Agora's RTC platform

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Agora Chat CallKit Package
=============================================

To use the Agora Chat CallKit package in your Flutter application, follow these steps:

### Step 1: Add the Package to Your Project

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  agora_chat_callkit: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:agora_chat_callkit/agora_chat_callkit.dart';
```
### Step 3: Initialize the Agora RTC Engine

 Initialize the Agora RTC engine with your App ID and token:
```dart
AgoraRtcEngine _engine = AgoraRtcEngine();
_engine.initialize(
  appId: 'YOUR_APP_ID',
  token: 'YOUR_TOKEN',
);
```
### Step 4: Set Up the Local Video View

Set up the local video view to display the video feed from the device's camera:
```dart
_localVideoView = AgoraVideoView(
  _engine,
  videoRenderMode: VideoRenderMode.Fit,
);
```
### Step 5: Join a Channel

Join a channel to connect with other users:
```dart
_engine.joinChannel(
  token: 'YOUR_TOKEN',
  channelId: 'YOUR_CHANNEL_ID',
  uid: 0,
);
```
### Platform-Specific Details

* For Android, add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.RECORD_AUDIO" />
<uses-permission android:name="android.permission.CAMERA" />
```
* For iOS, add the following lines to your `Info.plist` file:
```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to work</string>
<key>NSMicrophoneUsageDescription</key>
<string>This app needs microphone access to work</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:agora_chat_callkit/agora_chat_callkit.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  AgoraRtcEngine _engine;
  AgoraVideoView _localVideoView;
  String _channelId = 'test_channel';

  @override
  void initState() {
    super.initState();
    _initAgoraRtcEngine();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Agora Chat CallKit Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            _localVideoView,
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _joinChannel,
              child: Text('Join Channel'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _leaveChannel,
              child: Text('Leave Channel'),
            ),
          ],
        ),
      ),
    );
  }

  _initAgoraRtcEngine() async {
    // Initialize the Agora RTC engine
    _engine = AgoraRtcEngine();
    await _engine.initialize(
      appId: 'YOUR_APP_ID',
      token: 'YOUR_TOKEN',
    );

    // Set up the local video view
    _localVideoView = AgoraVideoView(
      _engine,
      videoRenderMode: VideoRenderMode.Fit,
    );
  }

  _joinChannel() async {
    // Join a channel
    await _engine.joinChannel(
      token: 'YOUR_TOKEN',
      channelId: _channelId,
      uid: 0,
    );
  }

  _leaveChannel() async {
    // Leave a channel
    await _engine.leaveChannel();
  }
}

// Application flow:
// 1. The app initializes the Agora RTC engine with the App ID and token.
// 2. The app sets up the local video view to display the video feed from the device's camera.
// 3. The user joins a channel by clicking the "Join Channel" button.
// 4. The app joins the channel and connects with other users.
// 5. The user can leave the channel by clicking the "Leave Channel" button.
// 6. The app leaves the channel and disconnects from other users.
```

<-- END_MAIN -->