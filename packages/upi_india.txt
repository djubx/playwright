<-- START_DESCRIPTION -->
# UPI India Flutter Package
The `upi_india` Flutter package is a convenient way to integrate Unified Payments Interface (UPI) payments into your Flutter application. UPI is a popular payment system in India that allows users to make transactions between bank accounts using a virtual address.

This package provides a simple and easy-to-use API for initiating UPI payments, checking payment status, and handling payment responses. It supports multiple UPI payment apps, including Google Pay, PhonePe, and Paytm.

When to use this package:

* When you want to provide a seamless payment experience for your users in India.
* When you want to integrate UPI payments into your e-commerce or fintech application.
* When you want to leverage the convenience and security of UPI payments.

Features:

* Supports multiple UPI payment apps.
* Easy-to-use API for initiating payments and checking payment status.
* Handles payment responses and provides a callback for payment success or failure.
<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Setup and Usage
To use the `upi_india` package, follow these steps:

### Step 1: Add the package to your pubspec.yaml file

```yml
dependencies:
  upi_india: ^1.0.0
```

### Step 2: Import the package in your Dart file

```dart
import 'package:upi_india/upi_india.dart';
```

### Step 3: Initialize the UPI India package

```dart
UPIIndia _upiIndia = UPIIndia(
  appId: 'your_app_id',
  appScheme: 'your_app_scheme',
);
```

### Step 4: Initiate a UPI payment

```dart
_upiIndia.startTransaction(
  mid: 'your_mid',
  tid: 'your_tid',
  amount: '10.00',
  name: 'John Doe',
  description: 'Test payment',
  callbackUrl: 'https://example.com/callback',
);
```

### Platform-Specific Details

* For Android, add the following intent-filter to your AndroidManifest.xml file:

```xml
<intent-filter>
  <action android:name="android.intent.action.VIEW" />
  <category android:name="android.intent.category.DEFAULT" />
  <category android:name="android.intent.category.BROWSABLE" />
  <data android:scheme="your_app_scheme" android:host="upi" />
</intent-filter>
```

* For iOS, add the following code to your Info.plist file:

```xml
<key>CFBundleURLTypes</key>
<array>
  <dict>
    <key>CFBundleURLName</key>
    <string>your_app_scheme</string>
    <key>CFBundleURLSchemes</key>
    <array>
      <string>your_app_scheme</string>
    </array>
  </dict>
</array>
```

### Optimizations

* Make sure to handle payment responses and provide a callback for payment success or failure.
* Use a secure and reliable payment gateway to handle UPI payments.
<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:upi_india/upi_india.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'UPI India Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  UPIIndia _upiIndia;

  @override
  void initState() {
    super.initState();
    _upiIndia = UPIIndia(
      appId: 'your_app_id',
      appScheme: 'your_app_scheme',
    );
  }

  void _initiatePayment() {
    _upiIndia.startTransaction(
      mid: 'your_mid',
      tid: 'your_tid',
      amount: '10.00',
      name: 'John Doe',
      description: 'Test payment',
      callbackUrl: 'https://example.com/callback',
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('UPI India Example'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _initiatePayment,
          child: Text('Initiate Payment'),
        ),
      ),
    );
  }
}
```

// This is the main entry point of the application.
// The MyApp widget is the root of the application.
// The MyHomePage widget is the home page of the application.
// The _initiatePayment function is called when the user clicks the "Initiate Payment" button.
// The _initiatePayment function initiates a UPI payment using the UPIIndia package.
// The UPIIndia package handles the payment flow and provides a callback for payment success or failure.

// The application flow is as follows:
// 1. The user clicks the "Initiate Payment" button.
// 2. The _initiatePayment function is called.
// 3. The _initiatePayment function initiates a UPI payment using the UPIIndia package.
// 4. The UPIIndia package handles the payment flow and provides a callback for payment success or failure.
// 5. The callback is received by the application and the payment result is displayed to the user.

<-- END_MAIN -->