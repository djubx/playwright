<-- START_DESCRIPTION -->

# clay_containers Flutter Package
=====================================

The `clay_containers` package is a Flutter package that provides a simple and easy-to-use way to create containers with a clay-like effect. The package uses a combination of gradients and shadows to create a realistic clay-like effect.

### When to Use

The `clay_containers` package is perfect for creating visually appealing containers that stand out from the rest of the app. It can be used to create:

*   Custom buttons
*   Custom cards
*   Custom dialog boxes
*   Custom snack bars

### Features

*   Customizable gradient colors
*   Customizable shadow colors
*   Customizable container shape (rounded or rectangular)
*   Customizable container size
*   Customizable container padding

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

### Setup

To use the `clay_containers` package, add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  clay_containers: ^0.2.1
```

Then, run `flutter pub get` to get the package.

### Basic Usage

To use the `clay_containers` package, import it into your Dart file:

```dart
import 'package:clay_containers/clay_containers.dart';
```

Then, use the `ClayContainer` widget to create a clay-like container:

```dart
ClayContainer(
  child: Text('Hello, World!'),
  color: Colors.blue,
  height: 100,
  width: 100,
)
```

### Customization

The `ClayContainer` widget can be customized using various properties:

*   `color`: The color of the container.
*   `height`: The height of the container.
*   `width`: The width of the container.
*   `padding`: The padding of the container.
*   `shape`: The shape of the container (rounded or rectangular).
*   `gradient`: The gradient of the container.
*   `shadow`: The shadow of the container.

### Platform-Specific Details

The `clay_containers` package works on both Android and iOS platforms.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:clay_containers/clay_containers.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Clay Containers Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Clay Containers Demo'),
      ),
      body: Center(
        child: ClayContainer(
          // Create a clay-like container with a blue color
          color: Colors.blue,
          // Set the height and width of the container
          height: 200,
          width: 200,
          // Set the padding of the container
          padding: EdgeInsets.all(20),
          // Set the shape of the container to rounded
          shape: ClayContainerShape.rounded,
          // Set the gradient of the container
          gradient: LinearGradient(
            colors: [
              Colors.blue,
              Colors.blue[200],
            ],
          ),
          // Set the shadow of the container
          shadow: ClayShadow(
            color: Colors.grey,
            spread: 5,
            blur: 10,
          ),
          // Add a child to the container
          child: Text(
            'Hello, World!',
            style: TextStyle(
              fontSize: 24,
              color: Colors.white,
            ),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a material app with a blue theme.
// 2. The user is then presented with a home page that contains a scaffold with an app bar and a body.
// 3. The body of the scaffold contains a center widget that contains a clay container.
// 4. The clay container is customized with a blue color, a height and width of 200, a padding of 20, a rounded shape, a gradient, and a shadow.
// 5. The clay container contains a text widget with the text 'Hello, World!' in a white color and a font size of 24.
// 6. The user can interact with the clay container by tapping on it, but it does not respond to any user input.
// 7. The app does not contain any other features or functionality beyond displaying the clay container.

```

<-- END_MAIN -->