```markdown
<!-- START_DESCRIPTION -->
# Carbon Icons Flutter Package

The **carbon_icons** Flutter package provides a comprehensive set of icons from the Carbon Design System, which is widely used in various applications for its clean and modern aesthetic. This package is particularly useful for developers looking to maintain a consistent design language across their applications while leveraging the extensive icon library provided by Carbon.

## When to Use This Package

You should consider using the **carbon_icons** package when:
- You are developing applications that require a modern and cohesive design.
- You want to utilize a wide range of icons that are easily customizable and scalable.
- You are working on projects that adhere to the Carbon Design System, ensuring consistency with other Carbon-based applications.

## Features

- **Extensive Icon Library**: Access to a large collection of icons that cover various use cases.
- **Customizable**: Icons can be easily styled with different colors, sizes, and other properties.
- **Easy Integration**: Simple to add to your Flutter project and use within your widgets.

Overall, the **carbon_icons** package is an excellent choice for Flutter developers looking to enhance their applications with high-quality icons that align with modern design principles.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the Carbon Icons Package

## Step 1: Adding the Dependency

To get started with the **carbon_icons** package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` and add the following line under dependencies:

```yaml
dependencies:
  flutter:
    sdk: flutter
  carbon_icons: ^latest_version
```

Make sure to replace `latest_version` with the most recent version of the package available on [pub.dev](https://pub.dev/packages/carbon_icons).

## Step 2: Running Flutter Packages Get

After adding the dependency, run the following command in your terminal to install the package:

```bash
flutter pub get
```

## Step 3: Importing the Package

In your Dart file where you want to use the icons, import the package:

```dart
import 'package:carbon_icons/carbon_icons.dart';
```

## Step 4: Using Icons in Your Widgets

You can now use the icons in your Flutter widgets. Hereâ€™s an example of how to use a Carbon icon in a `IconButton`:

```dart
IconButton(
  icon: Icon(CarbonIcons.add),
  onPressed: () {
    // Your action here
  },
)
```

## Platform-Specific Details

### Android

For Android, ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

```gradle
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
        ...
    }
}
```

### iOS

For iOS, make sure to set the deployment target in your `ios/Podfile`:

```ruby
platform :ios, '10.0'
```

## Optimizations

- Use the `Icon` widget to customize the size and color of the icons as needed.
- Consider using `IconTheme` to apply a consistent style across your application.

With these steps, you are now ready to use the **carbon_icons** package in your Flutter application!
<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using Carbon Icons

```dart
import 'package:flutter/material.dart';
import 'package:carbon_icons/carbon_icons.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Carbon Icons Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Carbon Icons Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Displaying a Carbon icon
              Icon(
                CarbonIcons.add,
                size: 50.0, // Setting the size of the icon
                color: Colors.blue, // Setting the color of the icon
              ),
              SizedBox(height: 20), // Adding space between the icon and button
              // IconButton to trigger an action
              IconButton(
                icon: Icon(CarbonIcons.delete),
                onPressed: () {
                  // Action to perform when the button is pressed
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Delete action triggered!')),
                  );
                },
                tooltip: 'Delete', // Tooltip for the button
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function starts the app by calling runApp with the RealFlutter widget.
// 2. RealFlutter is a StatelessWidget that builds the MaterialApp.
// 3. The MaterialApp contains a Scaffold with an AppBar and a Center widget.
// 4. Inside the Center widget, a Column is used to arrange the icon and button vertically.
// 5. The first child of the Column is an Icon widget displaying the 'add' icon from Carbon.
// 6. A SizedBox is used to add space between the icon and the button.
// 7. The second child is an IconButton that displays the 'delete' icon.
// 8. When the IconButton is pressed, a SnackBar is shown with a message indicating the action.
```
<!-- END_MAIN -->
```

This structured blog provides a comprehensive overview of the **carbon_icons** Flutter package, guiding users through its features, setup, and practical usage with a complete example.