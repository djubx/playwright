<-- START_DESCRIPTION -->

# Multi Image Crop Flutter Package
=====================================

The `multi_image_crop` Flutter package is a powerful tool for cropping multiple images in a single screen. It provides a simple and intuitive interface for users to select and crop multiple images, making it a great addition to any app that requires image editing.

### When to Use This Package

This package is perfect for apps that require users to upload multiple images, such as:

* Social media apps
* E-commerce apps
* Photo editing apps
* Real estate apps

### Features

* Crop multiple images in a single screen
* Simple and intuitive interface
* Supports both Android and iOS platforms
* Customizable crop aspect ratios
* Customizable crop overlay

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `multi_image_crop` package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

```yml
dependencies:
  flutter:
    sdk: flutter
  multi_image_crop: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:multi_image_crop/multi_image_crop.dart';
```

### Step 3: Create a MultiImageCrop Widget

```dart
MultiImageCrop(
  images: [
    'image1.jpg',
    'image2.jpg',
    'image3.jpg',
  ],
  aspectRatios: [
    CropAspectRatio(ratioX: 1, ratioY: 1),
    CropAspectRatio(ratioX: 16, ratioY: 9),
  ],
)
```

### Platform-Specific Details

* Android: Make sure to add the following permissions to your AndroidManifest.xml file:
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```
* iOS: Make sure to add the following permissions to your Info.plist file:
```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library to crop images</string>
```

### Optimizations

* To improve performance, make sure to compress the images before cropping them.
* To improve user experience, make sure to provide a clear and concise tutorial on how to use the multi-image crop feature.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:multi_image_crop/multi_image_crop.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Multi Image Crop Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<String> _images = [
    'image1.jpg',
    'image2.jpg',
    'image3.jpg',
  ];

  List<CropAspectRatio> _aspectRatios = [
    CropAspectRatio(ratioX: 1, ratioY: 1),
    CropAspectRatio(ratioX: 16, ratioY: 9),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Multi Image Crop Demo'),
      ),
      body: Center(
        child: MultiImageCrop(
          images: _images,
          aspectRatios: _aspectRatios,
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget is a stateless widget that returns a MaterialApp widget with a title and a theme.
// The home property of the MaterialApp widget is set to the MyHomePage widget.
// The MyHomePage widget is a stateful widget that returns a Scaffold widget with an AppBar and a body.
// The body of the Scaffold widget is a Center widget that contains a MultiImageCrop widget.
// The MultiImageCrop widget is passed a list of images and a list of aspect ratios.
// The user can then select and crop multiple images using the MultiImageCrop widget.
```

<-- END_MAIN -->