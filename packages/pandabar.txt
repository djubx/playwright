<-- START_DESCRIPTION -->

# Pandabar Flutter Package
The Pandabar Flutter package is a customizable bottom navigation bar that allows you to add a sleek and modern touch to your Flutter app. It provides a range of features, including customizable colors, icons, and animation styles.

## When to Use Pandabar
Pandabar is ideal for apps that require a bottom navigation bar with a modern and customizable design. It's perfect for apps that need to display multiple navigation options at the bottom of the screen.

## Features
Some of the key features of Pandabar include:

* Customizable colors and icons
* Animation styles for navigation
* Support for multiple navigation options
* Easy to use and integrate into your Flutter app

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up Pandabar
To use Pandabar in your Flutter app, follow these steps:

1. Add the Pandabar package to your `pubspec.yaml` file:
```yml
dependencies:
  pandabar: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the Pandabar package in your Dart file:
```dart
import 'package:pandabar/pandabar.dart';
```
4. Create a new instance of the `Pandabar` widget and customize it as needed:
```dart
Pandabar(
  backgroundColor: Colors.white,
  iconColor: Colors.black,
  tabs: [
    PandaTab(
      icon: Icons.home,
      title: 'Home',
    ),
    PandaTab(
      icon: Icons.settings,
      title: 'Settings',
    ),
  ],
)
```
5. Add the `Pandabar` widget to your app's `Scaffold`:
```dart
Scaffold(
  bottomNavigationBar: Pandabar(
    // ...
  ),
)
```
### Platform-Specific Details
Pandabar works on both Android and iOS platforms. However, you may need to adjust the styling and layout to fit your app's specific design.

### Configurations and Optimizations
You can customize the Pandabar widget to fit your app's specific needs. Some common configurations include:

* Changing the background color and icon color
* Adding custom icons and titles
* Adjusting the animation style and duration

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:pandabar/pandabar.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Pandabar Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _currentIndex = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Pandabar Demo'),
      ),
      body: IndexedStack(
        index: _currentIndex,
        children: [
          Center(
            child: Text('Home Page'),
          ),
          Center(
            child: Text('Settings Page'),
          ),
        ],
      ),
      bottomNavigationBar: Pandabar(
        backgroundColor: Colors.white,
        iconColor: Colors.black,
        tabs: [
          PandaTab(
            icon: Icons.home,
            title: 'Home',
          ),
          PandaTab(
            icon: Icons.settings,
            title: 'Settings',
          ),
        ],
        onChange: (index) {
          setState(() {
            _currentIndex = index;
          });
        },
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget builds a MaterialApp with a title and theme.
// The home property of the MaterialApp is set to an instance of the MyHomePage widget.
// The MyHomePage widget is a stateful widget that builds a Scaffold with an AppBar and a body.
// The body of the Scaffold is an IndexedStack that displays the current page based on the _currentIndex variable.
// The bottomNavigationBar property of the Scaffold is set to an instance of the Pandabar widget.
// The Pandabar widget is customized with a background color, icon color, and tabs.
// The onChange property of the Pandabar widget is set to a callback function that updates the _currentIndex variable when a tab is selected.
// When the _currentIndex variable is updated, the IndexedStack is rebuilt to display the new page.

```

<-- END_MAIN -->