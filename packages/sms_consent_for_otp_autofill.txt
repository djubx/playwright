<-- START_DESCRIPTION -->

**sms_consent_for_otp_autofill Flutter Package**
==============================================

The `sms_consent_for_otp_autofill` Flutter package is a utility library that simplifies the process of requesting SMS consent for OTP autofill on Android and iOS devices. This package is particularly useful when developing applications that require users to verify their phone numbers via OTP.

**When to Use This Package**
---------------------------

You should use this package when:

* You need to request SMS consent for OTP autofill on Android and iOS devices.
* You want to simplify the process of handling SMS consent and OTP autofill in your Flutter application.

**Features**
------------

The `sms_consent_for_otp_autofill` package provides the following features:

* Simplifies the process of requesting SMS consent for OTP autofill on Android and iOS devices.
* Provides a unified API for handling SMS consent and OTP autofill across both platforms.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setup and Usage**
-------------------

To use the `sms_consent_for_otp_autofill` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  sms_consent_for_otp_autofill: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:sms_consent_for_otp_autofill/sms_consent_for_otp_autofill.dart';
```
### Step 3: Request SMS Consent

Request SMS consent using the `requestSmsConsent` method:
```dart
await SmsConsentForOtpAutofill.requestSmsConsent();
```
This method will prompt the user to grant SMS consent.

### Step 4: Handle OTP Autofill

Handle OTP autofill using the `listenForOtp` method:
```dart
SmsConsentForOtpAutofill.listenForOtp((otp) {
  // Handle OTP autofill here
});
```
This method will listen for OTP messages and call the provided callback when an OTP message is received.

### Platform-Specific Details

#### Android

On Android, the `sms_consent_for_otp_autofill` package uses the `android.permission.RECEIVE_SMS` permission to receive SMS messages. You must add this permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.RECEIVE_SMS" />
```
#### iOS

On iOS, the `sms_consent_for_otp_autofill` package uses the `NSUserActivity` class to handle OTP autofill. You must add the following code to your `Info.plist` file:
```xml
<key>NSUserActivityTypes</key>
<array>
    <string>INStartOtpAuth</string>
</array>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:sms_consent_for_otp_autofill/sms_consent_for_otp_autofill.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'SMS Consent for OTP Autofill Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('SMS Consent for OTP Autofill Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: () async {
                // Request SMS consent
                await SmsConsentForOtpAutofill.requestSmsConsent();
              },
              child: Text('Request SMS Consent'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Listen for OTP autofill
                SmsConsentForOtpAutofill.listenForOtp((otp) {
                  // Handle OTP autofill here
                  print('OTP received: $otp');
                });
              },
              child: Text('Listen for OTP Autofill'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and is presented with two buttons: "Request SMS Consent" and "Listen for OTP Autofill".
// 2. When the user clicks the "Request SMS Consent" button, the app requests SMS consent using the `requestSmsConsent` method.
// 3. If the user grants SMS consent, the app can listen for OTP messages using the `listenForOtp` method.
// 4. When an OTP message is received, the app calls the provided callback with the OTP code.
// 5. The app can then handle the OTP autofill by displaying the OTP code to the user or by automatically filling in the OTP code in a text field.

// Summary:
// The `sms_consent_for_otp_autofill` package simplifies the process of requesting SMS consent and handling OTP autofill in Flutter apps.
// The package provides a unified API for handling SMS consent and OTP autofill across both Android and iOS platforms.
```

<-- END_MAIN -->