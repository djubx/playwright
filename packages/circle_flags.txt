<-- START_DESCRIPTION -->

Circle Flags Flutter Package
==========================

The `circle_flags` Flutter package is a lightweight library that allows you to easily display circular flags in your Flutter application. It provides a simple and customizable way to show flags, making it perfect for applications that require country or language selection.

When to Use
------------

You can use the `circle_flags` package in various scenarios, such as:

* Country or language selection
* User profile or settings
* Internationalization and localization

Features
--------

* Customizable flag size and border radius
* Support for over 200 countries and territories
* Easy to use and integrate

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `circle_flags` package, follow these steps:

### Step 1: Add the package to your pubspec.yaml file

```yml
dependencies:
  flutter:
    sdk: flutter
  circle_flags: ^1.0.0
```

### Step 2: Import the package in your Dart file

```dart
import 'package:circle_flags/circle_flags.dart';
```

### Step 3: Use the `CircleFlag` widget

```dart
CircleFlag(
  countryCode: 'US',
  size: 24,
  borderRadius: 4,
)
```

Platform-Specific Details
-------------------------

### Android

No additional configuration is required for Android.

### iOS

No additional configuration is required for iOS.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:circle_flags/circle_flags.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Circle Flags Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Circle Flags Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Display a single flag
              CircleFlag(
                countryCode: 'US',
                size: 48,
                borderRadius: 8,
              ),
              SizedBox(height: 16),
              // Display multiple flags
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  CircleFlag(
                    countryCode: 'CA',
                    size: 24,
                    borderRadius: 4,
                  ),
                  SizedBox(width: 8),
                  CircleFlag(
                    countryCode: 'MX',
                    size: 24,
                    borderRadius: 4,
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and runs the `RealFlutter` widget.
// 2. The `RealFlutter` widget builds the app's UI using the `MaterialApp` and `Scaffold` widgets.
// 3. The app's UI displays a single flag and multiple flags using the `CircleFlag` widget.
// 4. The user can view the flags and interact with the app as needed.
// Summary: The code flows by building the app's UI, displaying flags, and allowing user interaction.
```

<-- END_MAIN -->