<-- START_DESCRIPTION -->

# Simple Web Camera Flutter Package
=====================================

The `simple_web_camera` Flutter package provides a simple and easy-to-use interface for accessing the device's camera and displaying a live preview. This package is ideal for applications that require a basic camera functionality, such as taking photos or recording videos.

### Features

*   Supports both Android and iOS platforms
*   Provides a live camera preview
*   Allows taking photos and recording videos
*   Supports switching between front and rear cameras
*   Provides a simple and intuitive API

### When to Use

This package is suitable for applications that require basic camera functionality, such as:

*   Social media apps that allow users to take and share photos
*   E-commerce apps that require users to take photos of products
*   Video conferencing apps that require access to the device's camera

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Simple Web Camera Package
===========================================================

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  simple_web_camera: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:simple_web_camera/simple_web_camera.dart';
```

### Step 3: Create a Camera Widget

Create a `CameraWidget` to display the live camera preview:

```dart
CameraWidget(
  onCameraCreated: (camera) {
    // Handle camera creation
  },
)
```

### Step 4: Handle Camera Creation

Handle the `onCameraCreated` callback to access the camera object:

```dart
onCameraCreated: (camera) {
  // Access the camera object
  camera.takePhoto();
}
```

### Platform-Specific Details

#### Android

*   Add the following permission to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.CAMERA" />
```
*   Handle the camera permission request in your Dart file:

    ```dart
import 'package:permission_handler/permission_handler.dart';

Future<void> requestCameraPermission() async {
  final permission = await Permission.camera.request();
  if (permission.isGranted) {
    // Handle camera permission granted
  } else {
    // Handle camera permission denied
  }
}
```

#### iOS

*   Add the following key to your `Info.plist` file:

    ```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to take photos.</string>
```
*   Handle the camera permission request in your Dart file:

    ```dart
import 'package:permission_handler/permission_handler.dart';

Future<void> requestCameraPermission() async {
  final permission = await Permission.camera.request();
  if (permission.isGranted) {
    // Handle camera permission granted
  } else {
    // Handle camera permission denied
  }
}
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:simple_web_camera/simple_web_camera.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Simple Web Camera Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Camera _camera;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Simple Web Camera Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Create a CameraWidget to display the live camera preview
            CameraWidget(
              onCameraCreated: (camera) {
                // Handle camera creation
                _camera = camera;
              },
            ),
            SizedBox(height: 20),
            // Create a button to take a photo
            ElevatedButton(
              onPressed: () {
                // Take a photo using the camera object
                _camera.takePhoto();
              },
              child: Text('Take Photo'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a live camera preview.
// 2. The user can take a photo by pressing the "Take Photo" button.
// 3. The camera object is used to take the photo.
// 4. The photo is then saved to the device's gallery.
```

// The code above creates a simple camera app that allows the user to take photos.
// The app uses the `simple_web_camera` package to access the device's camera and display a live preview.
// The app also handles camera creation and photo taking using the camera object.
// The app is built using Flutter and uses the Material Design theme.

<-- END_MAIN -->