<-- START_DESCRIPTION -->

# Number Precision Flutter Package
=====================================

The `number_precision` Flutter package is a utility library that provides a simple way to handle numerical precision in your Flutter applications. It allows you to easily format numbers to a specific decimal place, perform arithmetic operations with precise control over rounding, and more.

### When to Use This Package

This package is particularly useful when working with financial or scientific applications where numerical precision is crucial. For example, when displaying currency amounts or performing calculations involving decimal numbers, this package can help ensure accurate results.

### Features

*   Format numbers to a specific decimal place
*   Perform arithmetic operations with precise control over rounding
*   Supports various rounding modes (e.g., half up, half down, ceiling, floor)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Number Precision Package
=============================================

### Step 1: Add the Package to Your Project

To use the `number_precision` package, add it to your project's `pubspec.yaml` file:

```yml
dependencies:
  number_precision: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:number_precision/number_precision.dart';
```

### Step 3: Use the Package

You can now use the package's functions to format numbers and perform arithmetic operations. For example:

```dart
void main() {
  // Format a number to 2 decimal places
  double formattedNumber = NumberPrecision.format(123.456, 2);
  print(formattedNumber); // Output: 123.46

  // Perform arithmetic operations with precise control over rounding
  double result = NumberPrecision.add(123.456, 78.901, 2);
  print(result); // Output: 202.36
}
```

### Platform-Specific Details

This package works on both Android and iOS platforms without any additional configuration.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:number_precision/number_precision.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Number Precision Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  double _number1 = 123.456;
  double _number2 = 78.901;
  double _result = 0;

  void _formatNumber() {
    // Format the number to 2 decimal places
    double formattedNumber = NumberPrecision.format(_number1, 2);
    print('Formatted Number: $formattedNumber');
  }

  void _performArithmeticOperation() {
    // Perform arithmetic operation with precise control over rounding
    double result = NumberPrecision.add(_number1, _number2, 2);
    setState(() {
      _result = result;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Number Precision Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Number 1: $_number1',
              style: TextStyle(fontSize: 24),
            ),
            Text(
              'Number 2: $_number2',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _formatNumber,
              child: Text('Format Number'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: _performArithmeticOperation,
              child: Text('Perform Arithmetic Operation'),
            ),
            SizedBox(height: 20),
            Text(
              'Result: $_result',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a screen displaying two numbers and two buttons.
// 2. When the user clicks the "Format Number" button, the app formats the first number to 2 decimal places using the NumberPrecision.format function.
// 3. When the user clicks the "Perform Arithmetic Operation" button, the app performs an arithmetic operation (addition) on the two numbers using the NumberPrecision.add function, with precise control over rounding.
// 4. The result of the arithmetic operation is displayed on the screen.
// 5. The user can repeat steps 2-4 as desired.

```

<-- END_MAIN -->