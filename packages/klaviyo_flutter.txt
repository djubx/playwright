<-- START_DESCRIPTION -->

# klaviyo_flutter Package Overview
=====================================

The `klaviyo_flutter` package is a Flutter wrapper for the Klaviyo SDK, allowing you to integrate Klaviyo's marketing automation and email marketing capabilities into your Flutter app. With this package, you can track user behavior, create profiles, and trigger automated workflows.

### When to Use This Package

Use this package when you want to:

* Track user behavior and create profiles in Klaviyo
* Trigger automated workflows based on user actions
* Send targeted emails and push notifications to your users
* Integrate Klaviyo's marketing automation capabilities into your Flutter app

### Features

* Track user behavior and create profiles
* Trigger automated workflows
* Send targeted emails and push notifications
* Support for Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
=====================

### Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  klaviyo_flutter: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:klaviyo_flutter/klaviyo_flutter.dart';
```
### Step 3: Initialize the SDK

Initialize the SDK with your Klaviyo API key:
```dart
KlaviyoFlutter.init('YOUR_API_KEY');
```
### Step 4: Track User Behavior

Track user behavior using the `track` method:
```dart
KlaviyoFlutter.track('User logged in');
```
### Platform-Specific Details

* Android: Add the following line to your `AndroidManifest.xml` file:
```xml
<application>
  ...
  <meta-data android:name="klaviyo.api.key" android:value="YOUR_API_KEY" />
</application>
```
* iOS: Add the following line to your `Info.plist` file:
```xml
<key>KlaviyoApiKey</key>
<string>YOUR_API_KEY</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:klaviyo_flutter/klaviyo_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Klaviyo Flutter Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  void initState() {
    super.initState();
    // Initialize the SDK with your Klaviyo API key
    KlaviyoFlutter.init('YOUR_API_KEY');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Klaviyo Flutter Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Track user behavior
            ElevatedButton(
              onPressed: () {
                KlaviyoFlutter.track('User logged in');
              },
              child: Text('Track User Behavior'),
            ),
            // Create a profile
            ElevatedButton(
              onPressed: () {
                KlaviyoFlutter.createProfile({
                  'email': 'user@example.com',
                  'first_name': 'John',
                  'last_name': 'Doe',
                });
              },
              child: Text('Create Profile'),
            ),
            // Trigger an automated workflow
            ElevatedButton(
              onPressed: () {
                KlaviyoFlutter.triggerWorkflow('workflow_id');
              },
              child: Text('Trigger Workflow'),
            ),
          ],
        ),
      ),
    );
  }
}

// The app flow is as follows:
// 1. The user opens the app and the SDK is initialized with the Klaviyo API key.
// 2. The user clicks the "Track User Behavior" button, which tracks the user's behavior using the `track` method.
// 3. The user clicks the "Create Profile" button, which creates a profile using the `createProfile` method.
// 4. The user clicks the "Trigger Workflow" button, which triggers an automated workflow using the `triggerWorkflow` method.

// Summary: This code demonstrates how to use the Klaviyo Flutter package to track user behavior, create profiles, and trigger automated workflows.
```

<-- END_MAIN -->