<-- START_DESCRIPTION -->
# Flutter Pax Printer Utility Package
=====================================

The `flutter_pax_printer_utility` package is a utility library for Flutter that enables communication with PAX printers. It provides a simple and efficient way to print receipts, tickets, and other documents from your Flutter app.

### When to Use This Package

This package is ideal for apps that require printing capabilities, such as:

* Point of Sale (POS) systems
* Ticketing systems
* Receipt printing
* Label printing

### Features

* Supports PAX printers
* Easy to use API
* Fast and efficient printing
* Supports multiple print formats (e.g. text, image, barcode)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Setup and Usage
================

### Step 1: Add the Package to Your Pubspec.yaml File

```yml
dependencies:
  flutter_pax_printer_utility: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:flutter_pax_printer_utility/flutter_pax_printer_utility.dart';
```

### Step 3: Initialize the Printer

```dart
PaxPrinter _printer = PaxPrinter();
```

### Step 4: Connect to the Printer

```dart
_printer.connect('your_printer_ip_address');
```

### Step 5: Print a Document

```dart
_printer.printText('Hello, World!');
```

### Platform-Specific Details

#### Android

* Make sure to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```

#### iOS

* Make sure to add the following lines to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:flutter_pax_printer_utility/flutter_pax_printer_utility.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Pax Printer Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  PaxPrinter _printer = PaxPrinter();

  @override
  void initState() {
    super.initState();
    _connectToPrinter();
  }

  Future<void> _connectToPrinter() async {
    // Connect to the printer
    await _printer.connect('your_printer_ip_address');
  }

  Future<void> _printDocument() async {
    // Print a document
    await _printer.printText('Hello, World!');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Pax Printer Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _printDocument,
              child: Text('Print Document'),
            ),
          ],
        ),
      ),
    );
  }
}
```
// The app starts by running the `main` function, which creates a new instance of the `MyApp` widget.
// The `MyApp` widget builds a `MaterialApp` with a `MyHomePage` widget as its home page.
// The `MyHomePage` widget is a stateful widget that connects to the printer when it is initialized.
// When the user presses the "Print Document" button, the `_printDocument` function is called, which prints a document using the `PaxPrinter` instance.
// The app uses the `PaxPrinter` utility library to communicate with the PAX printer.

<-- END_MAIN -->