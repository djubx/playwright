<-- START_DESCRIPTION -->

# Bones API Flutter Package
================================

The Bones API Flutter package is a powerful tool for building robust and scalable Flutter applications. It provides a simple and intuitive way to manage state, handle networking, and interact with device hardware.

## When to Use Bones API

Bones API is ideal for building complex Flutter applications that require robust state management, networking, and device hardware interactions. It's particularly well-suited for applications that require:

* Robust state management
* Networking and API interactions
* Device hardware interactions (e.g., camera, GPS, etc.)

## Features

Bones API provides a wide range of features, including:

* Robust state management using the BLoC pattern
* Networking and API interactions using a simple and intuitive API
* Device hardware interactions (e.g., camera, GPS, etc.)
* Support for both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up Bones API
=====================

To use Bones API in your Flutter application, follow these steps:

### Step 1: Add Bones API to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  bones_api: ^1.0.0
```
### Step 2: Import Bones API

Import Bones API in your Dart file:
```dart
import 'package:bones_api/bones_api.dart';
```
### Step 3: Initialize Bones API

Initialize Bones API in your `main` function:
```dart
void main() {
  BonesApi.init();
  runApp(MyApp());
}
```
### Platform-Specific Configurations

#### Android

To use Bones API on Android, you'll need to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.CAMERA" />
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
```
#### iOS

To use Bones API on iOS, you'll need to add the following permissions to your `Info.plist` file:
```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to take photos.</string>
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs location access to get your current location.</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:bones_api/bones_api.dart';

void main() {
  // Initialize Bones API
  BonesApi.init();

  // Run the app
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Create a Bones API instance
  final _bonesApi = BonesApi.instance;

  // Create a text controller to display the response
  final _textController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Real Flutter',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Real Flutter'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Create a button to make a GET request
              ElevatedButton(
                onPressed: _makeGetRequest,
                child: Text('Make GET Request'),
              ),
              // Create a button to make a POST request
              ElevatedButton(
                onPressed: _makePostRequest,
                child: Text('Make POST Request'),
              ),
              // Create a text field to display the response
              TextField(
                controller: _textController,
                decoration: InputDecoration(
                  border: OutlineInputBorder(),
                  labelText: 'Response',
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  // Make a GET request using Bones API
  void _makeGetRequest() async {
    // Create a GET request
    final response = await _bonesApi.get('https://jsonplaceholder.typicode.com/todos/1');

    // Display the response
    _textController.text = response.body;
  }

  // Make a POST request using Bones API
  void _makePostRequest() async {
    // Create a POST request
    final response = await _bonesApi.post('https://jsonplaceholder.typicode.com/todos', {
      'title': 'New Todo',
      'completed': false,
    });

    // Display the response
    _textController.text = response.body;
  }
}

// The app starts by initializing Bones API and running the RealFlutter widget.
// The RealFlutter widget creates a Bones API instance and a text controller to display the response.
// The widget builds a Material app with two buttons to make GET and POST requests.
// When a button is pressed, the corresponding request is made using Bones API.
// The response is then displayed in the text field.
```

<-- END_MAIN -->