<-- START_DESCRIPTION -->

# Flutter Svg Icons Package
================================

The `flutter_svg_icons` package is a powerful tool for working with SVG icons in Flutter applications. It provides a simple and efficient way to use SVG icons in your app, allowing for scalable and customizable graphics.

## When to Use This Package
---------------------------

This package is ideal for apps that require a high level of customization and scalability in their icons. It is particularly useful for apps that need to display icons in various sizes and resolutions, such as:

* Apps with complex graphics and illustrations
* Apps that require custom icon designs
* Apps that need to display icons in various sizes and resolutions

## Features
------------

The `flutter_svg_icons` package offers the following features:

* Support for SVG icons
* Scalable and customizable graphics
* Simple and efficient API
* Compatible with Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_svg_icons` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_svg_icons: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:flutter_svg_icons/flutter_svg_icons.dart';
```
## Platform-Specific Details
---------------------------

### Android

No additional configuration is required for Android.

### iOS

To use the package on iOS, you need to add the following lines to your `Info.plist` file:
```xml
<key>UIAppFonts</key>
<array>
  <string>icons.ttf</string>
</array>
```
## Using the Package
---------------------

To use the package, simply create an instance of the `SvgIcon` widget and pass in the SVG icon data:
```dart
SvgIcon(
  iconData: SvgIcons.heart,
  size: 24,
  color: Colors.red,
)
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_svg_icons/flutter_svg_icons.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Svg Icons Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter Svg Icons Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Create an SvgIcon widget with a heart icon
              SvgIcon(
                iconData: SvgIcons.heart,
                size: 48,
                color: Colors.red,
              ),
              SizedBox(height: 24),
              // Create an SvgIcon widget with a star icon
              SvgIcon(
                iconData: SvgIcons.star,
                size: 48,
                color: Colors.yellow,
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a Material app with a title and a home screen.
// 2. The home screen contains a Scaffold with an AppBar and a body.
// 3. The body contains a Center widget with a Column widget.
// 4. The Column widget contains two SvgIcon widgets, one with a heart icon and one with a star icon.
// 5. The SvgIcon widgets are created with the SvgIcons.heart and SvgIcons.star icon data, respectively.
// 6. The icons are displayed in the center of the screen with a size of 48 and a color of red and yellow, respectively.
```

// In summary, this code creates a simple Material app that displays two SVG icons, a heart and a star, in the center of the screen. The icons are created using the SvgIcon widget and the SvgIcons class, which provides a simple and efficient way to work with SVG icons in Flutter.