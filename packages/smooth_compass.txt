<-- START_DESCRIPTION -->

Smooth Compass Flutter Package
==============================

The `smooth_compass` Flutter package provides a simple and efficient way to access the device's compass sensor, allowing you to create apps that respond to the device's orientation and movement.

When to Use This Package
------------------------

This package is ideal for apps that require precise orientation data, such as:

* Navigation apps
* Augmented reality apps
* Games that require device orientation
* Fitness apps that track movement and orientation

Features
--------

* Access to the device's compass sensor data
* Support for both Android and iOS platforms
* Simple and easy-to-use API

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `smooth_compass` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  smooth_compass: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:smooth_compass/smooth_compass.dart';
```
### Step 3: Create a Compass Instance

Create a new instance of the `Compass` class:
```dart
Compass _compass = Compass();
```
### Step 4: Start Listening to Compass Data

Start listening to compass data using the `startListening` method:
```dart
_compass.startListening((CompassEvent event) {
  // Handle compass data here
});
```
### Step 5: Stop Listening to Compass Data

Stop listening to compass data using the `stopListening` method:
```dart
_compass.stopListening();
```
Platform-Specific Details
-------------------------

### Android

* Make sure to add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
```
* If you're targeting Android 10 or later, you'll need to add the following code to your `MainActivity` class:
```java
@Override
protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(savedInstanceState);
  // ...
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
    ActivityCompat.requestPermissions(this, new String[] { Manifest.permission.ACTIVITY_RECOGNITION }, 0);
  }
}
```
### iOS

* Make sure to add the following key to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location services to work properly</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:smooth_compass/smooth_compass.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Smooth Compass Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Compass _compass = Compass();
  double _heading = 0;

  @override
  void initState() {
    super.initState();
    _compass.startListening((CompassEvent event) {
      setState(() {
        _heading = event.heading;
      });
    });
  }

  @override
  void dispose() {
    _compass.stopListening();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Smooth Compass Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Heading: $_heading',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}
```

// This code creates a simple Flutter app that displays the device's heading using the smooth_compass package.
// The app starts listening to compass data in the initState method and stops listening in the dispose method.
// The heading is displayed in the center of the screen and is updated in real-time as the device moves.
// The app uses the Material theme and has a blue primary swatch.
// The smooth_compass package is used to access the device's compass sensor data.

<-- END_MAIN -->