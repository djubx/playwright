<-- START_DESCRIPTION -->

# Firebase Auth Utility Package
================================

The `firebase_auth_utility` package is a Flutter utility library that simplifies the process of authenticating users with Firebase Authentication. It provides a set of convenient functions and widgets to handle user authentication, including email/password, Google, Facebook, and phone authentication.

## When to Use This Package
---------------------------

This package is ideal for Flutter developers who want to integrate Firebase Authentication into their app without having to handle the underlying complexities. It's perfect for apps that require user authentication, such as social media, e-commerce, and productivity apps.

## Features
------------

*   Email/password authentication
*   Google authentication
*   Facebook authentication
*   Phone authentication
*   Support for multiple authentication providers
*   Easy-to-use API for authenticating users

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `firebase_auth_utility` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  firebase_auth_utility: ^1.0.0
```
### Step 2: Install the Package

Run the following command in your terminal:
```
flutter pub get
```
### Step 3: Import the Package

Import the package in your Dart file:
```dart
import 'package:firebase_auth_utility/firebase_auth_utility.dart';
```
### Step 4: Initialize Firebase

Initialize Firebase in your app:
```dart
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}
```
### Step 5: Use the Package

Use the package to authenticate users:
```dart
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Firebase Auth Utility'),
      ),
      body: Center(
        child: ElevatedButton(
          child: Text('Login with Google'),
          onPressed: () async {
            final user = await FirebaseAuthUtility.signInWithGoogle();
            print(user.uid);
          },
        ),
      ),
    );
  }
}
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:firebase_auth_utility/firebase_auth_utility.dart';

void main() async {
  // Initialize Firebase
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();

  // Run the app
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Firebase Auth Utility',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Firebase Auth Utility'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Login with Google button
              ElevatedButton(
                child: Text('Login with Google'),
                onPressed: () async {
                  // Sign in with Google
                  final user = await FirebaseAuthUtility.signInWithGoogle();
                  print(user.uid);
                },
              ),
              SizedBox(height: 20),

              // Login with Facebook button
              ElevatedButton(
                child: Text('Login with Facebook'),
                onPressed: () async {
                  // Sign in with Facebook
                  final user = await FirebaseAuthUtility.signInWithFacebook();
                  print(user.uid);
                },
              ),
              SizedBox(height: 20),

              // Login with email and password button
              ElevatedButton(
                child: Text('Login with Email and Password'),
                onPressed: () async {
                  // Sign in with email and password
                  final user = await FirebaseAuthUtility.signInWithEmailAndPassword(
                    email: 'example@example.com',
                    password: 'password',
                  );
                  print(user.uid);
                },
              ),
              SizedBox(height: 20),

              // Phone authentication button
              ElevatedButton(
                child: Text('Phone Authentication'),
                onPressed: () async {
                  // Sign in with phone number
                  final user = await FirebaseAuthUtility.signInWithPhoneNumber(
                    phoneNumber: '+1234567890',
                  );
                  print(user.uid);
                },
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The app starts by initializing Firebase and then running the RealFlutter widget.
// The RealFlutter widget displays a column of buttons for different authentication methods.
// When a button is pressed, the corresponding authentication method is called.
// The authentication method returns a user object, which is then printed to the console.
// The app uses the FirebaseAuthUtility class to handle authentication, making it easy to switch between different authentication methods.
```

<-- END_MAIN -->