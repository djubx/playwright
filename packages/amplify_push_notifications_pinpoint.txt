<-- START_DESCRIPTION -->

# Amplify Push Notifications Pinpoint Package
=============================================

The `amplify_push_notifications_pinpoint` package is a Flutter package that enables push notifications for Android and iOS devices using Amazon Pinpoint. This package is part of the Amplify Flutter suite of packages.

## Features

*   Register and deregister devices for push notifications
*   Handle incoming push notifications
*   Display notifications in the notification shade
*   Handle notification taps

## When to Use

This package is useful when you want to send targeted notifications to your users based on their behavior, preferences, or demographics. With Amazon Pinpoint, you can create campaigns to send notifications to specific segments of your users.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  amplify_push_notifications_pinpoint: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Configure Amazon Pinpoint

Create an Amazon Pinpoint project and obtain the `appId` and `apiKey`. You can find these values in the Amazon Pinpoint console.

## Step 3: Initialize the Package

Import the package and initialize it with your `appId` and `apiKey`:

```dart
import 'package:amplify_push_notifications_pinpoint/amplify_push_notifications_pinpoint.dart';

Future<void> main() async {
  await AmplifyPushNotificationsPinpoint.initialize(
    appId: 'YOUR_APP_ID',
    apiKey: 'YOUR_API_KEY',
  );
  runApp(MyApp());
}
```

## Step 4: Register for Push Notifications

To register for push notifications, call the `register` method:

```dart
AmplifyPushNotificationsPinpoint.register();
```

This will prompt the user to grant permission for push notifications.

## Step 5: Handle Incoming Push Notifications

To handle incoming push notifications, you need to create a callback function:

```dart
AmplifyPushNotificationsPinpoint.onNotificationReceived.listen((event) {
  // Handle the notification
});
```

## Step 6: Display Notifications in the Notification Shade

To display notifications in the notification shade, you need to create a notification channel:

```dart
AmplifyPushNotificationsPinpoint.createNotificationChannel(
  channel: AndroidNotificationChannel(
    id: 'com.example.app',
    name: 'Example App',
    description: 'Example App notifications',
  ),
);
```

## Step 7: Handle Notification Taps

To handle notification taps, you need to create a callback function:

```dart
AmplifyPushNotificationsPinpoint.onNotificationTap.listen((event) {
  // Handle the notification tap
});
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:amplify_push_notifications_pinpoint/amplify_push_notifications_pinpoint.dart';

void main() async {
  // Initialize the package
  await AmplifyPushNotificationsPinpoint.initialize(
    appId: 'YOUR_APP_ID',
    apiKey: 'YOUR_API_KEY',
  );

  // Register for push notifications
  AmplifyPushNotificationsPinpoint.register();

  // Create a notification channel
  AmplifyPushNotificationsPinpoint.createNotificationChannel(
    channel: AndroidNotificationChannel(
      id: 'com.example.app',
      name: 'Example App',
      description: 'Example App notifications',
    ),
  );

  // Handle incoming push notifications
  AmplifyPushNotificationsPinpoint.onNotificationReceived.listen((event) {
    // Handle the notification
    print('Received notification: ${event.payload}');
  });

  // Handle notification taps
  AmplifyPushNotificationsPinpoint.onNotificationTap.listen((event) {
    // Handle the notification tap
    print('Notification tapped: ${event.payload}');
  });

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Example App',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Example App'),
        ),
        body: Center(
          child: Text('Example App'),
        ),
      ),
    );
  }
}
```

// The app starts by initializing the Amplify Push Notifications Pinpoint package with the appId and apiKey.
// Then, it registers for push notifications and creates a notification channel.
// When a notification is received, it is handled by the onNotificationReceived callback function.
// When a notification is tapped, it is handled by the onNotificationTap callback function.
// The app displays a simple scaffold with an app bar and a centered text.

<-- END_MAIN -->