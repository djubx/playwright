<-- START_DESCRIPTION -->

# Flutter Razorpay Web Package
================================

The `flutter_razorpay_web` package is a Flutter plugin that allows you to integrate Razorpay payment gateway into your Flutter web application. It provides a simple and secure way to accept payments from your users.

## When to Use
--------------

You can use this package when you want to accept payments from your users in your Flutter web application. It is particularly useful for e-commerce applications, subscription-based services, and any other application that requires payment processing.

## Features
------------

*   Supports multiple payment methods, including credit/debit cards, net banking, and UPI
*   Handles payment processing securely using Razorpay's API
*   Provides a customizable payment interface
*   Supports payment retries and error handling

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_razorpay_web` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_razorpay_web: ^1.0.0
```

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:flutter_razorpay_web/flutter_razorpay_web.dart';
```

### Step 3: Initialize the Package

Initialize the package with your Razorpay API key:

```dart
RazorpayWeb _razorpayWeb = RazorpayWeb(
  key: 'YOUR_API_KEY',
  secret: 'YOUR_API_SECRET',
);
```

### Step 4: Create a Payment Order

Create a payment order using the `_razorpayWeb` instance:

```dart
Map<String, dynamic> options = {
  'amount': 100,
  'currency': 'INR',
  'receipt': 'receipt_123',
};

_razorpayWeb.createOrder(options).then((orderId) {
  // Use the order ID to make the payment
});
```

### Step 5: Make the Payment

Make the payment using the `pay` method:

```dart
_razorpayWeb.pay(
  orderId: orderId,
  amount: 100,
  currency: 'INR',
);
```

### Platform-Specific Details

*   **Android:** Make sure to add the following line to your `AndroidManifest.xml` file:

    ```xml
<application
  ...
  android:usesCleartextTraffic="true"
  ...>
```

*   **iOS:** Make sure to add the following line to your `Info.plist` file:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_razorpay_web/flutter_razorpay_web.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Razorpay Web Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  RazorpayWeb _razorpayWeb;

  @override
  void initState() {
    super.initState();
    _razorpayWeb = RazorpayWeb(
      key: 'YOUR_API_KEY',
      secret: 'YOUR_API_SECRET',
    );
  }

  void _makePayment() {
    Map<String, dynamic> options = {
      'amount': 100,
      'currency': 'INR',
      'receipt': 'receipt_123',
    };

    _razorpayWeb.createOrder(options).then((orderId) {
      // Use the order ID to make the payment
      _razorpayWeb.pay(
        orderId: orderId,
        amount: 100,
        currency: 'INR',
      );
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Razorpay Web Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _makePayment,
          child: Text('Make Payment'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Make Payment" button.
// 2. The _makePayment function is called, which creates a payment order using the Razorpay API.
// 3. The payment order ID is used to make the payment using the pay method.
// 4. The user is redirected to the Razorpay payment page to complete the payment.
// 5. After the payment is complete, the user is redirected back to the application.

// Note: You should replace 'YOUR_API_KEY' and 'YOUR_API_SECRET' with your actual Razorpay API key and secret.

// Summary: This code demonstrates how to use the flutter_razorpay_web package to integrate Razorpay payment gateway into a Flutter web application.
```

<-- END_MAIN -->