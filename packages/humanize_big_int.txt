# Humanize Big Int Flutter Package

<!-- START_DESCRIPTION -->
## Description

The `humanize_big_int` Flutter package is designed to convert large integers into a more human-readable format. This is particularly useful in applications where large numbers are displayed, such as financial apps, data analytics dashboards, or any application that deals with large datasets. Instead of showing a number like `1000000`, the package can convert it to `1M`, making it easier for users to comprehend.

### Key Features:
- **Human-readable formatting**: Converts large integers into formats like `K` (thousands), `M` (millions), `B` (billions), etc.
- **Customizable**: Allows customization of the suffixes and precision of the output.
- **Easy to use**: Simple API that integrates seamlessly into Flutter applications.

### When to Use:
- When displaying large numbers in user interfaces.
- In financial applications where monetary values can be large.
- In data visualization tools where large datasets are common.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
## Tutorial

### Installation

To use the `humanize_big_int` package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` and add the following line under dependencies:

```yaml
dependencies:
  humanize_big_int: ^1.0.0
```

Then, run the following command in your terminal to install the package:

```bash
flutter pub get
```

### Platform-Specific Details

The `humanize_big_int` package is designed to work seamlessly on both Android and iOS platforms. There are no additional configurations required for either platform, making it easy to integrate into your Flutter project.

### Basic Usage

To use the package, you need to import it into your Dart file:

```dart
import 'package:humanize_big_int/humanize_big_int.dart';
```

You can then use the `humanize` method to convert large integers into a human-readable format. Hereâ€™s a simple example:

```dart
void main() {
  int largeNumber = 1000000;
  String humanized = largeNumber.humanize();
  print(humanized); // Output: 1M
}
```

This will convert the integer `1000000` into the string `1M`.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
## Complete Example

```dart
import 'package:flutter/material.dart';
import 'package:humanize_big_int/humanize_big_int.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Humanize Big Int Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Humanize Big Int Example'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Displaying a large number in human-readable format
              Text(
                '1,000,000 in human-readable format: ${1000000.humanize()}',
                style: TextStyle(fontSize: 20),
              ),
              SizedBox(height: 20),
              // Displaying another large number
              Text(
                '2,500,000,000 in human-readable format: ${2500000000.humanize()}',
                style: TextStyle(fontSize: 20),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application starts by running the RealFlutter widget.
// Inside the RealFlutter widget, we create a MaterialApp with a title.
// The home of the app is a Scaffold that contains an AppBar and a Center widget.
// The Center widget holds a Column that displays two Text widgets.
// Each Text widget shows a large number converted to a human-readable format using the humanize() method from the humanize_big_int package.
// The first Text displays "1,000,000" as "1M" and the second displays "2,500,000,000" as "2.5B".
```

<!-- END_MAIN -->

### Summary of Application Flow
// The application starts by running the `RealFlutter` widget, which is a StatelessWidget.
// Inside the `RealFlutter` widget, we create a `MaterialApp` with a title.
// The home of the app is a `Scaffold` that contains an `AppBar` and a `Center` widget.
// The `Center` widget holds a `Column` that displays two `Text` widgets.
// Each `Text` widget shows a large number converted to a human-readable format using the `humanize()` method from the `humanize_big_int` package.
// The first `Text` displays "1,000,000" as "1M" and the second displays "2,500,000,000" as "2.5B". 

This example demonstrates how to effectively use the `humanize_big_int` package to enhance the user experience by presenting large numbers in a more digestible format.