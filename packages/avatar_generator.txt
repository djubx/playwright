<-- START_DESCRIPTION -->

# Avatar Generator Flutter Package
=====================================

The `avatar_generator` Flutter package is a powerful tool for generating avatars in your Flutter applications. It provides a simple and easy-to-use API for creating custom avatars with various shapes, colors, and text.

### When to Use This Package

This package is ideal for applications that require user profiles, such as social media, gaming, or chat apps. You can use it to generate default avatars for users who haven't uploaded their own profile pictures.

### Features

*   Supports various shapes, including circles, squares, and rectangles
*   Customizable colors and text
*   Easy-to-use API

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Avatar Generator Flutter Package
=====================================================

### Step 1: Add the Package to Your Project

To use the `avatar_generator` package, you need to add it to your project's `pubspec.yaml` file. Open the file and add the following line under the `dependencies` section:

```yml
dependencies:
  flutter:
    sdk: flutter
  avatar_generator: ^1.0.0
```

Then, run `flutter pub get` in your terminal to install the package.

### Step 2: Import the Package

In your Dart file, import the `avatar_generator` package:

```dart
import 'package:avatar_generator/avatar_generator.dart';
```

### Step 3: Use the Package

To generate an avatar, use the `AvatarGenerator` class:

```dart
AvatarGenerator(
  shape: AvatarShape.circle,
  color: Colors.blue,
  text: 'John Doe',
)
```

This will generate a circular avatar with the text 'John Doe' in blue color.

### Platform-Specific Details

The `avatar_generator` package works on both Android and iOS platforms. However, you need to configure the package differently for each platform.

#### Android

On Android, you need to add the following line to your `AndroidManifest.xml` file:

```xml
<application
  ...
  android:hardwareAccelerated="true"
  ...
>
```

This enables hardware acceleration for the avatar generator.

#### iOS

On iOS, you need to add the following line to your `Info.plist` file:

```xml
<key>UIAppFonts</key>
<array>
  <string>OpenSans-Regular.ttf</string>
</array>
```

This adds the OpenSans font to your app, which is used by the avatar generator.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:avatar_generator/avatar_generator.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Avatar Generator Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _name = '';
  Color _color = Colors.blue;
  AvatarShape _shape = AvatarShape.circle;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Avatar Generator Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Generate the avatar
            AvatarGenerator(
              shape: _shape,
              color: _color,
              text: _name,
            ),
            // Input field for the name
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: TextField(
                onChanged: (value) {
                  setState(() {
                    _name = value;
                  });
                },
                decoration: InputDecoration(
                  labelText: 'Name',
                  border: OutlineInputBorder(),
                ),
              ),
            ),
            // Color picker
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _color = Colors.red;
                    });
                  },
                  child: Text('Red'),
                ),
                SizedBox(width: 16),
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _color = Colors.green;
                    });
                  },
                  child: Text('Green'),
                ),
                SizedBox(width: 16),
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _color = Colors.blue;
                    });
                  },
                  child: Text('Blue'),
                ),
              ],
            ),
            // Shape picker
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _shape = AvatarShape.circle;
                    });
                  },
                  child: Text('Circle'),
                ),
                SizedBox(width: 16),
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _shape = AvatarShape.square;
                    });
                  },
                  child: Text('Square'),
                ),
                SizedBox(width: 16),
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      _shape = AvatarShape.rectangle;
                    });
                  },
                  child: Text('Rectangle'),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by running the MyApp widget.
// MyApp builds the MaterialApp with the title and theme.
// The home of the app is the MyHomePage widget.
// MyHomePage is a stateful widget that builds the Scaffold with the AppBar and the body.
// The body is a Center widget that contains a Column with the avatar, input field, color picker, and shape picker.
// The avatar is generated using the AvatarGenerator widget with the shape, color, and text.
// The input field is used to enter the name, and the color and shape pickers are used to select the color and shape of the avatar.
// When the user enters a new name or selects a new color or shape, the setState function is called to update the state of the widget.
```

<-- END_MAIN -->