```markdown
<!-- START_DESCRIPTION -->
# Android Play Install Referrer Flutter Package

The `android_play_install_referrer` Flutter package is a powerful tool designed to help developers track the source of app installs on Android devices. This package leverages the Google Play Install Referrer API, which allows you to retrieve the referrer information when your app is installed from the Google Play Store. This information can be crucial for marketing campaigns, user acquisition strategies, and understanding user behavior.

## When to Use This Package

You should consider using the `android_play_install_referrer` package in scenarios such as:

- **Marketing Campaigns**: To track the effectiveness of different marketing channels and campaigns by identifying where your users are coming from.
- **User Acquisition**: To optimize your user acquisition strategies by understanding which sources yield the highest conversion rates.
- **Analytics**: To enhance your app's analytics by integrating referrer data into your existing analytics framework.

## Features

- **Easy Integration**: The package provides a straightforward API to access install referrer data.
- **Real-time Data**: Retrieve referrer information in real-time as users install your app.
- **Cross-Platform Support**: While primarily focused on Android, the package can be integrated into Flutter apps that target multiple platforms.

Overall, the `android_play_install_referrer` package is an essential tool for any Flutter developer looking to gain insights into their app's install sources and improve their marketing strategies.

<!-- END_DESCRIPTION -->
```

```markdown
<!-- START_TUTORIAL -->
# Tutorial: Setting Up the Android Play Install Referrer Package

In this tutorial, we will walk through the setup process for the `android_play_install_referrer` package and demonstrate how to use it in your Flutter application.

## Step 1: Add Dependency

To get started, add the `android_play_install_referrer` package to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  android_play_install_referrer: ^1.0.0  # Check for the latest version on pub.dev
```

## Step 2: Android Configuration

### Update AndroidManifest.xml

You need to add the necessary permissions and metadata in your `AndroidManifest.xml` file located at `android/app/src/main/AndroidManifest.xml`:

```xml
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.yourapp">

    <application
        android:name=".MainApplication"
        android:label="Your App"
        android:icon="@mipmap/ic_launcher">
        
        <!-- Add this metadata -->
        <meta-data
            android:name="com.android.installreferrer.api"
            android:value="true" />
    </application>

    <uses-permission android:name="android.permission.INTERNET"/>
</manifest>
```

### Step 3: iOS Configuration

Currently, the `android_play_install_referrer` package is designed for Android only. Therefore, no specific iOS configuration is required.

## Step 4: Using the Package

Now that we have set up the package, we can use it in our Flutter application. Below is an example of how to retrieve the install referrer information.

<!-- END_TUTORIAL -->
```

```markdown
<!-- START_MAIN -->
# Complete Example of Using the Android Play Install Referrer Package

```dart
import 'package:flutter/material.dart';
import 'package:android_play_install_referrer/android_play_install_referrer.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _referrer = 'Unknown'; // Variable to hold the referrer information

  @override
  void initState() {
    super.initState();
    _getInstallReferrer(); // Call the method to get the referrer on app start
  }

  // Method to retrieve the install referrer
  Future<void> _getInstallReferrer() async {
    try {
      // Initialize the Install Referrer API
      final referrerDetails = await AndroidPlayInstallReferrer.getReferrer();
      setState(() {
        _referrer = referrerDetails?.referrer ?? 'No referrer found'; // Update the state with referrer info
      });
    } catch (e) {
      setState(() {
        _referrer = 'Error retrieving referrer: $e'; // Handle any errors
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Install Referrer Example'),
        ),
        body: Center(
          child: Text('Install Referrer: $_referrer'), // Display the referrer information
        ),
      ),
    );
  }
}
```

```dart
// Explanation of the application flow:

// 1. The app starts by running the `main` function, which initializes the `RealFlutter` widget.
// 2. In the `RealFlutter` widget, we define a state variable `_referrer` to hold the referrer information.
// 3. The `initState` method is overridden to call `_getInstallReferrer` when the widget is first created.
// 4. The `_getInstallReferrer` method uses the `AndroidPlayInstallReferrer` API to fetch the referrer details.
// 5. If successful, the referrer information is stored in the `_referrer` variable and displayed on the screen.
// 6. If there is an error during the retrieval, an error message is displayed instead.
// 7. The UI consists of a simple `Text` widget that shows the install referrer information in the center of the screen.
```
<!-- END_MAIN -->
``` 

This structured blog provides a comprehensive overview of the `android_play_install_referrer` package, guiding users through its setup and usage while offering a complete example to illustrate its functionality.