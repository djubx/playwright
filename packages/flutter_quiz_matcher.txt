<-- START_DESCRIPTION -->

# Flutter Quiz Matcher Package
================================

The `flutter_quiz_matcher` package is a powerful tool for creating quiz-based applications in Flutter. It provides a simple and efficient way to match questions with answers, making it ideal for developing educational apps, games, and assessments.

## Key Features

*   Easy question-answer matching
*   Support for multiple question types (e.g., multiple choice, true/false, open-ended)
*   Customizable scoring system
*   Integrated timer for timed quizzes

## When to Use

The `flutter_quiz_matcher` package is perfect for:

*   Educational apps that require quizzes or assessments
*   Games that involve question-answer matching
*   Corporate training apps that need to evaluate user knowledge

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_quiz_matcher` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_quiz_matcher: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:flutter_quiz_matcher/flutter_quiz_matcher.dart';
```

### Step 3: Create a Quiz Matcher Instance

Create an instance of the `QuizMatcher` class:

```dart
QuizMatcher quizMatcher = QuizMatcher();
```

### Step 4: Add Questions and Answers

Add questions and answers to the quiz matcher instance:

```dart
quizMatcher.addQuestion(
  question: 'What is the capital of France?',
  answers: ['Paris', 'London', 'Berlin'],
  correctAnswer: 'Paris',
);
```

### Step 5: Start the Quiz

Start the quiz by calling the `startQuiz` method:

```dart
quizMatcher.startQuiz();
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_quiz_matcher/flutter_quiz_matcher.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Quiz Matcher Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: QuizMatcherDemo(),
    );
  }
}

class QuizMatcherDemo extends StatefulWidget {
  @override
  _QuizMatcherDemoState createState() => _QuizMatcherDemoState();
}

class _QuizMatcherDemoState extends State<QuizMatcherDemo> {
  QuizMatcher quizMatcher = QuizMatcher();
  String currentQuestion = '';
  List<String> currentAnswers = [];
  String correctAnswer = '';
  int score = 0;

  @override
  void initState() {
    super.initState();
    quizMatcher.addQuestion(
      question: 'What is the capital of France?',
      answers: ['Paris', 'London', 'Berlin'],
      correctAnswer: 'Paris',
    );
    quizMatcher.addQuestion(
      question: 'What is the largest planet in our solar system?',
      answers: ['Earth', 'Saturn', 'Jupiter'],
      correctAnswer: 'Jupiter',
    );
    quizMatcher.startQuiz();
    _updateQuestion();
  }

  void _updateQuestion() {
    setState(() {
      currentQuestion = quizMatcher.getCurrentQuestion();
      currentAnswers = quizMatcher.getCurrentAnswers();
      correctAnswer = quizMatcher.getCorrectAnswer();
    });
  }

  void _checkAnswer(String answer) {
    if (answer == correctAnswer) {
      score++;
    }
    quizMatcher.nextQuestion();
    _updateQuestion();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Quiz Matcher Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              currentQuestion,
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            Column(
              children: currentAnswers.map((answer) {
                return ElevatedButton(
                  onPressed: () {
                    _checkAnswer(answer);
                  },
                  child: Text(answer),
                );
              }).toList(),
            ),
            SizedBox(height: 20),
            Text(
              'Score: $score',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user starts the app and is presented with a quiz question.
// 2. The user selects an answer from the list of options.
// 3. The app checks if the selected answer is correct.
// 4. If the answer is correct, the user's score is incremented.
// 5. The app moves on to the next question.
// 6. Steps 2-5 are repeated until the quiz is complete.
// 7. The final score is displayed to the user.
```

<-- END_MAIN -->