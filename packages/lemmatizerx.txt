<-- START_DESCRIPTION -->

# LemmatizerX Flutter Package
The LemmatizerX Flutter package is a powerful tool for natural language processing (NLP) tasks in Flutter applications. It provides a simple and efficient way to perform lemmatization, which is the process of reducing words to their base or root form.

## When to Use
The LemmatizerX package is useful in a variety of scenarios, such as:

* Text analysis and sentiment analysis
* Information retrieval and search engines
* Chatbots and virtual assistants
* Language translation and localization

## Features
The LemmatizerX package offers the following features:

* Support for multiple languages, including English, Spanish, French, and more
* High-performance lemmatization algorithm
* Simple and easy-to-use API
* Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up LemmatizerX
To use the LemmatizerX package in your Flutter application, follow these steps:

1. Add the LemmatizerX package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  lemmatizerx: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the LemmatizerX package in your Dart file:
```dart
import 'package:lemmatizerx/lemmatizerx.dart';
```
4. Create an instance of the LemmatizerX class:
```dart
LemmatizerX lemmatizer = LemmatizerX();
```
5. Use the `lemmatize` method to lemmatize a word or phrase:
```dart
String lemmatizedWord = lemmatizer.lemmatize('running');
print(lemmatizedWord); // Output: run
```
### Platform-Specific Details
The LemmatizerX package uses a native library to perform lemmatization. On Android, this library is bundled with the APK, while on iOS, it is linked dynamically.

### Required Configurations
No additional configurations are required to use the LemmatizerX package.

### Optimizations
To optimize performance, you can use the `lemmatizeBatch` method to lemmatize multiple words or phrases at once:
```dart
List<String> words = ['running', 'jumping', 'swimming'];
List<String> lemmatizedWords = lemmatizer.lemmatizeBatch(words);
print(lemmatizedWords); // Output: [run, jump, swim]
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:lemmatizerx/lemmatizerx.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  final _textController = TextEditingController();
  String _lemmatizedWord = '';

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'LemmatizerX Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('LemmatizerX Demo'),
        ),
        body: Padding(
          padding: const EdgeInsets.all(20.0),
          child: Column(
            children: [
              TextField(
                controller: _textController,
                decoration: InputDecoration(
                  labelText: 'Enter a word or phrase',
                  border: OutlineInputBorder(),
                ),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  // Create an instance of the LemmatizerX class
                  LemmatizerX lemmatizer = LemmatizerX();
                  
                  // Get the text from the text field
                  String text = _textController.text;
                  
                  // Lemmatize the text
                  String lemmatizedWord = lemmatizer.lemmatize(text);
                  
                  // Update the UI with the lemmatized word
                  setState(() {
                    _lemmatizedWord = lemmatizedWord;
                  });
                },
                child: Text('Lemmatize'),
              ),
              SizedBox(height: 20),
              Text(
                _lemmatizedWord.isEmpty ? '' : 'Lemmatized word: $_lemmatizedWord',
                style: TextStyle(fontSize: 18),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters a word or phrase in the text field.
// 2. The user clicks the "Lemmatize" button.
// 3. The LemmatizerX class is instantiated.
// 4. The text from the text field is retrieved.
// 5. The text is lemmatized using the LemmatizerX class.
// 6. The lemmatized word is updated in the UI.
// 7. The user can view the lemmatized word on the screen.

// This code demonstrates the basic usage of the LemmatizerX package.
// It shows how to instantiate the LemmatizerX class, lemmatize a word or phrase, and update the UI with the result.

<-- END_MAIN -->
```