```markdown
<!-- START_DESCRIPTION -->
# Overview of the surf_dcm_presets Flutter Package

The `surf_dcm_presets` package is a powerful tool designed for Flutter developers who need to manage and apply design presets in their applications. This package is particularly useful for creating consistent UI/UX across different screens and components by allowing developers to define and reuse design presets easily.

## When to Use This Package
- **Consistent UI Design**: When you want to maintain a uniform look and feel across your application.
- **Rapid Prototyping**: When you need to quickly apply design changes without modifying individual widgets.
- **Theming**: When you want to implement a theming system that can be easily adjusted or switched.

## Key Features
- **Customizable Presets**: Define your own design presets for colors, typography, and spacing.
- **Easy Integration**: Simple API to integrate with existing Flutter applications.
- **Support for Multiple Themes**: Easily switch between different design presets based on user preferences or app states.
- **Lightweight**: Minimal overhead, ensuring that your app remains performant.

By leveraging the `surf_dcm_presets` package, developers can streamline their design processes and enhance the maintainability of their Flutter applications.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using surf_dcm_presets

## Installation
To get started with the `surf_dcm_presets` package, you need to add it to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  surf_dcm_presets: ^latest_version
```

Make sure to replace `latest_version` with the most recent version available on [pub.dev](https://pub.dev/packages/surf_dcm_presets).

## Platform-Specific Configuration
### Android
For Android, ensure that your `minSdkVersion` is set to at least 21 in your `android/app/build.gradle` file:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
        ...
    }
}
```

### iOS
For iOS, you may need to update your `ios/Podfile` to ensure compatibility with the latest Flutter versions:

```ruby
platform :ios, '10.0'
```

## Using the Package
Once you have installed the package, you can start using it in your Flutter application. Hereâ€™s a simple example of how to define and apply design presets.

1. Import the package in your Dart file:

```dart
import 'package:surf_dcm_presets/surf_dcm_presets.dart';
```

2. Define your presets:

```dart
final myPresets = DcmPresets(
  primaryColor: Colors.blue,
  secondaryColor: Colors.green,
  textStyle: TextStyle(fontSize: 16, color: Colors.black),
);
```

3. Apply the presets in your widgets:

```dart
Container(
  color: myPresets.primaryColor,
  child: Text(
    'Hello, World!',
    style: myPresets.textStyle,
  ),
);
```

With these steps, you can easily manage and apply design presets throughout your Flutter application.
<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using surf_dcm_presets

```dart
import 'package:flutter/material.dart';
import 'package:surf_dcm_presets/surf_dcm_presets.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Define design presets
    final myPresets = DcmPresets(
      primaryColor: Colors.blue,
      secondaryColor: Colors.green,
      textStyle: TextStyle(fontSize: 20, color: Colors.white),
    );

    return MaterialApp(
      title: 'Surf DCM Presets Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Surf DCM Presets', style: myPresets.textStyle),
          backgroundColor: myPresets.primaryColor,
        ),
        body: Center(
          child: Container(
            // Use the primary color from presets
            color: myPresets.secondaryColor,
            padding: EdgeInsets.all(20),
            child: Text(
              'Welcome to Surf DCM Presets!',
              style: myPresets.textStyle,
            ),
          ),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function starts the app by calling runApp() with MyApp().
// 2. MyApp is a StatelessWidget that builds the MaterialApp.
// 3. Inside MyApp, we define our design presets using DcmPresets.
// 4. The MaterialApp contains a Scaffold with an AppBar and a Center widget.
// 5. The AppBar uses the primary color and text style from the presets.
// 6. The body of the Scaffold contains a Container that uses the secondary color and displays a welcome message using the preset text style.
```
<!-- END_MAIN -->
```

### Summary
In this blog post, we explored the `surf_dcm_presets` Flutter package, detailing its features, installation process, and usage. We provided a complete example that demonstrates how to define and apply design presets in a Flutter application. By following the steps outlined, developers can enhance their UI consistency and streamline their design processes effectively.