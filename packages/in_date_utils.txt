<-- START_DESCRIPTION -->

# in_date_utils Flutter Package
The `in_date_utils` Flutter package provides a set of utility functions for working with dates in Flutter applications. It offers a range of features, including date formatting, date arithmetic, and date validation.

## When to Use
This package is useful when you need to perform complex date operations in your Flutter app, such as calculating the difference between two dates, formatting dates for display, or validating user input dates.

## Features
The `in_date_utils` package includes the following features:

* Date formatting: format dates using a variety of formats, including ISO 8601 and RFC 3339.
* Date arithmetic: add or subtract days, weeks, months, or years from a date.
* Date validation: check if a date is valid, including checks for leap years and month lengths.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
To use the `in_date_utils` package in your Flutter app, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  in_date_utils: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:in_date_utils/in_date_utils.dart';
```

## Platform-Specific Details
The `in_date_utils` package works on both Android and iOS platforms. However, there are some platform-specific considerations to keep in mind:

* On Android, the package uses the `java.time` API to perform date operations. This API is available on Android 8.0 (API level 26) and later.
* On iOS, the package uses the `NSDate` and `NSCalendar` classes to perform date operations.

## Configurations and Optimizations
To optimize the performance of the `in_date_utils` package, you can configure the following settings:

* `dateFormat`: sets the default date format used by the package.
* `firstDayOfWeek`: sets the first day of the week used by the package.

For example:
```dart
InDateUtils.dateFormat = 'yyyy-MM-dd';
InDateUtils.firstDayOfWeek = 1; // Monday
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:in_date_utils/in_date_utils.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'In Date Utils Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  DateTime _date = DateTime.now();

  void _incrementDate() {
    setState(() {
      _date = InDateUtils.addDays(_date, 1);
    });
  }

  void _decrementDate() {
    setState(() {
      _date = InDateUtils.subtractDays(_date, 1);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('In Date Utils Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              InDateUtils.formatDate(_date, 'yyyy-MM-dd'),
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _incrementDate,
              child: Text('Increment Date'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: _decrementDate,
              child: Text('Decrement Date'),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by displaying the current date in the format 'yyyy-MM-dd'.
// When the user clicks the 'Increment Date' button, the app adds one day to the current date using the InDateUtils.addDays function.
// When the user clicks the 'Decrement Date' button, the app subtracts one day from the current date using the InDateUtils.subtractDays function.
// The app updates the display with the new date after each button click.

// The InDateUtils package provides a range of date utility functions, including date formatting, date arithmetic, and date validation.
// The package is easy to use and provides a simple way to perform complex date operations in Flutter apps.
```

<-- END_MAIN -->