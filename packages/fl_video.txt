<-- START_DESCRIPTION -->

# fl_video Package Overview
================================

The `fl_video` package is a powerful Flutter library for playing video content within mobile applications. It provides a simple and efficient way to embed video players into your app, with support for various video formats and streaming protocols.

## Key Features

*   Supports multiple video formats, including MP4, AVI, and MKV
*   Handles video streaming from various sources, such as HTTP, HTTPS, and RTMP
*   Offers customizable video player controls and UI
*   Compatible with both Android and iOS platforms

## When to Use

The `fl_video` package is ideal for apps that require video playback, such as:

*   Video sharing and streaming services
*   Online course and tutorial platforms
*   Social media apps with video content
*   Entertainment and media apps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using fl_video
=============================

## Step 1: Add the fl_video Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  fl_video: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the fl_video Package

Import the `fl_video` package in your Dart file:

```dart
import 'package:fl_video/fl_video.dart';
```

## Step 3: Create a Video Player

Create a `FlVideoPlayer` widget to play a video:

```dart
FlVideoPlayer(
  url: 'https://example.com/video.mp4',
  aspectRatio: 16 / 9,
  controls: true,
)
```

## Platform-Specific Details

### Android

*   Make sure to add the `android.permission.INTERNET` permission to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.INTERNET" />
```

### iOS

*   Add the `NSAppTransportSecurity` key to your `Info.plist` file to allow HTTP video streaming:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:fl_video/fl_video.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'fl_video Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _videoUrl = 'https://example.com/video.mp4';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('fl_video Example'),
      ),
      body: Center(
        child: FlVideoPlayer(
          // Step 1: Set the video URL
          url: _videoUrl,

          // Step 2: Set the aspect ratio
          aspectRatio: 16 / 9,

          // Step 3: Enable video controls
          controls: true,

          // Step 4: Handle video playback events
          onPlay: () {
            print('Video started playing');
          },
          onPause: () {
            print('Video paused');
          },
          onEnd: () {
            print('Video ended');
          },
        ),
      ),
    );
  }
}

// Application flow explanation:
// 1. The app starts and loads the MyHomePage widget.
// 2. The FlVideoPlayer widget is created with the specified video URL and settings.
// 3. When the user interacts with the video player, the corresponding events are triggered (e.g., onPlay, onPause, onEnd).
// 4. The video playback is handled by the fl_video package, which takes care of buffering, streaming, and rendering the video content.
```

// Final summary: The fl_video package provides a convenient way to embed video players in Flutter apps. By following the setup and usage instructions, you can easily integrate video playback into your app and customize the player to suit your needs. The example code demonstrates the key features of the package and shows how to handle video playback events.