<-- START_DESCRIPTION -->

Phone Text Field Flutter Package
================================

The `phone_text_field` package is a Flutter library that provides a customizable text field for entering phone numbers. It supports various phone number formats and allows users to select their country code from a dropdown list.

When to Use This Package
------------------------

This package is useful when you need to collect phone numbers from users in your Flutter app. It provides a convenient and user-friendly way to enter phone numbers, making it easier for users to provide their contact information.

Features
--------

*   Supports various phone number formats
*   Allows users to select their country code from a dropdown list
*   Customizable text field and dropdown list
*   Supports validation and error handling

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `phone_text_field` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  phone_text_field: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:phone_text_field/phone_text_field.dart';
```

### Step 3: Use the `PhoneTextField` Widget

Use the `PhoneTextField` widget in your Flutter app:

```dart
PhoneTextField(
  controller: _phoneController,
  decoration: InputDecoration(
    labelText: 'Phone Number',
    border: OutlineInputBorder(),
  ),
  countryPickerCallback: (country) {
    // Handle country selection
  },
  onChanged: (phone) {
    // Handle phone number input
  },
)
```

Platform-Specific Details
-------------------------

The `phone_text_field` package uses the `country_picker` package to display a country picker dialog. On Android, this dialog is displayed as a bottom sheet, while on iOS, it is displayed as a modal dialog.

Configurations and Optimizations
--------------------------------

You can customize the appearance and behavior of the `PhoneTextField` widget by using various properties, such as `decoration`, `countryPickerCallback`, and `onChanged`.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:phone_text_field/phone_text_field.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Phone Text Field Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _phoneController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Phone Text Field Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          children: [
            PhoneTextField(
              controller: _phoneController,
              decoration: InputDecoration(
                labelText: 'Phone Number',
                border: OutlineInputBorder(),
              ),
              countryPickerCallback: (country) {
                // Handle country selection
                print('Selected country: ${country.name}');
              },
              onChanged: (phone) {
                // Handle phone number input
                print('Phone number: $phone');
              },
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Validate phone number
                if (_phoneController.text.isNotEmpty) {
                  print('Phone number is valid');
                } else {
                  print('Phone number is invalid');
                }
              },
              child: Text('Validate Phone Number'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user selects their country from the dropdown list.
// 2. The user enters their phone number in the text field.
// 3. The phone number is validated when the user clicks the "Validate Phone Number" button.
// 4. If the phone number is valid, a success message is printed to the console.
// 5. If the phone number is invalid, an error message is printed to the console.

// In summary, this code demonstrates how to use the `phone_text_field` package to collect and validate phone numbers in a Flutter app.
```

<-- END_MAIN -->