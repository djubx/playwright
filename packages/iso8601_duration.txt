<-- START_DESCRIPTION -->

# iso8601_duration Flutter Package
=====================================

The `iso8601_duration` package is a Flutter library that provides a simple way to work with ISO 8601 duration strings. It allows you to parse, manipulate, and format duration strings in a convenient and efficient manner.

### When to Use This Package

This package is useful when working with APIs or data formats that use ISO 8601 duration strings to represent time intervals. For example, you might use this package to:

* Parse duration strings from an API response
* Format duration strings for display in your app
* Perform arithmetic operations on duration strings

### Features

The `iso8601_duration` package provides the following features:

* Parsing and formatting of ISO 8601 duration strings
* Support for all ISO 8601 duration components (years, months, weeks, days, hours, minutes, seconds)
* Arithmetic operations on duration strings (addition, subtraction, multiplication, division)
* Comparison operations on duration strings (equality, inequality, greater than, less than)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
=====================

To use the `iso8601_duration` package in your Flutter app, follow these steps:

### Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  iso8601_duration: ^1.0.0
```
Then run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:iso8601_duration/iso8601_duration.dart';
```
### Step 3: Use the Package

You can now use the package to parse, manipulate, and format duration strings. For example:
```dart
void main() {
  // Parse a duration string
  final duration = Iso8601Duration.parse('P1Y2M3DT4H5M6S');
  print(duration); // Output: 1 year, 2 months, 3 days, 4 hours, 5 minutes, 6 seconds

  // Format a duration string
  final formattedDuration = Iso8601Duration.format(duration);
  print(formattedDuration); // Output: P1Y2M3DT4H5M6S

  // Perform arithmetic operations
  final addedDuration = duration + Iso8601Duration.parse('P1D');
  print(addedDuration); // Output: 1 year, 2 months, 4 days, 4 hours, 5 minutes, 6 seconds
}
```
### Platform-Specific Details

The `iso8601_duration` package works on all platforms supported by Flutter, including Android and iOS. However, if you need to use platform-specific APIs or libraries, you may need to add additional dependencies or configurations to your project.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:iso8601_duration/iso8601_duration.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Iso8601 Duration Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _durationController = TextEditingController();
  Iso8601Duration _duration;

  void _parseDuration() {
    try {
      _duration = Iso8601Duration.parse(_durationController.text);
      setState(() {});
    } catch (e) {
      print(e);
    }
  }

  void _formatDuration() {
    if (_duration != null) {
      final formattedDuration = Iso8601Duration.format(_duration);
      print(formattedDuration);
    }
  }

  void _addDay() {
    if (_duration != null) {
      final addedDuration = _duration + Iso8601Duration.parse('P1D');
      setState(() {
        _duration = addedDuration;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Iso8601 Duration Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              controller: _durationController,
              decoration: InputDecoration(
                labelText: 'Enter duration',
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _parseDuration,
              child: Text('Parse duration'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _formatDuration,
              child: Text('Format duration'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _addDay,
              child: Text('Add day'),
            ),
            SizedBox(height: 20),
            Text(_duration != null ? _duration.toString() : ''),
          ],
        ),
      ),
    );
  }
}

// The app starts by displaying a text field for the user to enter a duration string.
// When the user clicks the "Parse duration" button, the app attempts to parse the duration string using the Iso8601Duration.parse method.
// If the parsing is successful, the app displays the parsed duration below the buttons.
// When the user clicks the "Format duration" button, the app formats the parsed duration using the Iso8601Duration.format method and prints the result to the console.
// When the user clicks the "Add day" button, the app adds a day to the parsed duration using the Iso8601Duration + operator and updates the displayed duration.
```

<-- END_MAIN -->