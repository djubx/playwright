```markdown
<!-- START_DESCRIPTION -->
# Overview of the `substring_highlight` Flutter Package

The `substring_highlight` package is a powerful tool for Flutter developers looking to enhance text display by highlighting specific substrings within a larger text. This package is particularly useful in applications where users need to search for keywords or phrases, such as in chat applications, search results, or any text-heavy interface.

## When to Use This Package

You might consider using the `substring_highlight` package in scenarios such as:
- **Searchable Text**: Highlighting search terms in a list of results.
- **Chat Applications**: Emphasizing keywords in messages.
- **Documentation**: Making important terms stand out in user manuals or help sections.

## Features

- **Customizable Highlighting**: You can customize the style of the highlighted text, including color, font weight, and more.
- **Easy Integration**: The package is straightforward to integrate into existing Flutter applications.
- **Performance**: Optimized for performance, ensuring smooth rendering even with large texts.

In summary, the `substring_highlight` package is an essential tool for any Flutter developer looking to improve text readability and user experience by emphasizing important substrings.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the `substring_highlight` Package

## Step 1: Adding the Dependency

To get started, you need to add the `substring_highlight` package to your Flutter project. Open your `pubspec.yaml` file and add the following line under dependencies:

```yaml
dependencies:
  substring_highlight: ^1.0.0
```

Make sure to run `flutter pub get` to install the package.

## Step 2: Importing the Package

In your Dart file, import the package:

```dart
import 'package:substring_highlight/substring_highlight.dart';
```

## Step 3: Using the Package

You can use the `SubstringHighlight` widget to highlight substrings. Hereâ€™s a basic example:

```dart
SubstringHighlight(
  text: 'Flutter is an amazing framework for building apps.',
  term: 'Flutter',
  textStyle: TextStyle(
    color: Colors.black,
    fontSize: 16,
  ),
  textStyleHighlight: TextStyle(
    color: Colors.red,
    fontWeight: FontWeight.bold,
  ),
)
```

### Platform-Specific Details

#### Android

For Android, ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

```gradle
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
    }
}
```

#### iOS

For iOS, ensure that your deployment target is set to at least 10.0 in your `ios/Podfile`:

```ruby
platform :ios, '10.0'
```

## Step 4: Optimizations

- **Performance**: If you are dealing with large texts, consider using `ListView` or `SingleChildScrollView` to manage performance effectively.
- **Custom Styles**: Experiment with different text styles to match your app's theme.

By following these steps, you can easily integrate and utilize the `substring_highlight` package in your Flutter applications.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using the `substring_highlight` Package

```dart
import 'package:flutter/material.dart';
import 'package:substring_highlight/substring_highlight.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Substring Highlight Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Substring Highlight Demo'),
        ),
        body: Center(
          child: HighlightedTextWidget(),
        ),
      ),
    );
  }
}

class HighlightedTextWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Define the text to be highlighted
    String text = 'Flutter is an amazing framework for building apps.';
    // Define the term to highlight
    String term = 'Flutter';

    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: SubstringHighlight(
        text: text,
        term: term,
        textStyle: TextStyle(
          color: Colors.black,
          fontSize: 20,
        ),
        textStyleHighlight: TextStyle(
          color: Colors.red,
          fontWeight: FontWeight.bold,
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function starts the app by calling runApp with the RealFlutter widget.
// 2. RealFlutter builds a MaterialApp with a title and a Scaffold.
// 3. The Scaffold contains an AppBar and a Center widget that holds the HighlightedTextWidget.
// 4. HighlightedTextWidget builds a SubstringHighlight widget, passing the text and the term to highlight.
// 5. The text is displayed with the specified styles, highlighting the term "Flutter" in red and bold.
// 6. The app is structured to be easily expandable for more features or additional text highlighting.
```
<!-- END_MAIN -->
```

This structured blog provides a comprehensive overview of the `substring_highlight` package, guiding users through its features, setup, and practical implementation in a Flutter application.