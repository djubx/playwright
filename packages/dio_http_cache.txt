<-- START_DESCRIPTION -->

# dio_http_cache Flutter Package
=====================================

The dio_http_cache package is a caching library for Flutter that uses the Dio HTTP client. It provides a simple and efficient way to cache HTTP responses, reducing the number of requests made to the server and improving the overall performance of your app.

### When to Use

This package is useful when you want to cache HTTP responses to:

* Reduce the number of requests made to the server
* Improve the performance of your app by reducing the time it takes to load data
* Provide offline support by caching responses when the user is offline

### Features

* Caches HTTP responses using the Dio HTTP client
* Supports caching of GET, POST, PUT, and DELETE requests
* Allows you to specify the cache duration for each request
* Provides a simple and efficient way to cache responses

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up dio_http_cache
==========================

To use the dio_http_cache package, you need to add it to your pubspec.yaml file:

```yml
dependencies:
  dio_http_cache: ^0.2.6
```

Then, run `flutter pub get` to install the package.

### Platform-Specific Details

* Android: No additional configuration is required.
* iOS: You need to add the following lines to your Info.plist file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

### Using dio_http_cache

To use the dio_http_cache package, you need to create a Dio instance and add the cache interceptor:

```dart
import 'package:dio/dio.dart';
import 'package:dio_http_cache/dio_http_cache.dart';

void main() {
  final dio = Dio();
  dio.interceptors.add(DioCacheManager(CacheConfig(baseUrl: 'https://api.example.com')));
}
```

You can then use the Dio instance to make HTTP requests, and the responses will be cached automatically.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:dio/dio.dart';
import 'package:dio_http_cache/dio_http_cache.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'dio_http_cache Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final dio = Dio();
  final cacheManager = DioCacheManager(CacheConfig(baseUrl: 'https://api.example.com'));

  @override
  void initState() {
    super.initState();
    dio.interceptors.add(cacheManager);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('dio_http_cache Example'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            final response = await dio.get('https://api.example.com/data');
            print(response.data);
          },
          child: Text('Load Data'),
        ),
      ),
    );
  }
}

// The app starts by creating a Dio instance and adding the cache interceptor.
// The cache interceptor is configured to cache responses for 1 hour.
// When the user presses the "Load Data" button, the app makes a GET request to the API.
// The response is cached automatically by the dio_http_cache package.
// If the user presses the "Load Data" button again within 1 hour, the cached response is returned instead of making a new request to the API.
// This improves the performance of the app by reducing the number of requests made to the server.
```

<-- END_MAIN -->