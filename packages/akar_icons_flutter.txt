<-- START_DESCRIPTION -->

# Akar Icons Flutter Package
================================

The `akar_icons_flutter` package is a popular Flutter package that provides a wide range of icons for use in Flutter applications. It offers a simple and easy-to-use API for displaying icons in various sizes and colors.

## When to Use
--------------

You can use the `akar_icons_flutter` package in any Flutter application where you need to display icons. It is particularly useful when you need to display a large number of icons, or when you need to customize the size and color of the icons.

## Features
------------

*   Wide range of icons available
*   Easy-to-use API for displaying icons
*   Customizable icon size and color
*   Supports both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Akar Icons Flutter Package
=============================================

## Step 1: Add the Package to Your Project
-----------------------------------------

To use the `akar_icons_flutter` package, you need to add it to your project's `pubspec.yaml` file. You can do this by adding the following line to the `dependencies` section:

```yml
dependencies:
  akar_icons_flutter: ^1.0.0
```

## Step 2: Import the Package
---------------------------

Once you have added the package to your project, you need to import it in your Dart file. You can do this by adding the following line at the top of your file:

```dart
import 'package:akar_icons_flutter/akar_icons_flutter.dart';
```

## Step 3: Use the Icons
----------------------

To use the icons, you can simply call the `AkarIcons` class and pass the icon name as a parameter. For example:

```dart
AkarIcons.home
```

This will display the "home" icon.

## Platform-Specific Details
---------------------------

The `akar_icons_flutter` package works on both Android and iOS platforms. However, you need to make sure that you have the necessary fonts installed on your system.

### Android

To use the package on Android, you need to add the following line to your `android/app/src/main/assets/fonts` directory:

```xml
<font-family xmlns:android="http://schemas.android.com/apk/res/android">
    <font
        android:font="@font/akar_icons"
        android:fontStyle="normal"
        android:fontWeight="400" />
</font-family>
```

### iOS

To use the package on iOS, you need to add the following line to your `ios/Runner/Info.plist` file:

```xml
<key>UIAppFonts</key>
<array>
    <string>akar_icons.ttf</string>
</array>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:akar_icons_flutter/akar_icons_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Akar Icons Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Akar Icons Flutter Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Display the "home" icon
            AkarIcons.home,
            // Display the "search" icon with a size of 50
            AkarIcons.search(size: 50),
            // Display the "heart" icon with a color of red
            AkarIcons.heart(color: Colors.red),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the application.
// 2. The `MyApp` widget is built, which returns a `MaterialApp` widget.
// 3. The `MaterialApp` widget builds the `MyHomePage` widget.
// 4. The `MyHomePage` widget builds a `Scaffold` widget with an `AppBar` and a `Center` widget.
// 5. The `Center` widget contains a `Column` widget with three children: the "home" icon, the "search" icon, and the "heart" icon.
// 6. Each icon is displayed with its respective size and color.
// 7. The user can interact with the icons as needed.

// In summary, this code demonstrates how to use the `akar_icons_flutter` package to display icons in a Flutter application.
// The icons can be customized with different sizes and colors, and can be used in a variety of contexts.
```

<-- END_MAIN -->