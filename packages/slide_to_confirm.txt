```markdown
<-- START_DESCRIPTION -->

# Slide to Confirm Flutter Package

The `slide_to_confirm` Flutter package is a user-friendly widget that provides a slide-to-confirm action, commonly used in applications where a user needs to confirm an action, such as sending a message, making a payment, or deleting an item. This package enhances user experience by requiring a deliberate sliding action, reducing accidental confirmations.

## When to Use

- **Payment Confirmations**: To ensure users are certain before making a payment.
- **Sensitive Actions**: For actions like deleting data or sending important messages.
- **User Agreements**: To confirm that users have read and agreed to terms and conditions.

## Features

- **Customizable Appearance**: Modify colors, text, and icons to fit your app's theme.
- **Smooth Animations**: Provides a visually appealing sliding animation.
- **Callback Functionality**: Execute specific functions upon successful confirmation.
- **Platform Compatibility**: Works seamlessly on both Android and iOS.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Slide to Confirm Package

In this tutorial, we will walk through the setup and usage of the `slide_to_confirm` package in a Flutter application. We will cover platform-specific configurations for both Android and iOS.

## Setup

1. **Add Dependency**

   Add the `slide_to_confirm` package to your `pubspec.yaml` file:

   ```yaml
   dependencies:
     flutter:
       sdk: flutter
     slide_to_confirm: ^1.0.0
   ```

2. **Install Packages**

   Run the following command to install the new package:

   ```bash
   flutter pub get
   ```

## Platform-Specific Details

### Android

- Ensure your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

  ```gradle
  defaultConfig {
      minSdkVersion 21
  }
  ```

### iOS

- No specific configurations are required for iOS, but ensure your deployment target is set to iOS 9.0 or higher in your `ios/Podfile`:

  ```ruby
  platform :ios, '9.0'
  ```

## Using the Package

To use the `slide_to_confirm` widget, import it into your Dart file:

```dart
import 'package:slide_to_confirm/slide_to_confirm.dart';
```

You can then use the `ConfirmationSlider` widget in your UI:

```dart
ConfirmationSlider(
  onConfirmation: () {
    // Action to perform on confirmation
  },
  text: "Slide to confirm",
  sliderButtonContent: Icon(Icons.arrow_forward),
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

# Complete Example: Flutter Main File

Below is a complete example of a Flutter application using the `slide_to_confirm` package. This example demonstrates the key features and provides detailed comments explaining each part of the code.

```dart
import 'package:flutter/material.dart';
import 'package:slide_to_confirm/slide_to_confirm.dart'; // Import the package

void main() {
  runApp(RealFlutterApp());
}

// Main application widget
class RealFlutterApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Slide to Confirm Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: ConfirmationScreen(), // Set the home screen
    );
  }
}

// Home screen widget
class ConfirmationScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Slide to Confirm Example'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: ConfirmationSlider(
            onConfirmation: () {
              // Action to perform on confirmation
              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(content: Text('Action Confirmed!')),
              );
            },
            text: "Slide to confirm", // Text displayed on the slider
            sliderButtonContent: Icon(Icons.arrow_forward), // Icon on the slider button
            backgroundColor: Colors.grey[300], // Background color of the slider
            foregroundColor: Colors.blue, // Color of the slider button
          ),
        ),
      ),
    );
  }
}
```

// Application Flow Explanation
// 1. The `main` function initializes the app by running `RealFlutterApp`.
// 2. `RealFlutterApp` is a stateless widget that sets up the MaterialApp with a title and theme.
// 3. The home screen is set to `ConfirmationScreen`, which is another stateless widget.
// 4. `ConfirmationScreen` builds a Scaffold with an AppBar and a centered `ConfirmationSlider`.
// 5. The `ConfirmationSlider` widget is configured with an `onConfirmation` callback that shows a SnackBar when the slider is successfully confirmed.
// 6. The slider displays the text "Slide to confirm" and uses an arrow icon for the slider button.
// 7. The slider's appearance is customized with background and foreground colors.

<-- END_MAIN -->
```