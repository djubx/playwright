<-- START_DESCRIPTION -->

# Flutter Touch Ripple Package
================================

The `flutter_touch_ripple` package is a Flutter library that provides a touch ripple effect for widgets. It is a simple and easy-to-use package that can be used to create a ripple effect on any widget.

## Features

*   Touch ripple effect for widgets
*   Customizable ripple color, radius, and duration
*   Supports Android and iOS platforms

## When to Use

The `flutter_touch_ripple` package can be used in a variety of scenarios, such as:

*   Creating a ripple effect on buttons or other interactive widgets
*   Adding a touch effect to images or other non-interactive widgets
*   Enhancing the user experience with a visually appealing ripple effect

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Setup

To use the `flutter_touch_ripple` package, add it to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_touch_ripple: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Basic Usage

To use the `flutter_touch_ripple` package, wrap the widget you want to add the ripple effect to with the `TouchRipple` widget:

```dart
import 'package:flutter_touch_ripple/flutter_touch_ripple.dart';

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return TouchRipple(
      child: Container(
        width: 100,
        height: 100,
        color: Colors.blue,
      ),
    );
  }
}
```

## Customization

You can customize the ripple effect by passing properties to the `TouchRipple` widget:

```dart
TouchRipple(
  rippleColor: Colors.red,
  rippleRadius: 50,
  rippleDuration: Duration(milliseconds: 500),
  child: Container(
    width: 100,
    height: 100,
    color: Colors.blue,
  ),
)
```

## Platform-Specific Details

The `flutter_touch_ripple` package works on both Android and iOS platforms. However, the ripple effect may behave slightly differently on each platform due to the underlying platform-specific implementation.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_touch_ripple/flutter_touch_ripple.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Touch Ripple Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a Scaffold to hold the TouchRipple widget
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Touch Ripple Demo'),
      ),
      body: Center(
        // Wrap the Container with the TouchRipple widget
        child: TouchRipple(
          // Customize the ripple effect
          rippleColor: Colors.red,
          rippleRadius: 50,
          rippleDuration: Duration(milliseconds: 500),
          // Create a Container to demonstrate the ripple effect
          child: Container(
            width: 100,
            height: 100,
            color: Colors.blue,
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a blue Container.
// 2. When the user touches the Container, the TouchRipple widget creates a ripple effect.
// 3. The ripple effect is customized to be red, with a radius of 50, and a duration of 500 milliseconds.
// 4. The ripple effect is displayed on top of the Container, giving the appearance of a touch ripple effect.
// 5. When the user lifts their finger, the ripple effect disappears.
```

<-- END_MAIN -->