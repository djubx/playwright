<-- START_DESCRIPTION -->

**Appwrite Auth Kit Flutter Package**
=====================================

The Appwrite Auth Kit is a Flutter package that provides a simple and easy-to-use authentication system for your Appwrite backend. It allows you to authenticate users using various methods such as email/password, Google, Facebook, and more.

**When to Use This Package**
---------------------------

You should use this package when you need to authenticate users in your Flutter app using Appwrite as your backend. This package provides a simple and easy-to-use API for authenticating users, making it a great choice for developers who want to focus on building their app's features rather than implementing authentication from scratch.

**Features**
------------

*   Email/Password authentication
*   Google authentication
*   Facebook authentication
*   GitHub authentication
*   Anonymous authentication
*   JWT token management

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setup and Usage**
-------------------

### Step 1: Add the Package to Your Pubspec.yaml File

```yml
dependencies:
  appwrite_auth_kit: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:appwrite_auth_kit/appwrite_auth_kit.dart';
```

### Step 3: Initialize the Appwrite Auth Kit

```dart
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await AppwriteAuthKit.init(
    endpoint: 'https://your-appwrite-endpoint.com/v1',
    projectId: 'your-project-id',
  );
  runApp(MyApp());
}
```

### Step 4: Use the Auth Kit to Authenticate Users

```dart
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Appwrite Auth Kit Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Appwrite Auth Kit Demo'),
        ),
        body: Center(
          child: ElevatedButton(
            onPressed: () async {
              final user = await AppwriteAuthKit.auth(
                email: 'user@example.com',
                password: 'password',
              );
              print(user);
            },
            child: Text('Login'),
          ),
        ),
      ),
    );
  }
}
```

### Platform-Specific Details

*   Android: Make sure to add the following lines to your `android/app/src/main/AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.INTERNET" />
```

*   iOS: Make sure to add the following lines to your `ios/Runner/Info.plist` file:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:appwrite_auth_kit/appwrite_auth_kit.dart';

void main() async {
  // Initialize the Appwrite Auth Kit
  WidgetsFlutterBinding.ensureInitialized();
  await AppwriteAuthKit.init(
    endpoint: 'https://your-appwrite-endpoint.com/v1',
    projectId: 'your-project-id',
  );

  // Run the app
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Appwrite Auth Kit Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Appwrite Auth Kit Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              ElevatedButton(
                onPressed: () async {
                  // Login using email and password
                  final user = await AppwriteAuthKit.auth(
                    email: 'user@example.com',
                    password: 'password',
                  );
                  print(user);
                },
                child: Text('Login'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  // Register a new user
                  final user = await AppwriteAuthKit.register(
                    email: 'newuser@example.com',
                    password: 'password',
                  );
                  print(user);
                },
                child: Text('Register'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  // Logout the current user
                  await AppwriteAuthKit.logout();
                },
                child: Text('Logout'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The app starts by initializing the Appwrite Auth Kit with the endpoint and project ID.
// Then, it runs the RealFlutter app, which displays a column of buttons for logging in, registering, and logging out.
// When a button is pressed, the corresponding method is called, and the result is printed to the console.
// The app uses the AppwriteAuthKit class to handle all authentication-related tasks.
```

<-- END_MAIN -->