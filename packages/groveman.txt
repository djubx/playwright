<-- START_DESCRIPTION -->

# Introduction to Groveman Flutter Package
=============================================

The Groveman Flutter package is a powerful tool for managing and interacting with device hardware, specifically designed for Flutter applications. It provides a simple and intuitive API for accessing device features such as camera, microphone, and storage.

## When to Use Groveman
------------------------

Groveman is ideal for applications that require direct access to device hardware, such as:

* Camera and image processing apps
* Audio recording and playback apps
* File management and storage apps

## Features of Groveman
-------------------------

* Camera access and control
* Microphone access and control
* Storage access and management
* Platform-specific optimizations for Android and iOS

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up Groveman
=====================

To use Groveman in your Flutter application, follow these steps:

### Step 1: Add Groveman to Your Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  groveman: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import Groveman

Import the Groveman package in your Dart file:
```dart
import 'package:groveman/groveman.dart';
```
### Step 3: Initialize Groveman

Initialize Groveman in your `main` function:
```dart
void main() {
  Groveman.init();
  runApp(MyApp());
}
```
### Platform-Specific Configurations

#### Android

Add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.CAMERA" />
<uses-permission android:name="android.permission.RECORD_AUDIO" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```
#### iOS

Add the following permissions to your `Info.plist` file:
```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to take photos.</string>
<key>NSMicrophoneUsageDescription</key>
<string>This app needs microphone access to record audio.</string>
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs photo library access to save photos.</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:groveman/groveman.dart';

void main() {
  Groveman.init();
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Initialize camera and microphone
  CameraController _cameraController;
  MicrophoneController _microphoneController;

  // Initialize storage
  StorageController _storageController;

  @override
  void initState() {
    super.initState();
    _initCamera();
    _initMicrophone();
    _initStorage();
  }

  // Initialize camera
  void _initCamera() async {
    _cameraController = await Groveman.getCameraController();
    setState(() {});
  }

  // Initialize microphone
  void _initMicrophone() async {
    _microphoneController = await Groveman.getMicrophoneController();
    setState(() {});
  }

  // Initialize storage
  void _initStorage() async {
    _storageController = await Groveman.getStorageController();
    setState(() {});
  }

  // Take photo
  void _takePhoto() async {
    final photo = await _cameraController.takePhoto();
    await _storageController.savePhoto(photo);
  }

  // Record audio
  void _recordAudio() async {
    final audio = await _microphoneController.recordAudio();
    await _storageController.saveAudio(audio);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Groveman Example'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              ElevatedButton(
                onPressed: _takePhoto,
                child: Text('Take Photo'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _recordAudio,
                child: Text('Record Audio'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Application flow:
// 1. Initialize Groveman in the main function.
// 2. Initialize camera, microphone, and storage controllers in the initState method.
// 3. Use the camera controller to take a photo.
// 4. Use the microphone controller to record audio.
// 5. Use the storage controller to save the photo and audio.
// 6. Display the saved photo and audio in the app.

// Summary:
// This example demonstrates how to use the Groveman package to access device hardware,
// specifically the camera, microphone, and storage. It shows how to initialize the
// controllers, take a photo, record audio, and save the files to storage.
```

<-- END_MAIN -->