<-- START_DESCRIPTION -->

# Flutter Location Wakeup Package
=====================================

The `flutter_location_wakeup` package is a Flutter plugin that allows you to wake up your app when the device enters a specific location. This package is useful for apps that require location-based services, such as geofencing, location tracking, or location-based notifications.

### Features

* Wake up your app when the device enters a specific location
* Set multiple locations to wake up your app
* Customize the wake-up interval and distance
* Supports both Android and iOS platforms

### When to Use

This package is useful for apps that require location-based services, such as:

* Geofencing: Wake up your app when the device enters or exits a specific location
* Location tracking: Wake up your app at regular intervals to track the device's location
* Location-based notifications: Wake up your app to send notifications when the device enters a specific location

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
==========================

To use the `flutter_location_wakeup` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_location_wakeup: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_location_wakeup/flutter_location_wakeup.dart';
```
### Step 3: Request Location Permissions

Request location permissions on both Android and iOS platforms:
```dart
import 'package:location_permissions/location_permissions.dart';

Future<void> requestLocationPermissions() async {
  await LocationPermissions().requestPermissions();
}
```
### Step 4: Set Up the Wake-Up Service

Set up the wake-up service on both Android and iOS platforms:
```dart
import 'package:flutter_location_wakeup/flutter_location_wakeup.dart';

Future<void> setUpWakeUpService() async {
  await FlutterLocationWakeup().setUpWakeUpService();
}
```
### Step 5: Add Wake-Up Locations

Add wake-up locations using the `addWakeUpLocation` method:
```dart
import 'package:flutter_location_wakeup/flutter_location_wakeup.dart';

Future<void> addWakeUpLocation() async {
  await FlutterLocationWakeup().addWakeUpLocation(
    latitude: 37.7749,
    longitude: -122.4194,
    radius: 1000,
  );
}
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_location_wakeup/flutter_location_wakeup.dart';
import 'package:location_permissions/location_permissions.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  void initState() {
    super.initState();
    requestLocationPermissions();
    setUpWakeUpService();
  }

  Future<void> requestLocationPermissions() async {
    // Request location permissions on both Android and iOS platforms
    await LocationPermissions().requestPermissions();
  }

  Future<void> setUpWakeUpService() async {
    // Set up the wake-up service on both Android and iOS platforms
    await FlutterLocationWakeup().setUpWakeUpService();
  }

  Future<void> addWakeUpLocation() async {
    // Add a wake-up location using the addWakeUpLocation method
    await FlutterLocationWakeup().addWakeUpLocation(
      latitude: 37.7749,
      longitude: -122.4194,
      radius: 1000,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Location Wakeup'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: addWakeUpLocation,
          child: Text('Add Wake-Up Location'),
        ),
      ),
    );
  }
}

// The app starts by requesting location permissions and setting up the wake-up service.
// When the user clicks the "Add Wake-Up Location" button, the app adds a wake-up location using the addWakeUpLocation method.
// When the device enters the wake-up location, the app wakes up and performs the desired action.
```

<-- END_MAIN -->