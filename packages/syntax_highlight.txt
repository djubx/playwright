<-- START_DESCRIPTION -->

# Syntax Highlight Flutter Package
=====================================

The `syntax_highlight` Flutter package is a powerful tool for highlighting code syntax in your Flutter applications. It supports a wide range of programming languages and is highly customizable.

### When to Use This Package

This package is ideal for applications that require code editing or display, such as:

* Code editors
* IDEs
* Code snippet sharing platforms
* Educational apps

### Features

* Supports over 100 programming languages
* Highly customizable syntax highlighting
* Supports line numbers and gutter rendering
* Works well with Flutter's `Text` widget

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `syntax_highlight` package, add it to your `pubspec.yaml` file:

```yml
dependencies:
  syntax_highlight: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Platform-Specific Details

* Android: No additional setup required.
* iOS: No additional setup required.

### Using the Package

To use the package, import it in your Dart file:

```dart
import 'package:syntax_highlight/syntax_highlight.dart';
```

Then, create a `SyntaxHighlight` widget and pass in the code you want to highlight:

```dart
SyntaxHighlight(
  code: 'print("Hello, World!");',
  language: 'dart',
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:syntax_highlight/syntax_highlight.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a Scaffold to hold the app
    return Scaffold(
      appBar: AppBar(
        title: Text('Syntax Highlight Example'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            // Create a SyntaxHighlight widget to highlight some Dart code
            SyntaxHighlight(
              code: 'print("Hello, World!");',
              language: 'dart',
              // Customize the syntax highlighting
              theme: SyntaxTheme(
                baseStyle: TextStyle(fontSize: 16),
                commentStyle: TextStyle(color: Colors.green),
                keywordStyle: TextStyle(color: Colors.blue),
              ),
            ),
            SizedBox(height: 16),
            // Create another SyntaxHighlight widget to highlight some Python code
            SyntaxHighlight(
              code: 'print("Hello, World!")',
              language: 'python',
              // Customize the syntax highlighting
              theme: SyntaxTheme(
                baseStyle: TextStyle(fontSize: 16),
                commentStyle: TextStyle(color: Colors.green),
                keywordStyle: TextStyle(color: Colors.blue),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// The app flows as follows:
// 1. The user runs the app and is presented with a Scaffold containing a Column.
// 2. The Column contains two SyntaxHighlight widgets, each highlighting a different piece of code.
// 3. The first SyntaxHighlight widget highlights some Dart code, while the second highlights some Python code.
// 4. The user can view the highlighted code and appreciate the customizable syntax highlighting.
// 5. The app does not respond to user input, as it is simply a demonstration of the syntax_highlight package.

// In summary, this app demonstrates the use of the syntax_highlight package to highlight code in a Flutter app.
// It shows how to customize the syntax highlighting and how to use the package to highlight different programming languages.
```

<-- END_MAIN -->