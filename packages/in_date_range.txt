
// The application flow is as follows:
// 1. The user selects a date using the `showDatePicker` function.
// 2. The selected date is checked against the `_dateRange` object using the `contains` method.
// 3. If the selected date is within the range, a message is printed to the console indicating that the date is within the range.
// 4. If the selected date is not within the range, a message is printed to the console indicating that the date is not within the range.
// 5. The user can repeat the process by selecting a new date.
<-- END_MAIN -->

In summary, the `in_date_range` package provides a simple and efficient way to work with dates and date ranges in Flutter applications. By using the `DateRange` object and its methods, developers can easily check if a date falls within a specific range, calculate the duration between two dates, and find the intersection of two date ranges. The package is highly customizable and works on both Android and iOS platforms.