<-- START_DESCRIPTION -->

# dson_adapter Flutter Package
================================

The `dson_adapter` package is a powerful tool for Flutter developers, allowing them to easily convert between JSON data and Dart objects. This package is particularly useful when working with APIs that return JSON data, as it simplifies the process of parsing and generating JSON.

## Features

*   Supports conversion between JSON data and Dart objects
*   Handles complex data structures, including nested objects and arrays
*   Provides a simple and intuitive API for converting data

## When to Use

The `dson_adapter` package is ideal for any Flutter project that involves working with JSON data. This includes projects that interact with APIs, parse JSON files, or generate JSON data.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Using the dson_adapter Package
=============================

## Setup

To use the `dson_adapter` package, add it to your `pubspec.yaml` file:

```yml
dependencies:
  dson_adapter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Basic Usage

To use the `dson_adapter` package, you need to create a Dart object that represents the JSON data. For example:

```dart
import 'package:dson_adapter/dson_adapter.dart';

class RealFlutter {
  String name;
  int age;

  RealFlutter({this.name, this.age});

  factory RealFlutter.fromJson(Map<String, dynamic> json) {
    return RealFlutter(
      name: json['name'],
      age: json['age'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'age': age,
    };
  }
}
```

You can then use the `dson_adapter` package to convert between JSON data and Dart objects:

```dart
void main() {
  // Create a JSON string
  String jsonString = '{"name": "John Doe", "age": 30}';

  // Convert the JSON string to a Dart object
  RealFlutter realFlutter = RealFlutter.fromJson(json.decode(jsonString));

  // Print the Dart object
  print(realFlutter.name); // John Doe
  print(realFlutter.age); // 30

  // Convert the Dart object back to a JSON string
  String newJsonString = json.encode(realFlutter.toJson());

  // Print the new JSON string
  print(newJsonString); // {"name": "John Doe", "age": 30}
}
```

## Platform-Specific Details

The `dson_adapter` package works on both Android and iOS platforms. However, there are some platform-specific details to keep in mind:

*   On Android, the `dson_adapter` package uses the `json` package to parse and generate JSON data. This package is included in the Android SDK, so you don't need to add it to your `pubspec.yaml` file.
*   On iOS, the `dson_adapter` package uses the `json` package to parse and generate JSON data. However, this package is not included in the iOS SDK, so you need to add it to your `pubspec.yaml` file.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'dart:convert';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'dson_adapter Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _jsonString = '{"name": "John Doe", "age": 30}';

  // Create a Dart object from the JSON string
  RealFlutter _realFlutter = RealFlutter.fromJson(json.decode('{"name": "John Doe", "age": 30}'));

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('dson_adapter Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Name: ${_realFlutter.name}',
              style: TextStyle(fontSize: 24),
            ),
            Text(
              'Age: ${_realFlutter.age}',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Convert the Dart object back to a JSON string
                String newJsonString = json.encode(_realFlutter.toJson());

                // Show the new JSON string
                showDialog(
                  context: context,
                  builder: (BuildContext context) {
                    return AlertDialog(
                      title: Text('New JSON String'),
                      content: Text(newJsonString),
                      actions: <Widget>[
                        TextButton(
                          child: Text('OK'),
                          onPressed: () {
                            Navigator.of(context).pop();
                          },
                        ),
                      ],
                    );
                  },
                );
              },
              child: Text('Show New JSON String'),
            ),
          ],
        ),
      ),
    );
  }
}

// Define the RealFlutter class
class RealFlutter {
  String name;
  int age;

  RealFlutter({this.name, this.age});

  // Create a Dart object from a JSON string
  factory RealFlutter.fromJson(Map<String, dynamic> json) {
    return RealFlutter(
      name: json['name'],
      age: json['age'],
    );
  }

  // Convert a Dart object to a JSON string
  Map<String, dynamic> toJson() {
    return {
      'name': name,
      'age': age,
    };
  }
}

// The application flow is as follows:
// 1. The user runs the app and sees the home page.
// 2. The home page displays the name and age of a person.
// 3. The user can click the "Show New JSON String" button to see the JSON string representation of the person's data.
// 4. The app converts the person's data to a JSON string using the RealFlutter class.
// 5. The app shows the JSON string in a dialog box.
// 6. The user can click the "OK" button to dismiss the dialog box.
```

<-- END_MAIN -->