<-- START_DESCRIPTION -->

# Flutter Thermal Printer Package
=====================================

The `flutter_thermal_printer` package provides a simple and efficient way to print receipts, labels, and other documents using thermal printers. This package is ideal for point-of-sale (POS) systems, inventory management, and other applications that require printing documents on the go.

### Key Features

* Supports multiple thermal printer models
* Easy to use and integrate with Flutter apps
* Fast and efficient printing
* Customizable print settings (e.g., font size, alignment, etc.)

### When to Use This Package

* Point-of-sale (POS) systems
* Inventory management
* Label printing
* Receipt printing
* Any application that requires printing documents on the go

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
==========================

To use the `flutter_thermal_printer` package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

```yml
dependencies:
  flutter_thermal_printer: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:flutter_thermal_printer/flutter_thermal_printer.dart';
```

### Step 3: Initialize the Printer

```dart
ThermalPrinter _printer = ThermalPrinter();

@override
void initState() {
  super.initState();
  _printer.initPrinter();
}
```

### Platform-Specific Details

* **Android:** Make sure to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.BLUETOOTH" />
<uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
```
* **iOS:** Make sure to add the following lines to your `Info.plist` file:
```xml
<key>UIBackgroundModes</key>
<array>
  <string>bluetooth-peripheral</string>
</array>
```

### Required Configurations and Optimizations

* Make sure to set the correct printer model and settings for your specific use case.
* Optimize the print settings for faster printing and better quality.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_thermal_printer/flutter_thermal_printer.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Thermal Printer Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  ThermalPrinter _printer = ThermalPrinter();

  @override
  void initState() {
    super.initState();
    _printer.initPrinter();
  }

  void _printReceipt() {
    // Set the printer settings
    _printer.setPrinterSettings(
      font: ThermalPrinterFont.size24,
      alignment: ThermalPrinterAlignment.center,
    );

    // Print the receipt header
    _printer.printLine('Receipt Header');

    // Print the receipt body
    _printer.printLine('Item 1: $10.99');
    _printer.printLine('Item 2: $5.99');

    // Print the receipt footer
    _printer.printLine('Total: $16.98');

    // Cut the paper
    _printer.cutPaper();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Thermal Printer Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _printReceipt,
          child: Text('Print Receipt'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user presses the 'Print Receipt' button.
// 2. The _printReceipt function is called.
// 3. The printer settings are set.
// 4. The receipt header is printed.
// 5. The receipt body is printed.
// 6. The receipt footer is printed.
// 7. The paper is cut.
// 8. The receipt is printed successfully.

// In summary, this code demonstrates how to use the flutter_thermal_printer package to print a receipt.
// It sets the printer settings, prints the receipt header, body, and footer, and cuts the paper.
```

<-- END_MAIN -->