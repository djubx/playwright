```markdown
<-- START_DESCRIPTION -->

# Draggable Bottom Sheet Null Safety in Flutter

The `draggable_bottom_sheet_nullsafety` package is a powerful Flutter library that allows developers to create customizable and interactive bottom sheets with ease. This package is particularly useful when you need to present additional content or options without navigating away from the current screen. It provides a smooth and intuitive user experience by allowing users to drag the bottom sheet to reveal more content.

## When to Use

- **Modal Bottom Sheets**: When you need to display a temporary view that covers part of the screen.
- **Persistent Bottom Sheets**: For content that should remain visible while interacting with the main screen.
- **Interactive Content**: When you want users to interact with the content by dragging it up or down.

## Features

- **Null Safety**: Fully supports Dart's null safety, ensuring safer and more reliable code.
- **Customizable**: Easily customize the appearance and behavior of the bottom sheet.
- **Smooth Animations**: Provides smooth and responsive animations for a better user experience.
- **Flexible**: Supports both modal and persistent bottom sheets.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using Draggable Bottom Sheet Null Safety

In this section, we'll walk through the setup process and demonstrate how to use the `draggable_bottom_sheet_nullsafety` package in a Flutter project.

## Setup

1. **Add Dependency**

   Add the package to your `pubspec.yaml` file:

   ```yaml
   dependencies:
     flutter:
       sdk: flutter
     draggable_bottom_sheet_nullsafety: ^1.0.0
   ```

2. **Install Packages**

   Run the following command to install the new dependency:

   ```bash
   flutter pub get
   ```

## Platform-Specific Details

### Android

Ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

```gradle
android {
    defaultConfig {
        minSdkVersion 21
    }
}
```

### iOS

Make sure your iOS deployment target is set to 9.0 or higher in your `ios/Podfile`:

```ruby
platform :ios, '9.0'
```

## Using the Package

To use the `draggable_bottom_sheet_nullsafety` package, import it into your Dart file:

```dart
import 'package:draggable_bottom_sheet_nullsafety/draggable_bottom_sheet_nullsafety.dart';
```

### Basic Usage

Here's a simple example of how to implement a draggable bottom sheet:

```dart
DraggableBottomSheet(
  backgroundWidget: RealFlutter(), // Your main content widget
  previewChild: Container(
    color: Colors.blue,
    child: Center(child: Text('Drag me up')),
  ),
  expandedChild: Container(
    color: Colors.white,
    child: Center(child: Text('Expanded content')),
  ),
  minExtent: 100,
  maxExtent: 500,
  onDragging: (double position) {
    print('Dragging position: $position');
  },
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:draggable_bottom_sheet_nullsafety/draggable_bottom_sheet_nullsafety.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Draggable Bottom Sheet Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Draggable Bottom Sheet Example'),
      ),
      body: DraggableBottomSheet(
        backgroundWidget: Center(
          child: Text('Main Content Area'),
        ),
        previewChild: Container(
          color: Colors.blue,
          child: Center(
            child: Text(
              'Drag me up',
              style: TextStyle(color: Colors.white),
            ),
          ),
        ),
        expandedChild: Container(
          color: Colors.white,
          child: Center(
            child: Text('Expanded content'),
          ),
        ),
        minExtent: 100, // Minimum height of the bottom sheet
        maxExtent: 500, // Maximum height of the bottom sheet
        onDragging: (double position) {
          // Callback for when the sheet is being dragged
          print('Dragging position: $position');
        },
      ),
    );
  }
}

// Application Flow Explanation:
// The application starts with the `MyApp` widget, which sets up the MaterialApp.
// The home screen is set to the `RealFlutter` widget, which is a StatelessWidget.
// Inside `RealFlutter`, a Scaffold is used to provide a basic app structure with an AppBar and a body.
// The body of the Scaffold contains the `DraggableBottomSheet` widget.
// `DraggableBottomSheet` has three main components:
// 1. `backgroundWidget`: Displays the main content of the screen.
// 2. `previewChild`: The initial visible part of the bottom sheet that users can drag.
// 3. `expandedChild`: The content that is revealed when the bottom sheet is fully expanded.
// The `minExtent` and `maxExtent` properties define the draggable range of the bottom sheet.
// The `onDragging` callback provides the current position of the sheet as it is dragged.
```

<-- END_MAIN -->
```