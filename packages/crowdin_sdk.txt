<-- START_DESCRIPTION -->

# Crowdin SDK Flutter Package
The Crowdin SDK Flutter package is a localization solution for Flutter applications. It allows developers to easily manage translations and deliver multilingual apps to their users. With the Crowdin SDK, you can automate the translation process, reduce costs, and improve the overall user experience.

## Key Features

*   Localization management: Manage translations for your app in a single place.
*   Automated translation: Automate the translation process using Crowdin's machine translation or human translation services.
*   Real-time updates: Deliver translations to your app in real-time, without requiring app updates.
*   Customizable: Customize the SDK to fit your app's specific needs.

## When to Use

*   You want to deliver a multilingual app to your users.
*   You need to manage translations for your app in a single place.
*   You want to automate the translation process to reduce costs and improve efficiency.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Crowdin SDK

## Step 1: Add the Crowdin SDK to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  crowdin_sdk: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Configure the Crowdin SDK

Create a new file called `crowdin_config.json` in the root of your project with the following content:

```json
{
  "projectId": "YOUR_PROJECT_ID",
  "apiToken": "YOUR_API_TOKEN",
  "language": "en"
}
```

Replace `YOUR_PROJECT_ID` and `YOUR_API_TOKEN` with your actual Crowdin project ID and API token.

## Step 3: Initialize the Crowdin SDK

In your `main.dart` file, import the Crowdin SDK and initialize it:

```dart
import 'package:crowdin_sdk/crowdin_sdk.dart';

void main() {
  CrowdinSDK.init(
    config: CrowdinConfig.fromJson(
      jsonDecode(
        File('crowdin_config.json').readAsStringSync(),
      ),
    ),
  );
  runApp(MyApp());
}
```

## Platform-Specific Details

### Android

Add the following code to your `AndroidManifest.xml` file:

```xml
<application
  ...
  android:usesCleartextTraffic="true"
  ...>
```

### iOS

Add the following code to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:crowdin_sdk/crowdin_sdk.dart';

void main() {
  // Initialize the Crowdin SDK
  CrowdinSDK.init(
    config: CrowdinConfig.fromJson(
      jsonDecode(
        File('crowdin_config.json').readAsStringSync(),
      ),
    ),
  );

  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _translatedText = '';

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Crowdin SDK Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text(_translatedText),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  // Get the translated text from Crowdin
                  String translatedText = await CrowdinSDK.translate(
                    'Hello, World!',
                    language: 'es',
                  );

                  setState(() {
                    _translatedText = translatedText;
                  });
                },
                child: Text('Translate'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and the Crowdin SDK is initialized.
// 2. The user clicks the "Translate" button.
// 3. The Crowdin SDK translates the text "Hello, World!" into Spanish.
// 4. The translated text is displayed on the screen.
// 5. The user can repeat the process by clicking the "Translate" button again.

// This code demonstrates the basic functionality of the Crowdin SDK.
// It shows how to initialize the SDK, translate text, and display the translated text.
```

<-- END_MAIN -->