<-- START_DESCRIPTION -->

# Duration Picker Flutter Package
=====================================

The `duration_picker` Flutter package provides a simple and intuitive way to allow users to select a duration from a pre-defined range. It is a useful tool for applications that require users to input a duration, such as timer apps, scheduling apps, or fitness tracking apps.

## Features

*   Allows users to select a duration from a pre-defined range
*   Supports both Android and iOS platforms
*   Customizable UI to fit your app's theme
*   Easy to use and integrate into your Flutter app

## When to Use

*   When you need to allow users to input a duration in your app
*   When you want to provide a simple and intuitive way for users to select a duration
*   When you need a customizable UI to fit your app's theme

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Duration Picker Flutter Package
=====================================================

## Step 1: Add the Package to Your Pubspec.yaml File

To use the `duration_picker` package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` file and add the following line under the `dependencies` section:

```yml
dependencies:
  flutter:
    sdk: flutter
  duration_picker: ^1.0.0
```

## Step 2: Import the Package in Your Dart File

After adding the package to your `pubspec.yaml` file, you need to import it in your Dart file. Open your Dart file and add the following line at the top:

```dart
import 'package:duration_picker/duration_picker.dart';
```

## Step 3: Use the DurationPicker Widget

To use the `DurationPicker` widget, you need to create a new instance of it and pass the required parameters. Here is an example:

```dart
DurationPicker(
  duration: Duration(hours: 1, minutes: 30),
  onChange: (duration) {
    print(duration);
  },
)
```

In this example, we create a new `DurationPicker` widget with an initial duration of 1 hour and 30 minutes. We also pass a callback function to the `onChange` parameter, which will be called whenever the user changes the duration.

## Platform-Specific Details

The `duration_picker` package works on both Android and iOS platforms. However, there are some platform-specific details to keep in mind:

*   On Android, the `DurationPicker` widget will use the Material Design theme by default. If you want to use a different theme, you can pass a `theme` parameter to the `DurationPicker` constructor.
*   On iOS, the `DurationPicker` widget will use the Cupertino theme by default. If you want to use a different theme, you can pass a `theme` parameter to the `DurationPicker` constructor.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:duration_picker/duration_picker.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Duration Picker Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Duration _duration = Duration(hours: 1, minutes: 30);

  void _onChange(Duration duration) {
    setState(() {
      _duration = duration;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Duration Picker Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Select a duration:',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            DurationPicker(
              duration: _duration,
              onChange: _onChange,
            ),
            SizedBox(height: 20),
            Text(
              'Selected duration: ${_duration.toString()}',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget is a stateless widget that wraps the entire app.
// It uses the MaterialApp widget to provide a Material Design theme to the app.
// The home property of the MaterialApp widget is set to the MyHomePage widget, which is the main page of the app.
// The MyHomePage widget is a stateful widget that contains a DurationPicker widget.
// The DurationPicker widget is used to select a duration, and the selected duration is displayed below the picker.
// When the user changes the duration, the _onChange function is called, which updates the _duration variable and rebuilds the widget tree.
// The selected duration is displayed in the Text widget below the picker.
```

<-- END_MAIN -->