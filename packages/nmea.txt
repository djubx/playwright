<-- START_DESCRIPTION -->

# NMEA Flutter Package Description
=====================================

The `nmea` Flutter package provides a simple and efficient way to parse and handle NMEA (National Marine Electronics Association) messages in your Flutter applications. NMEA messages are used to communicate between marine electronics devices, such as GPS receivers, depth sounders, and autopilots.

This package is useful when you need to:

* Parse NMEA messages from a GPS receiver or other marine electronics device
* Handle NMEA messages in your Flutter application
* Convert NMEA messages to a more usable format

Features of the `nmea` package include:

* Support for parsing NMEA messages from strings or streams
* Automatic handling of checksums and message validation
* Conversion of NMEA messages to a more usable format (e.g. latitude and longitude)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# NMEA Flutter Package Tutorial
=============================

## Setup

To use the `nmea` package in your Flutter application, add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  nmea: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Platform-Specific Details

### Android

On Android, you will need to add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
```
This permission is required to access the device's GPS receiver.

### iOS

On iOS, you will need to add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to your location to work properly</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to your location to work properly</string>
```
These lines are required to access the device's GPS receiver.

## Using the Package

To use the `nmea` package, import it into your Dart file:
```dart
import 'package:nmea/nmea.dart';
```
Then, create an instance of the `NmeaParser` class:
```dart
NmeaParser parser = NmeaParser();
```
You can then use the `parser` object to parse NMEA messages from strings or streams.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:nmea/nmea.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NMEA Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  NmeaParser _parser = NmeaParser();
  String _message = '';

  void _parseMessage() {
    // Create a sample NMEA message
    String message = '\$GPGGA,123519,4807.038,N,01131.000,E,1,08,0.9,545.4,M,46.9,M,,*47';

    // Parse the message
    NmeaMessage parsedMessage = _parser.parse(message);

    // Print the parsed message
    print(parsedMessage);

    // Update the UI with the parsed message
    setState(() {
      _message = parsedMessage.toString();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('NMEA Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(_message),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _parseMessage,
              child: Text('Parse Message'),
            ),
          ],
        ),
      ),
    );
  }
}
```

// This code creates a simple Flutter app that parses a sample NMEA message.
// The app uses the `nmea` package to parse the message and display the result.
// The app has a single button that triggers the parsing of the message.
// When the button is pressed, the app creates a sample NMEA message and passes it to the `NmeaParser` object.
// The `NmeaParser` object then parses the message and returns a `NmeaMessage` object.
// The app then prints the parsed message to the console and updates the UI with the result.

// The app flow is as follows:
// 1. The user presses the "Parse Message" button.
// 2. The app creates a sample NMEA message.
// 3. The app passes the message to the `NmeaParser` object.
// 4. The `NmeaParser` object parses the message and returns a `NmeaMessage` object.
// 5. The app prints the parsed message to the console.
// 6. The app updates the UI with the result.

<-- END_MAIN -->