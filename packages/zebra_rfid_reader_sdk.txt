<-- START_DESCRIPTION -->

# Zebra RFID Reader SDK Flutter Package
======================================

The `zebra_rfid_reader_sdk` Flutter package provides a set of APIs to interact with Zebra RFID readers. It allows developers to create Flutter applications that can read and write RFID tags using Zebra devices.

## When to Use This Package
---------------------------

This package is ideal for developers who want to create Flutter applications that require RFID tag reading and writing capabilities using Zebra devices. Some examples of use cases include:

* Inventory management
* Asset tracking
* Supply chain management
* Access control

## Features
------------

The `zebra_rfid_reader_sdk` package provides the following features:

* Connect to Zebra RFID readers via Bluetooth or USB
* Read and write RFID tags
* Configure reader settings
* Monitor reader events

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
================

## Step 1: Add the Package to Your Flutter Project
------------------------------------------------

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  zebra_rfid_reader_sdk: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package
-----------------------------

Import the package in your Dart file:
```dart
import 'package:zebra_rfid_reader_sdk/zebra_rfid_reader_sdk.dart';
```
## Step 3: Initialize the Reader
---------------------------------

Initialize the reader by calling the `init` method:
```dart
ZebraRfidReaderSdk.init();
```
## Step 4: Connect to the Reader
--------------------------------

Connect to the reader using the `connect` method:
```dart
ZebraRfidReaderSdk.connect('your_reader_address');
```
Replace `'your_reader_address'` with the actual address of your Zebra RFID reader.

## Step 5: Read and Write RFID Tags
-----------------------------------

Use the `read` and `write` methods to read and write RFID tags:
```dart
ZebraRfidReaderSdk.read('your_tag_id');
ZebraRfidReaderSdk.write('your_tag_id', 'your_data');
```
Replace `'your_tag_id'` with the actual ID of the RFID tag you want to read or write.

## Platform-Specific Details
---------------------------

### Android

* Make sure to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.BLUETOOTH" />
<uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
```
* If you're using Android 6.0 or later, make sure to request the `BLUETOOTH` and `BLUETOOTH_ADMIN` permissions at runtime.

### iOS

* Make sure to add the following frameworks to your `Info.plist` file:
```xml
<key>UIRequiredDeviceCapabilities</key>
<array>
    <string>bluetooth-le</string>
</array>
```
* If you're using iOS 13 or later, make sure to request the `NSBluetoothAlwaysUsageDescription` permission at runtime.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:zebra_rfid_reader_sdk/zebra_rfid_reader_sdk.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String _readerAddress = '';
  String _tagId = '';
  String _data = '';

  @override
  void initState() {
    super.initState();
    ZebraRfidReaderSdk.init();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Zebra RFID Reader SDK Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              TextField(
                decoration: InputDecoration(
                  labelText: 'Reader Address',
                ),
                onChanged: (value) {
                  setState(() {
                    _readerAddress = value;
                  });
                },
              ),
              TextField(
                decoration: InputDecoration(
                  labelText: 'Tag ID',
                ),
                onChanged: (value) {
                  setState(() {
                    _tagId = value;
                  });
                },
              ),
              TextField(
                decoration: InputDecoration(
                  labelText: 'Data',
                ),
                onChanged: (value) {
                  setState(() {
                    _data = value;
                  });
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () async {
                  await ZebraRfidReaderSdk.connect(_readerAddress);
                  await ZebraRfidReaderSdk.read(_tagId);
                  await ZebraRfidReaderSdk.write(_tagId, _data);
                },
                child: Text('Read and Write'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters the reader address, tag ID, and data in the text fields.
// 2. When the user presses the "Read and Write" button, the app connects to the reader using the provided address.
// 3. The app then reads the RFID tag with the provided ID.
// 4. After reading the tag, the app writes the provided data to the tag.
// 5. The app then disconnects from the reader.
```

// The code above demonstrates a basic example of how to use the Zebra RFID Reader SDK in a Flutter app.
// The app connects to a reader, reads and writes an RFID tag, and then disconnects from the reader.
// The user can enter the reader address, tag ID, and data in the text fields, and then press the "Read and Write" button to perform the operation.

<-- END_MAIN -->