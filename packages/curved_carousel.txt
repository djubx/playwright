<-- START_DESCRIPTION -->

# Curved Carousel Flutter Package
=====================================

The `curved_carousel` Flutter package is a powerful and customizable widget that allows you to create beautiful, curved carousels for your Flutter applications. With its flexible API and intuitive design, you can easily create stunning carousels that enhance the user experience of your app.

### When to Use This Package

The `curved_carousel` package is perfect for creating:

* Image galleries with a curved layout
* Product showcases with a unique, eye-catching design
* Onboarding screens with a visually appealing carousel

### Features

* Customizable curve radius and angle
* Support for multiple item types (images, widgets, etc.)
* Automatic item sizing and spacing
* Optional pagination and navigation controls

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Curved Carousel Package
==========================================

To use the `curved_carousel` package in your Flutter project, follow these steps:

### Step 1: Add the Package to Your `pubspec.yaml` File

```yml
dependencies:
  curved_carousel: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:curved_carousel/curved_carousel.dart';
```

### Step 3: Create a Curved Carousel Widget

```dart
CurvedCarousel(
  items: [
    // Your items here (images, widgets, etc.)
  ],
  curveRadius: 100.0,
  curveAngle: 45.0,
)
```

### Platform-Specific Details

* For Android, make sure to add the following line to your `AndroidManifest.xml` file:
```xml
<application android:hardwareAccelerated="true" ...>
```
* For iOS, no additional configuration is required.

### Optimizations

* To improve performance, consider using a smaller curve radius and angle.
* Use caching to reduce the number of times the carousel items are rebuilt.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:curved_carousel/curved_carousel.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Curved Carousel Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Curved Carousel Demo'),
        ),
        body: CurvedCarousel(
          items: [
            // Item 1: Image
            Image.asset('assets/image1.jpg'),
            // Item 2: Widget
            Container(
              color: Colors.blue,
              child: Text('Item 2'),
            ),
            // Item 3: Image
            Image.asset('assets/image3.jpg'),
          ],
          curveRadius: 100.0,
          curveAngle: 45.0,
          pagination: true,
          navigation: true,
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user runs the app and is presented with a curved carousel.
// 2. The carousel displays three items: two images and one widget.
// 3. The user can navigate through the items by swiping left or right.
// 4. The pagination control at the bottom of the screen indicates the current item.
// 5. The navigation controls on either side of the carousel allow the user to move to the next or previous item.
// 6. As the user navigates through the items, the carousel curves and animates smoothly.
```

// Final summary:
// The code creates a curved carousel with three items: two images and one widget.
// The carousel is customizable, with options for curve radius, angle, pagination, and navigation.
// The app demonstrates a smooth and visually appealing user experience.

<-- END_MAIN -->