```markdown
<!-- START_DESCRIPTION -->
# Overview of the `dart_numero_extenso_br` Flutter Package

The `dart_numero_extenso_br` package is a specialized Dart library designed to convert numbers into their corresponding textual representations in Brazilian Portuguese. This package is particularly useful in applications that require displaying numbers in a more human-readable format, such as in invoices, financial applications, or educational tools.

## When to Use This Package
- **Financial Applications**: Displaying amounts in words for invoices or receipts.
- **Educational Tools**: Helping students learn number representations in Portuguese.
- **User Interfaces**: Enhancing user experience by providing a more natural language representation of numbers.

## Key Features
- **Number to Text Conversion**: Converts integers and decimals into their written form in Brazilian Portuguese.
- **Support for Large Numbers**: Handles large integers and provides accurate representations.
- **Customizable Output**: Options to format the output according to specific needs.

This package simplifies the process of converting numbers to text, making it an essential tool for developers working on applications targeting Brazilian users.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using `dart_numero_extenso_br`

## Installation
To use the `dart_numero_extenso_br` package in your Flutter project, you need to add it to your `pubspec.yaml` file. Open the file and add the following line under dependencies:

```yaml
dependencies:
  flutter:
    sdk: flutter
  dart_numero_extenso_br: ^1.0.0  # Check for the latest version on pub.dev
```

After adding the dependency, run the following command in your terminal to install the package:

```bash
flutter pub get
```

## Usage
### Importing the Package
In your Dart file, import the package:

```dart
import 'package:dart_numero_extenso_br/dart_numero_extenso_br.dart';
```

### Basic Example
You can use the `NumeroExtenso` class to convert numbers to their textual representation. Here’s a simple example:

```dart
void main() {
  var numero = 1234;
  var extenso = NumeroExtenso(numero).porExtenso();
  print(extenso); // Output: "mil duzentos e trinta e quatro"
}
```

### Platform-Specific Details
The `dart_numero_extenso_br` package is designed to work seamlessly on both Android and iOS platforms. There are no additional configurations required for either platform. Just ensure that your Flutter environment is set up correctly.

### Optimizations
For optimal performance, especially when dealing with large numbers or frequent conversions, consider caching results if the same numbers are converted multiple times.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using `dart_numero_extenso_br`

```dart
import 'package:flutter/material.dart';
import 'package:dart_numero_extenso_br/dart_numero_extenso_br.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Numero Extenso Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Número Extenso em Português'),
        ),
        body: Center(
          child: NumberToTextWidget(),
        ),
      ),
    );
  }
}

class NumberToTextWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Define a number to convert
    int number = 123456;
    
    // Convert the number to its textual representation
    String numberInWords = NumeroExtenso(number).porExtenso();
    
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Text(
          'Número: $number',
          style: TextStyle(fontSize: 24),
        ),
        SizedBox(height: 20),
        Text(
          'Extenso: $numberInWords',
          style: TextStyle(fontSize: 24),
        ),
      ],
    );
  }
}

// Application Flow Explanation:
// 1. The main function initializes the Flutter app by calling runApp() with the RealFlutter widget.
// 2. The RealFlutter widget builds a MaterialApp with a title and a home Scaffold.
// 3. The Scaffold contains an AppBar and a Center widget that holds the NumberToTextWidget.
// 4. The NumberToTextWidget defines a number (123456) and converts it to its textual representation using the NumeroExtenso class.
// 5. The converted number is displayed in a Column widget, showing both the original number and its text representation.
```
<!-- END_MAIN -->
```

### Summary
In this blog post, we explored the `dart_numero_extenso_br` package, which allows developers to convert numbers into their written form in Brazilian Portuguese. We covered the installation process, usage examples, and provided a complete Flutter application demonstrating the package's capabilities. This package is particularly useful in financial applications, educational tools, and any scenario where numbers need to be presented in a more readable format.