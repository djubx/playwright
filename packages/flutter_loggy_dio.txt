<-- START_DESCRIPTION -->

# Flutter Loggy Dio Package Overview
=====================================

The `flutter_loggy_dio` package is a powerful logging tool for Flutter applications that use the Dio HTTP client. It provides a simple and efficient way to log HTTP requests and responses, making it easier to debug and monitor your app's network activity.

### When to Use This Package

You should use this package when:

* You want to log HTTP requests and responses in your Flutter app.
* You need to debug network issues in your app.
* You want to monitor your app's network activity.

### Features

* Logs HTTP requests and responses.
* Supports logging of request and response headers, bodies, and query parameters.
* Allows customization of log output.
* Supports Android and iOS platforms.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the Package
=====================================

### Step 1: Add the Package to Your Pubspec.yaml File

```yml
dependencies:
  flutter_loggy_dio: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:flutter_loggy_dio/flutter_loggy_dio.dart';
```

### Step 3: Create a Dio Instance and Add the Logger

```dart
import 'package:dio/dio.dart';

void main() {
  final dio = Dio();
  dio.interceptors.add(LoggyDioInterceptor());
}
```

### Platform-Specific Configurations

#### Android

No additional configurations are required for Android.

#### iOS

No additional configurations are required for iOS.

### Optimizations

You can customize the log output by providing a custom `LoggyDioInterceptor` instance.

```dart
dio.interceptors.add(LoggyDioInterceptor(
  logLevel: LogLevel.debug,
  logFormatter: (log) => '${log.method} ${log.uri}',
));
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_loggy_dio/flutter_loggy_dio.dart';
import 'package:dio/dio.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Loggy Dio Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final dio = Dio();

  @override
  void initState() {
    super.initState();
    dio.interceptors.add(LoggyDioInterceptor());
  }

  Future<void> _makeRequest() async {
    final response = await dio.get('https://jsonplaceholder.typicode.com/todos/1');
    print(response.data);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Loggy Dio Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _makeRequest,
          child: Text('Make Request'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Make Request" button.
// 2. The `_makeRequest` function is called, which makes a GET request to the specified URL using the Dio instance.
// 3. The LoggyDioInterceptor logs the request and response.
// 4. The response data is printed to the console.
// 5. The user can view the logged request and response in the console.

// In summary, this code demonstrates how to use the flutter_loggy_dio package to log HTTP requests and responses in a Flutter application.
```

<-- END_MAIN -->