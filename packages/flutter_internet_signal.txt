<-- START_DESCRIPTION -->

# Flutter Internet Signal Package
=====================================

The `flutter_internet_signal` package is a Flutter library that allows you to detect and monitor the internet connection status of a device. It provides a simple and efficient way to check if the device is connected to the internet, and if so, what type of connection is available (e.g., Wi-Fi, mobile data).

This package is useful in a variety of scenarios, such as:

* Checking if a device is connected to the internet before making a network request
* Displaying a "no internet connection" message to the user if the device is offline
* Switching between online and offline modes in an app

Features of the package include:

* Detecting internet connection status (online/offline)
* Identifying the type of internet connection (Wi-Fi, mobile data)
* Listening for changes in internet connection status

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_internet_signal` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_internet_signal: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:flutter_internet_signal/flutter_internet_signal.dart';
```
### Platform-Specific Details

#### Android

* Add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```
* If you're using Android 10 or later, add the following attribute to your `AndroidManifest.xml` file:
```xml
<application
    ...
    android:usesCleartextTraffic="true"
    ...>
```
#### iOS

* Add the following key to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```
### Using the Package

To detect the internet connection status, use the `InternetSignal` class:
```dart
InternetSignal internetSignal = InternetSignal();

// Check if the device is connected to the internet
bool isConnected = await internetSignal.isConnected();

// Get the type of internet connection
InternetConnectionType connectionType = await internetSignal.getConnectionType();
```
You can also listen for changes in internet connection status using the `InternetSignalListener` class:
```dart
InternetSignalListener listener = InternetSignalListener();

// Listen for changes in internet connection status
listener.onConnectionChange.listen((connectionType) {
  // Handle the new connection type
});
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_internet_signal/flutter_internet_signal.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Internet Signal Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  bool _isConnected = false;
  InternetConnectionType _connectionType = InternetConnectionType.unknown;

  @override
  void initState() {
    super.initState();
    _checkInternetConnection();
  }

  Future<void> _checkInternetConnection() async {
    // Create an instance of the InternetSignal class
    InternetSignal internetSignal = InternetSignal();

    // Check if the device is connected to the internet
    bool isConnected = await internetSignal.isConnected();
    setState(() {
      _isConnected = isConnected;
    });

    // Get the type of internet connection
    InternetConnectionType connectionType = await internetSignal.getConnectionType();
    setState(() {
      _connectionType = connectionType;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Internet Signal Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              _isConnected ? 'Connected to the internet' : 'Not connected to the internet',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            Text(
              'Connection type: ${_connectionType.toString()}',
              style: TextStyle(fontSize: 18),
            ),
          ],
        ),
      ),
    );
  }
}
```

// This code creates a simple Flutter app that checks if the device is connected to the internet and displays the type of internet connection.
// The app uses the InternetSignal class to detect the internet connection status and get the type of internet connection.
// The app updates the UI to display the connection status and type.
// The app also listens for changes in internet connection status and updates the UI accordingly.

<-- END_MAIN -->