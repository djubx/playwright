<-- START_DESCRIPTION -->

# Notebook Paper Flutter Package
=====================================

The `notebook_paper` Flutter package is a customizable widget that mimics the look and feel of a traditional notebook paper. It's perfect for creating note-taking apps, journaling apps, or any other app that requires a paper-like interface.

### Features

* Customizable paper color, texture, and pattern
* Adjustable line spacing and margin sizes
* Support for both portrait and landscape orientations
* Compatible with Android and iOS platforms

### When to Use

Use the `notebook_paper` package when you want to create an app that requires a paper-like interface, such as:

* Note-taking apps
* Journaling apps
* Drawing or sketching apps
* Writing or editing apps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Notebook Paper Package
==========================================

To use the `notebook_paper` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  notebook_paper: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:notebook_paper/notebook_paper.dart';
```
### Step 3: Create a Notebook Paper Widget

Create a `NotebookPaper` widget and customize its properties:
```dart
NotebookPaper(
  paperColor: Colors.white,
  lineSpacing: 20.0,
  marginSize: 16.0,
  child: // your child widget here
)
```
### Platform-Specific Details

* For Android, make sure to add the following line to your `AndroidManifest.xml` file:
```xml
<application
  ...
  android:hardwareAccelerated="true"
  ...
>
```
* For iOS, make sure to add the following line to your `Info.plist` file:
```xml
<key>UIHardwareAcceleration</key>
<true/>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:notebook_paper/notebook_paper.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Notebook Paper Demo',
      home: Scaffold(
        body: NotebookPaper(
          paperColor: Colors.white,
          lineSpacing: 20.0,
          marginSize: 16.0,
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: TextField(
              maxLines: null,
              expands: true,
              decoration: InputDecoration(
                border: InputBorder.none,
                hintText: 'Start typing...',
              ),
            ),
          ),
        ),
      ),
    );
  }
}

// The app starts by running the RealFlutter widget.
// The RealFlutter widget builds a MaterialApp with a Scaffold body.
// The Scaffold body contains a NotebookPaper widget with a white paper color, 20.0 line spacing, and 16.0 margin size.
// The NotebookPaper widget contains a Padding widget with a TextField child.
// The TextField widget is used for typing and has a maxLines property set to null to allow multiple lines of text.
// The expands property is set to true to allow the TextField to expand to fill the available space.
// The InputDecoration widget is used to remove the border and add a hint text to the TextField.
// When the user types in the TextField, the text is displayed on the NotebookPaper widget.

// In summary, this app creates a notebook paper-like interface with a TextField for typing.
// The NotebookPaper widget provides a customizable paper color, texture, and pattern, as well as adjustable line spacing and margin sizes.
```

<-- END_MAIN -->