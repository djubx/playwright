<-- START_DESCRIPTION -->

# nik_validator Flutter Package
================================

The `nik_validator` package is a Flutter library used for validating Indonesian National Identification Number (NIK). It provides a simple and efficient way to check the validity of NIK numbers, making it a useful tool for developers building applications that require Indonesian identification verification.

## When to Use
--------------

This package is ideal for applications that require user identification, such as:

* E-commerce platforms
* Banking and financial services
* Government services
* Healthcare services

## Features
------------

* Validates Indonesian National Identification Number (NIK)
* Checks for valid NIK format
* Verifies NIK number against a set of predefined rules

<-- END_DESCRIPTION -->


<-- START_TUTORIAL -->

# Setting Up nik_validator
---------------------------

To use the `nik_validator` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  nik_validator: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:nik_validator/nik_validator.dart';
```
### Step 3: Use the Package

Create an instance of the `NIKValidator` class and call the `validate` method to validate a NIK number:
```dart
NIKValidator validator = NIKValidator();
bool isValid = validator.validate('1234567890123456');
```
### Platform-Specific Details

* For Android, make sure to add the ` INTERNET` permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
```
* For iOS, no additional configuration is required.

### Optimizations

To improve performance, you can cache the validation results using a caching library like `flutter_cache_manager`.

<-- END_TUTORIAL -->


<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:nik_validator/nik_validator.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NIK Validator Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _nikController = TextEditingController();
  bool _isValid = false;

  void _validateNIK() {
    // Create an instance of the NIKValidator class
    NIKValidator validator = NIKValidator();
    
    // Get the NIK number from the text field
    String nik = _nikController.text;
    
    // Validate the NIK number
    bool isValid = validator.validate(nik);
    
    // Update the UI with the validation result
    setState(() {
      _isValid = isValid;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('NIK Validator Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _nikController,
              decoration: InputDecoration(
                labelText: 'Enter NIK Number',
              ),
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: _validateNIK,
              child: Text('Validate NIK'),
            ),
            SizedBox(height: 16),
            Text(
              _isValid ? 'NIK is valid' : 'NIK is invalid',
              style: TextStyle(
                color: _isValid ? Colors.green : Colors.red,
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters a NIK number in the text field.
// 2. The user clicks the "Validate NIK" button.
// 3. The _validateNIK function is called, which creates an instance of the NIKValidator class.
// 4. The NIK number is passed to the validate method of the NIKValidator instance.
// 5. The validate method checks the validity of the NIK number and returns a boolean result.
// 6. The UI is updated with the validation result, displaying a green "NIK is valid" message if the NIK is valid, or a red "NIK is invalid" message if the NIK is invalid.

// In summary, this code demonstrates the usage of the nik_validator package to validate Indonesian National Identification Numbers (NIK) in a Flutter application.
```

<-- END_MAIN -->