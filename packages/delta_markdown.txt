<-- START_DESCRIPTION -->
# Delta Markdown Package for Flutter
=====================================

The `delta_markdown` package is a powerful library for Flutter that allows you to render Markdown text in your mobile applications. It provides a wide range of features, including support for various Markdown syntax elements, customizable styling, and platform-specific optimizations.

## When to Use This Package
---------------------------

You can use the `delta_markdown` package in any Flutter project where you need to display Markdown text. This can be particularly useful in applications that require displaying formatted text, such as:

* Blogging or news apps
* Documentation or tutorial apps
* Social media or messaging apps

## Features
------------

The `delta_markdown` package provides the following key features:

* Support for various Markdown syntax elements, including headers, bold and italic text, lists, links, and images
* Customizable styling options, including font sizes, colors, and spacing
* Platform-specific optimizations for Android and iOS
* Support for rendering Markdown text from strings or files

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Setting Up the Delta Markdown Package
=====================================

To use the `delta_markdown` package in your Flutter project, follow these steps:

### Step 1: Add the Package to Your `pubspec.yaml` File

Add the following line to the `dependencies` section of your `pubspec.yaml` file:
```yml
dependencies:
  delta_markdown: ^1.0.0
```
### Step 2: Import the Package in Your Dart File

Import the `delta_markdown` package in your Dart file:
```dart
import 'package:delta_markdown/delta_markdown.dart';
```
### Step 3: Use the `Markdown` Widget

Use the `Markdown` widget to render Markdown text in your app:
```dart
Markdown(
  data: '# Hello World!',
  style: MarkdownStyle(
    fontSize: 24,
    color: Colors.black,
  ),
)
```
### Platform-Specific Configurations

For Android, you need to add the following configuration to your `AndroidManifest.xml` file:
```xml
<application
  ...
  android:hardwareAccelerated="true"
  ...
>
```
For iOS, you need to add the following configuration to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:delta_markdown/delta_markdown.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Delta Markdown Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Delta Markdown Demo'),
        ),
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Markdown(
            data: '''
# Hello World!
## This is a subtitle
### This is a smaller subtitle

* Item 1
* Item 2
* Item 3

[Link to Google](https://www.google.com)

![Image of a cat](https://picsum.photos/200/300)
''',
            style: MarkdownStyle(
              fontSize: 24,
              color: Colors.black,
            ),
          ),
        ),
      ),
    );
  }
}
// The app starts by running the main function, which calls runApp with an instance of RealFlutter.
// RealFlutter is a stateless widget that builds a MaterialApp with a title and a home page.
// The home page is a Scaffold with an AppBar and a body.
// The body is a Padding widget that contains a Markdown widget.
// The Markdown widget is used to render the Markdown text.
// The Markdown text includes headers, lists, links, and images.
// The style of the Markdown text is customized using the MarkdownStyle class.
// The app uses the delta_markdown package to render the Markdown text.
```
<-- END_MAIN -->