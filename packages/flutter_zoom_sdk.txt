<-- START_DESCRIPTION -->

# Flutter Zoom SDK Package
==========================

The `flutter_zoom_sdk` package is a Flutter wrapper for the Zoom SDK, allowing developers to easily integrate Zoom meetings and webinars into their Flutter applications. This package provides a simple and efficient way to use the Zoom SDK in Flutter, enabling features such as joining and starting meetings, screen sharing, and more.

When to Use This Package
------------------------

This package is ideal for developers who want to integrate Zoom meetings and webinars into their Flutter applications, such as:

* Virtual event platforms
* Online meeting and collaboration tools
* Education and training platforms
* Healthcare and telemedicine applications

Features
--------

The `flutter_zoom_sdk` package provides the following features:

* Join and start meetings
* Screen sharing
* Audio and video controls
* Meeting settings and configurations
* Webinar support

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Configuration
-------------------------

To use the `flutter_zoom_sdk` package, follow these steps:

### Step 1: Add the Package to Your Flutter Project

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_zoom_sdk: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Configure the Zoom SDK

Create a new file called `zoom_config.dart` and add the following code:
```dart
import 'package:flutter_zoom_sdk/flutter_zoom_sdk.dart';

class ZoomConfig {
  static const String apiKey = 'YOUR_API_KEY';
  static const String apiSecret = 'YOUR_API_SECRET';
}
```
Replace `YOUR_API_KEY` and `YOUR_API_SECRET` with your actual Zoom API key and secret.

### Step 3: Initialize the Zoom SDK

In your `main.dart` file, add the following code:
```dart
import 'package:flutter/material.dart';
import 'package:flutter_zoom_sdk/flutter_zoom_sdk.dart';
import 'zoom_config.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Zoom SDK Demo',
      home: ZoomSDKDemo(),
    );
  }
}

class ZoomSDKDemo extends StatefulWidget {
  @override
  _ZoomSDKDemoState createState() => _ZoomSDKDemoState();
}

class _ZoomSDKDemoState extends State<ZoomSDKDemo> {
  @override
  void initState() {
    super.initState();
    ZoomSDK.init(ZoomConfig.apiKey, ZoomConfig.apiSecret);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Zoom SDK Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Join a meeting
            ZoomSDK.joinMeeting('MEETING_ID', 'MEETING_PASSWORD');
          },
          child: Text('Join Meeting'),
        ),
      ),
    );
  }
}
```
Replace `MEETING_ID` and `MEETING_PASSWORD` with the actual meeting ID and password.

### Platform-Specific Details

For Android, add the following code to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.RECORD_AUDIO" />
<uses-permission android:name="android.permission.CAMERA" />
```
For iOS, add the following code to your `Info.plist` file:
```xml
<key>NSCameraUsageDescription</key>
<string>Can I use the camera please?</string>
<key>NSMicrophoneUsageDescription</key>
<string>Can I use the microphone please?</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_zoom_sdk/flutter_zoom_sdk.dart';
import 'zoom_config.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Zoom SDK Demo',
      home: ZoomSDKDemo(),
    );
  }
}

class ZoomSDKDemo extends StatefulWidget {
  @override
  _ZoomSDKDemoState createState() => _ZoomSDKDemoState();
}

class _ZoomSDKDemoState extends State<ZoomSDKDemo> {
  @override
  void initState() {
    super.initState();
    // Initialize the Zoom SDK
    ZoomSDK.init(ZoomConfig.apiKey, ZoomConfig.apiSecret);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Zoom SDK Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {
                // Join a meeting
                ZoomSDK.joinMeeting('MEETING_ID', 'MEETING_PASSWORD');
              },
              child: Text('Join Meeting'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Start a meeting
                ZoomSDK.startMeeting('MEETING_ID', 'MEETING_PASSWORD');
              },
              child: Text('Start Meeting'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Share screen
                ZoomSDK.shareScreen();
              },
              child: Text('Share Screen'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. Initialize the Zoom SDK with API key and secret.
// 2. Join a meeting by calling `ZoomSDK.joinMeeting()` with meeting ID and password.
// 3. Start a meeting by calling `ZoomSDK.startMeeting()` with meeting ID and password.
// 4. Share screen by calling `ZoomSDK.shareScreen()`.
// Note: Meeting ID and password should be replaced with actual values.
```

// Final summary:
// The code initializes the Zoom SDK with API key and secret, then provides buttons to join a meeting, start a meeting, and share screen.
// Each button press calls the corresponding Zoom SDK method with meeting ID and password.
// Meeting ID and password should be replaced with actual values.
// The application flow is straightforward, with each button press triggering a specific Zoom SDK action.