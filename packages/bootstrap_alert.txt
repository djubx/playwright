<-- START_DESCRIPTION -->

# Bootstrap Alert Flutter Package
=====================================

The `bootstrap_alert` Flutter package is a simple and easy-to-use library that allows you to display alerts in your Flutter application. It is inspired by the popular Bootstrap framework and provides a similar look and feel.

## When to Use
--------------

You can use this package when you need to display alerts in your Flutter application, such as:

* Error messages
* Success messages
* Warning messages
* Info messages

## Features
------------

* Customizable alert styles
* Support for different alert types (error, success, warning, info)
* Easy-to-use API

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Setup
--------

To use the `bootstrap_alert` package, you need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  bootstrap_alert: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Usage
-----

To display an alert, you can use the `BootstrapAlert` widget:

```dart
import 'package:bootstrap_alert/bootstrap_alert.dart';

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Bootstrap Alert Example'),
      ),
      body: Center(
        child: BootstrapAlert(
          type: BootstrapAlertType.error,
          message: 'This is an error message',
        ),
      ),
    );
  }
}
```

You can customize the alert style by using the `BootstrapAlertStyle` class:

```dart
BootstrapAlert(
  type: BootstrapAlertType.error,
  message: 'This is an error message',
  style: BootstrapAlertStyle(
    backgroundColor: Colors.red,
    textColor: Colors.white,
  ),
)
```

## Platform-Specific Details
---------------------------

The `bootstrap_alert` package works on both Android and iOS platforms. However, you may need to adjust the alert style to match the platform's design guidelines.

On Android, you can use the `Material Design` style:

```dart
BootstrapAlert(
  type: BootstrapAlertType.error,
  message: 'This is an error message',
  style: BootstrapAlertStyle(
    backgroundColor: Colors.red,
    textColor: Colors.white,
  ),
)
```

On iOS, you can use the `Cupertino` style:

```dart
BootstrapAlert(
  type: BootstrapAlertType.error,
  message: 'This is an error message',
  style: BootstrapAlertStyle(
    backgroundColor: Colors.red,
    textColor: Colors.white,
    borderRadius: BorderRadius.circular(10),
  ),
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:bootstrap_alert/bootstrap_alert.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Bootstrap Alert Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a Scaffold with an AppBar and a Centered BootstrapAlert
    return Scaffold(
      appBar: AppBar(
        title: Text('Bootstrap Alert Example'),
      ),
      body: Center(
        // Use the BootstrapAlert widget to display an error message
        child: BootstrapAlert(
          type: BootstrapAlertType.error,
          message: 'This is an error message',
          // Customize the alert style
          style: BootstrapAlertStyle(
            backgroundColor: Colors.red,
            textColor: Colors.white,
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a Scaffold containing an AppBar and a Centered BootstrapAlert.
// 2. The BootstrapAlert widget displays an error message with a customized style.
// 3. The user can interact with the alert by tapping on it, but in this example, there is no action associated with the alert.
// 4. The app continues to run until the user closes it.

// Summary: This code creates a simple Flutter app that displays a customized BootstrapAlert with an error message.
```

<-- END_MAIN -->