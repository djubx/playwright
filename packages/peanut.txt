<-- START_DESCRIPTION -->

# Introduction to the Peanut Flutter Package
The Peanut Flutter package is a lightweight and versatile library that simplifies the process of displaying and managing in-app notifications, toasts, and alerts. With its intuitive API and customizable features, Peanut is an excellent choice for developers looking to enhance the user experience of their Flutter applications.

## Key Features

*   **Toast notifications**: Display customizable toast notifications with support for various positions, durations, and styles.
*   **Alerts**: Show alerts with customizable titles, messages, and actions.
*   **In-app notifications**: Display in-app notifications with support for various positions, styles, and interactions.

## When to Use Peanut

*   **User feedback**: Use Peanut to display toast notifications or alerts to provide feedback to users after they perform an action, such as saving data or completing a task.
*   **Error handling**: Utilize Peanut to display error messages or alerts when something goes wrong, such as network errors or invalid user input.
*   **In-app messaging**: Leverage Peanut to display in-app notifications or alerts to communicate with users, such as promoting new features or offering special offers.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the Peanut Flutter Package

## Step 1: Add the Peanut Package to Your Project

To use the Peanut package, add it to your project by including the following dependency in your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  peanut: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the Peanut Package

Import the Peanut package in your Dart file:

```dart
import 'package:peanut/peanut.dart';
```

## Step 3: Display a Toast Notification

To display a toast notification, use the `Peanut.show` method:

```dart
Peanut.show(
  context,
  'Hello, World!',
  duration: Duration(seconds: 2),
  position: PeanutPosition.bottom,
);
```

## Step 4: Display an Alert

To display an alert, use the `Peanut.alert` method:

```dart
Peanut.alert(
  context,
  'Alert Title',
  'Alert message',
  actions: [
    PeanutAction(
      'OK',
      () {
        // Handle OK action
      },
    ),
  ],
);
```

## Step 5: Display an In-App Notification

To display an in-app notification, use the `Peanut.notify` method:

```dart
Peanut.notify(
  context,
  'Notification Title',
  'Notification message',
  position: PeanutPosition.top,
  style: PeanutStyle.card,
);
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:peanut/peanut.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Peanut Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Peanut Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {
                // Display a toast notification
                Peanut.show(
                  context,
                  'Hello, World!',
                  duration: Duration(seconds: 2),
                  position: PeanutPosition.bottom,
                );
              },
              child: Text('Show Toast'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Display an alert
                Peanut.alert(
                  context,
                  'Alert Title',
                  'Alert message',
                  actions: [
                    PeanutAction(
                      'OK',
                      () {
                        // Handle OK action
                      },
                    ),
                  ],
                );
              },
              child: Text('Show Alert'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Display an in-app notification
                Peanut.notify(
                  context,
                  'Notification Title',
                  'Notification message',
                  position: PeanutPosition.top,
                  style: PeanutStyle.card,
                );
              },
              child: Text('Show Notification'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks on one of the buttons to display a toast notification, alert, or in-app notification.
// 2. The corresponding Peanut method is called to display the notification.
// 3. The notification is displayed to the user.
// 4. The user can interact with the notification, such as clicking on an action in an alert.
// 5. The notification is dismissed after a certain duration or when the user interacts with it.

// In summary, the Peanut package provides a simple and intuitive way to display various types of notifications in a Flutter application.
```

<-- END_MAIN -->