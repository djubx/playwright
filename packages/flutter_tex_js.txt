<-- START_DESCRIPTION -->

# Flutter Tex JS Package Overview
=====================================

The `flutter_tex_js` package is a powerful tool for rendering TeX equations in Flutter applications. It uses JavaScript to render the equations, providing a high degree of customization and flexibility.

### When to Use This Package

This package is ideal for applications that require complex mathematical equations to be rendered, such as educational apps, scientific calculators, or technical documentation.

### Features

*   Renders TeX equations using JavaScript
*   Supports a wide range of mathematical symbols and operators
*   Customizable font sizes, colors, and styles
*   Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Flutter Tex JS Package
==========================================

To use the `flutter_tex_js` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_tex_js: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:flutter_tex_js/flutter_tex_js.dart';
```

### Step 3: Use the Package

Use the `TeXView` widget to render a TeX equation:

```dart
TeXView(
  child: TeXText(
    r'\frac{x^2 + y^2}{x + y} = \frac{(x + y)^2 - 2xy}{x + y} = x + y - \frac{2xy}{x + y}',
  ),
)
```

### Platform-Specific Details

*   **Android:** No additional configuration is required.
*   **iOS:** Add the following line to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

This allows the package to load JavaScript files from the internet.

### Optimizations

*   Use the `TeXView` widget with a `Container` widget to specify the width and height of the rendered equation.
*   Use the `TeXText` widget with a `TextStyle` widget to customize the font size, color, and style of the rendered equation.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_tex_js/flutter_tex_js.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a Material app with a single page
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter TeX JS Example'),
        ),
        body: Center(
          // Use the TeXView widget to render a TeX equation
          child: TeXView(
            // Use the TeXText widget to specify the TeX equation
            child: TeXText(
              // The TeX equation to render
              r'\frac{x^2 + y^2}{x + y} = \frac{(x + y)^2 - 2xy}{x + y} = x + y - \frac{2xy}{x + y}',
              // Customize the font size and color
              style: TextStyle(fontSize: 24, color: Colors.blue),
            ),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The RealFlutter widget is created and returned by the main function.
// 2. The RealFlutter widget builds a Material app with a single page.
// 3. The page contains a TeXView widget, which is used to render a TeX equation.
// 4. The TeXView widget contains a TeXText widget, which specifies the TeX equation to render.
// 5. The TeXText widget customizes the font size and color of the rendered equation.
// 6. The TeX equation is rendered and displayed on the page.

// Final summary: This code creates a simple Flutter app that renders a TeX equation using the flutter_tex_js package. The equation is customized with a specific font size and color.
```

<-- END_MAIN -->