<-- START_DESCRIPTION -->
# Flutter UAE Pass Package
================================

The `flutter_uae_pass` package is a Flutter plugin that allows developers to integrate the UAE Pass authentication system into their Flutter applications. UAE Pass is a digital identity and signature solution provided by the UAE government, allowing users to securely authenticate and sign documents electronically.

## Features

*   Authenticate users with UAE Pass
*   Sign documents electronically using UAE Pass
*   Supports both Android and iOS platforms

## When to Use

This package is ideal for Flutter applications that require secure authentication and electronic signature capabilities, particularly for applications targeting users in the UAE.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Tutorial
================

## Step 1: Add the Package to Your Flutter Project

Add the `flutter_uae_pass` package to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_uae_pass: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the `flutter_uae_pass` package in your Dart file:

```dart
import 'package:flutter_uae_pass/flutter_uae_pass.dart';
```

## Step 3: Initialize the UAE Pass SDK

Initialize the UAE Pass SDK by calling the `init` method:

```dart
await FlutterUaePass.init(
  clientId: 'YOUR_CLIENT_ID',
  clientSecret: 'YOUR_CLIENT_SECRET',
  redirectUri: 'YOUR_REDIRECT_URI',
);
```

Replace `YOUR_CLIENT_ID`, `YOUR_CLIENT_SECRET`, and `YOUR_REDIRECT_URI` with your actual UAE Pass credentials.

## Step 4: Authenticate the User

To authenticate the user, call the `authenticate` method:

```dart
final authenticationResult = await FlutterUaePass.authenticate();
```

This will launch the UAE Pass authentication flow. If the user is successfully authenticated, the `authenticationResult` variable will contain the user's authentication details.

## Step 5: Sign a Document

To sign a document electronically, call the `signDocument` method:

```dart
final signatureResult = await FlutterUaePass.signDocument(
  documentBytes: documentBytes,
  documentMimeType: 'application/pdf',
);
```

Replace `documentBytes` with the bytes of the document you want to sign.

<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:flutter_uae_pass/flutter_uae_pass.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'UAE Pass Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('UAE Pass Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _authenticateUser,
              child: Text('Authenticate User'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _signDocument,
              child: Text('Sign Document'),
            ),
          ],
        ),
      ),
    );
  }

  Future<void> _authenticateUser() async {
    // Initialize the UAE Pass SDK
    await FlutterUaePass.init(
      clientId: 'YOUR_CLIENT_ID',
      clientSecret: 'YOUR_CLIENT_SECRET',
      redirectUri: 'YOUR_REDIRECT_URI',
    );

    // Authenticate the user
    final authenticationResult = await FlutterUaePass.authenticate();

    // Display the authentication result
    if (authenticationResult != null) {
      print('User authenticated successfully');
    } else {
      print('User authentication failed');
    }
  }

  Future<void> _signDocument() async {
    // Initialize the UAE Pass SDK
    await FlutterUaePass.init(
      clientId: 'YOUR_CLIENT_ID',
      clientSecret: 'YOUR_CLIENT_SECRET',
      redirectUri: 'YOUR_REDIRECT_URI',
    );

    // Sign a document electronically
    final signatureResult = await FlutterUaePass.signDocument(
      documentBytes: Uint8List.fromList([1, 2, 3]), // Replace with your document bytes
      documentMimeType: 'application/pdf',
    );

    // Display the signature result
    if (signatureResult != null) {
      print('Document signed successfully');
    } else {
      print('Document signing failed');
    }
  }
}
```
// The application flow is as follows:
// 1. The user clicks the "Authenticate User" button, which calls the `_authenticateUser` function.
// 2. The `_authenticateUser` function initializes the UAE Pass SDK using the `init` method.
// 3. The `init` method sets up the UAE Pass SDK with the provided client ID, client secret, and redirect URI.
// 4. The `_authenticateUser` function then calls the `authenticate` method to authenticate the user.
// 5. The `authenticate` method launches the UAE Pass authentication flow, which prompts the user to enter their credentials.
// 6. If the user is successfully authenticated, the `authenticate` method returns an authentication result, which is displayed to the user.
// 7. The user can then click the "Sign Document" button, which calls the `_signDocument` function.
// 8. The `_signDocument` function initializes the UAE Pass SDK using the `init` method.
// 9. The `_signDocument` function then calls the `signDocument` method to sign a document electronically.
// 10. The `signDocument` method takes the document bytes and document MIME type as input and returns a signature result.
// 11. The signature result is displayed to the user, indicating whether the document was signed successfully or not.

<-- END_MAIN -->