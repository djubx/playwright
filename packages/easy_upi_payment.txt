<-- START_DESCRIPTION -->

# Easy UPI Payment Flutter Package
=====================================

The `easy_upi_payment` Flutter package provides a simple and convenient way to integrate UPI (Unified Payments Interface) payments into your Flutter application. This package allows users to make payments using their UPI-enabled bank accounts, providing a seamless and secure payment experience.

### When to Use This Package

This package is ideal for e-commerce applications, bill payment services, or any other scenario where you need to accept payments from users. With the increasing popularity of UPI payments in India, integrating this package into your application can help you reach a wider audience and provide a more convenient payment option for your users.

### Features

*   Supports all major UPI payment apps, including Google Pay, PhonePe, and Paytm
*   Allows users to make payments using their UPI-enabled bank accounts
*   Provides a seamless and secure payment experience
*   Easy to integrate and use

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the easy_upi_payment Package
===========================================================

### Step 1: Add the Package to Your pubspec.yaml File

To use the `easy_upi_payment` package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` file and add the following line under the `dependencies` section:

```yml
dependencies:
  easy_upi_payment: ^0.0.1
```

Then, run `flutter pub get` in your terminal to get the package.

### Step 2: Import the Package

To use the package, you need to import it into your Dart file. Add the following line at the top of your Dart file:

```dart
import 'package:easy_upi_payment/easy_upi_payment.dart';
```

### Step 3: Set Up the Payment

To set up the payment, you need to create an instance of the `EasyUpiPayment` class and call the `initiatePayment` method. This method takes two arguments: `appId` and `amount`.

*   `appId`: Your UPI payment app ID (e.g., "com.google.android.apps.nbu.paisa.user")
*   `amount`: The amount to be paid

Here's an example:

```dart
void _makePayment() async {
  EasyUpiPayment easyUpiPayment = EasyUpiPayment();
  String appId = "com.google.android.apps.nbu.paisa.user";
  double amount = 100.0;
  await easyUpiPayment.initiatePayment(appId, amount);
}
```

### Platform-Specific Details

#### Android

To use the `easy_upi_payment` package on Android, you need to add the following lines to your `AndroidManifest.xml` file:

```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```

You also need to add the following lines to your `build.gradle` file:

```groovy
android {
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
    }
}
```

#### iOS

To use the `easy_upi_payment` package on iOS, you need to add the following lines to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```

You also need to add the following lines to your `Podfile`:

```ruby
platform :ios, '11.0'
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:easy_upi_payment/easy_upi_payment.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Easy UPI Payment Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _amountController = TextEditingController();

  void _makePayment() async {
    // Create an instance of the EasyUpiPayment class
    EasyUpiPayment easyUpiPayment = EasyUpiPayment();

    // Set the appId and amount
    String appId = "com.google.android.apps.nbu.paisa.user";
    double amount = double.parse(_amountController.text);

    // Initiate the payment
    await easyUpiPayment.initiatePayment(appId, amount);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Easy UPI Payment Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Enter the amount to pay:',
            ),
            TextField(
              controller: _amountController,
              keyboardType: TextInputType.number,
            ),
            SizedBox(
              height: 20,
            ),
            ElevatedButton(
              onPressed: _makePayment,
              child: Text('Make Payment'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters the amount to pay in the text field.
// 2. The user clicks the "Make Payment" button.
// 3. The _makePayment function is called, which creates an instance of the EasyUpiPayment class.
// 4. The appId and amount are set.
// 5. The initiatePayment method is called, which initiates the UPI payment.
// 6. The user is redirected to the UPI payment app to complete the payment.
// 7. After the payment is complete, the user is redirected back to the app.

// Note: This is a basic example and you should handle errors and exceptions properly in a real-world application.
```

<-- END_MAIN -->