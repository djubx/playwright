<-- START_DESCRIPTION -->

# Flutter Full PDF Viewer Null Safe Package
=============================================

The `flutter_full_pdf_viewer_null_safe` package is a powerful tool for displaying PDF files in Flutter applications. It provides a null-safe and efficient way to view PDFs on both Android and iOS platforms.

### When to Use This Package

This package is ideal for applications that require PDF viewing capabilities, such as:

* Document viewers
* E-book readers
* Report generators
* Educational apps

### Features

* Null-safe architecture
* Support for both Android and iOS platforms
* Efficient PDF rendering
* Zooming and panning capabilities
* Customizable UI

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_full_pdf_viewer_null_safe` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_full_pdf_viewer_null_safe: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_full_pdf_viewer_null_safe/flutter_full_pdf_viewer_null_safe.dart';
```
### Step 3: Create a PDF Viewer

Create a PDF viewer using the `PDFViewer` widget:
```dart
PDFViewer(
  filePath: 'path/to/your/pdf/file.pdf',
)
```
### Platform-Specific Details

* Android: Make sure to add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
```
* iOS: No additional setup is required.

### Optimizations

* To improve performance, you can use the `PDFViewerController` to preload the PDF file.
* To customize the UI, you can use the `PDFViewerTheme` class.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_full_pdf_viewer_null_safe/flutter_full_pdf_viewer_null_safe.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'PDF Viewer Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _filePath = 'path/to/your/pdf/file.pdf';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('PDF Viewer Demo'),
      ),
      body: Center(
        child: PDFViewer(
          filePath: _filePath,
          // Use the PDFViewerController to preload the PDF file
          controller: PDFViewerController(
            filePath: _filePath,
          ),
          // Customize the UI using the PDFViewerTheme class
          theme: PDFViewerTheme(
            backgroundColor: Colors.grey,
            // Customize the UI for the PDF viewer
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a screen containing a PDF viewer.
// 2. The PDF viewer displays the PDF file specified by the _filePath variable.
// 3. The user can zoom and pan the PDF file using the built-in gestures.
// 4. The PDF viewer uses the PDFViewerController to preload the PDF file, improving performance.
// 5. The UI is customized using the PDFViewerTheme class, changing the background color to grey.
```

// In summary, this code creates a simple PDF viewer app that displays a PDF file and allows the user to zoom and pan. The app uses the `flutter_full_pdf_viewer_null_safe` package to display the PDF file and customizes the UI using the `PDFViewerTheme` class. The app also uses the `PDFViewerController` to preload the PDF file, improving performance.

<-- END_MAIN -->