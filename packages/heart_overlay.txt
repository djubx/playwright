<-- START_DESCRIPTION -->

# Heart Overlay Flutter Package
================================

The Heart Overlay Flutter package is a powerful tool for creating visually appealing and interactive heart rate monitoring interfaces. It provides a simple and efficient way to display heart rate data in real-time, making it an ideal solution for health and fitness applications.

## Features

*   Real-time heart rate monitoring
*   Customizable heart rate display
*   Support for various heart rate measurement units
*   Platform-specific optimizations for Android and iOS

## When to Use

The Heart Overlay Flutter package is perfect for applications that require real-time heart rate monitoring, such as:

*   Fitness tracking apps
*   Health monitoring apps
*   Wearable device companion apps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Heart Overlay Flutter Package
---------------------------------------------

To use the Heart Overlay Flutter package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  heart_overlay: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:heart_overlay/heart_overlay.dart';
```

### Step 3: Create a Heart Overlay Widget

Create a `HeartOverlay` widget and pass the required parameters:

```dart
HeartOverlay(
  heartRate: 60,
  measurementUnit: MeasurementUnit.bpm,
)
```

### Platform-Specific Configurations

For Android, add the following configuration to your `AndroidManifest.xml` file:

```xml
<uses-permission android:name="android.permission.BODY_SENSORS" />
```

For iOS, add the following configuration to your `Info.plist` file:

```xml
<key>NSHealthShareUsageDescription</key>
<string>This app needs access to your health data to display your heart rate.</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:heart_overlay/heart_overlay.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  int _heartRate = 60;

  // Create a HeartOverlay widget with the initial heart rate
  HeartOverlay _heartOverlay = HeartOverlay(
    heartRate: _heartRate,
    measurementUnit: MeasurementUnit.bpm,
  );

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Heart Overlay Example'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Display the HeartOverlay widget
              _heartOverlay,

              // Create a button to update the heart rate
              ElevatedButton(
                onPressed: () {
                  setState(() {
                    _heartRate += 10;
                    _heartOverlay = HeartOverlay(
                      heartRate: _heartRate,
                      measurementUnit: MeasurementUnit.bpm,
                    );
                  });
                },
                child: Text('Update Heart Rate'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow:
// 1. The user runs the app and sees the initial heart rate displayed.
// 2. The user presses the "Update Heart Rate" button to increase the heart rate by 10.
// 3. The HeartOverlay widget is updated with the new heart rate.
// 4. The user sees the updated heart rate displayed in real-time.

// Final summary:
// The Heart Overlay Flutter package provides a simple and efficient way to display heart rate data in real-time.
// This example demonstrates how to use the package to create a basic heart rate monitoring interface.
// The application flow shows how the user can update the heart rate and see the changes in real-time.
```

<-- END_MAIN -->