Here's a detailed technical blog on the "common_utils" Flutter package, structured as requested.

<!-- START_DESCRIPTION -->
# Common Utils Flutter Package

The `common_utils` package is a versatile utility library for Flutter that provides a collection of commonly used functions and classes to simplify development. It is particularly useful for developers looking to streamline their code and avoid reinventing the wheel for common tasks.

## When to Use This Package

You might consider using the `common_utils` package in scenarios such as:
- **Date and Time Manipulation**: When you need to format dates, calculate differences, or manipulate time zones.
- **String Operations**: For tasks like string validation, formatting, or manipulation.
- **Number Formatting**: When you need to format numbers for display, including currency and percentage formats.
- **List and Map Utilities**: To perform common operations on collections, such as filtering or transforming data.

## Key Features

- **Date and Time Utilities**: Functions for parsing, formatting, and manipulating dates and times.
- **String Utilities**: Methods for string validation, formatting, and manipulation.
- **Number Formatting**: Tools for formatting numbers, including currency and percentage.
- **Collection Utilities**: Functions for working with lists and maps, such as filtering and transforming data.

Overall, the `common_utils` package can significantly reduce boilerplate code and enhance productivity in Flutter applications.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using Common Utils

## Step 1: Adding the Dependency

To use the `common_utils` package in your Flutter project, you need to add it to your `pubspec.yaml` file. Open the file and add the following line under dependencies:

```yaml
dependencies:
  flutter:
    sdk: flutter
  common_utils: ^2.0.0  # Check for the latest version on pub.dev
```

After adding the dependency, run the following command in your terminal to install it:

```bash
flutter pub get
```

## Step 2: Platform-Specific Configuration

### Android Configuration

For Android, ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
        ...
    }
}
```

### iOS Configuration

For iOS, you may need to update your `ios/Podfile` to ensure compatibility with the latest Flutter versions. Make sure to set the platform version:

```ruby
platform :ios, '10.0'
```

## Step 3: Importing the Package

In your Dart files, import the package as follows:

```dart
import 'package:common_utils/common_utils.dart';
```

## Step 4: Using Common Utils

You can now use the various utilities provided by the package. Hereâ€™s a simple example of how to format a date and validate a string:

```dart
void main() {
  // Example of using DateUtil to format a date
  DateTime now = DateTime.now();
  String formattedDate = DateUtil.formatDate(now, format: 'yyyy-MM-dd');
  print('Formatted Date: $formattedDate');

  // Example of using StringUtil to validate an email
  String email = 'example@example.com';
  bool isValidEmail = StringUtil.isEmail(email);
  print('Is valid email: $isValidEmail');
}
```

This example demonstrates how to format the current date and validate an email address using the `common_utils` package.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example: Using Common Utils in a Flutter App

```dart
import 'package:flutter/material.dart';
import 'package:common_utils/common_utils.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Common Utils Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Common Utils Example'),
        ),
        body: Center(
          child: CommonUtilsDemo(),
        ),
      ),
    );
  }
}

class CommonUtilsDemo extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Get the current date and format it
    DateTime now = DateTime.now();
    String formattedDate = DateUtil.formatDate(now, format: 'yyyy-MM-dd');

    // Validate a sample email
    String email = 'example@example.com';
    bool isValidEmail = StringUtil.isEmail(email);

    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        Text('Formatted Date: $formattedDate'), // Display formatted date
        SizedBox(height: 20),
        Text('Is valid email: $isValidEmail'), // Display email validation result
      ],
    );
  }
}

// Application Flow Explanation:
// 1. The main function starts the app by calling runApp with the RealFlutter widget.
// 2. RealFlutter builds a MaterialApp with a title and a Scaffold.
// 3. The Scaffold contains an AppBar and a Center widget that holds the CommonUtilsDemo widget.
// 4. CommonUtilsDemo retrieves the current date and formats it using DateUtil.
// 5. It also validates a sample email using StringUtil.
// 6. The formatted date and email validation result are displayed in a Column widget.
```

<!-- END_MAIN -->

In this blog, we explored the `common_utils` Flutter package, detailing its features, setup process, and providing a complete example. The application demonstrates how to format dates and validate strings, showcasing the utility of the package in real-world scenarios. By leveraging `common_utils`, developers can enhance their productivity and maintain cleaner code in their Flutter applications.