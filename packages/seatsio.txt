<-- START_DESCRIPTION -->

# Seatsio Flutter Package
The Seatsio Flutter package is a powerful library for creating seat maps and handling seat selection in Flutter applications. It provides a simple and intuitive API for creating and customizing seat maps, making it easy to integrate into any Flutter project.

## When to Use
The Seatsio Flutter package is ideal for applications that require seat selection, such as:

* Event ticketing apps
* Cinema and theater apps
* Travel and transportation apps
* Restaurant and table reservation apps

## Features
The Seatsio Flutter package offers a range of features, including:

* Customizable seat maps
* Seat selection and deselection
* Support for multiple seat types (e.g. adult, child, wheelchair)
* Support for multiple pricing tiers
* Integration with payment gateways

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Seatsio Flutter Package
To use the Seatsio Flutter package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  seatsio: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:seatsio/seatsio.dart';
```
4. Create a new instance of the `Seatsio` class:
```dart
Seatsio seatsio = Seatsio(
  // Your Seatsio API key
  apiKey: 'YOUR_API_KEY',
  // Your Seatsio event ID
  eventId: 'YOUR_EVENT_ID',
);
```
5. Use the `seatsio` instance to create a seat map:
```dart
seatsio.createSeatMap(
  // The container to render the seat map in
  container: Container(
    width: 300,
    height: 300,
  ),
  // The seat map configuration
  config: SeatMapConfig(
    rows: 10,
    columns: 10,
    seatWidth: 30,
    seatHeight: 30,
  ),
);
```
6. Use the `seatsio` instance to handle seat selection:
```dart
seatsio.onSeatSelected((seat) {
  // Handle seat selection
});
```
7. Use the `seatsio` instance to handle payment:
```dart
seatsio.onPaymentSuccess((payment) {
  // Handle payment success
});
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:seatsio/seatsio.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Seatsio Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Seatsio _seatsio;

  @override
  void initState() {
    super.initState();
    _seatsio = Seatsio(
      apiKey: 'YOUR_API_KEY',
      eventId: 'YOUR_EVENT_ID',
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Seatsio Demo'),
      ),
      body: Center(
        child: Container(
          width: 300,
          height: 300,
          child: _seatsio.createSeatMap(
            container: Container(
              width: 300,
              height: 300,
            ),
            config: SeatMapConfig(
              rows: 10,
              columns: 10,
              seatWidth: 30,
              seatHeight: 30,
            ),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a seat map.
// 2. The user selects a seat by tapping on it.
// 3. The app handles the seat selection and updates the UI accordingly.
// 4. The user proceeds to payment by tapping the "Pay" button.
// 5. The app handles the payment and updates the UI accordingly.
// 6. The user is presented with a confirmation screen.
```

// The code above creates a basic seat map with 10 rows and 10 columns.
// The seat map is rendered in a container with a width and height of 300 pixels.
// The app handles seat selection and payment using the `Seatsio` instance.
// The app updates the UI accordingly based on the user's actions.

<-- END_MAIN -->