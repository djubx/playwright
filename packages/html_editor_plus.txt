<-- START_DESCRIPTION -->

# html_editor_plus Flutter Package
=====================================

The `html_editor_plus` Flutter package is a powerful tool for creating and editing HTML content within a Flutter application. It provides a range of features, including text formatting, image insertion, and HTML code editing.

### When to Use This Package

This package is ideal for applications that require users to create or edit HTML content, such as:

* Blogging apps
* Content management systems
* Email clients
* Text editors

### Features

* Text formatting (bold, italic, underline, etc.)
* Image insertion
* HTML code editing
* Undo and redo functionality
* Customizable toolbar

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using html_editor_plus
=============================================

### Step 1: Add the Package to Your Pubspec.yaml File

```yml
dependencies:
  flutter:
    sdk: flutter
  html_editor_plus: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:html_editor_plus/html_editor_plus.dart';
```

### Step 3: Create an Instance of the HtmlEditorPlus Widget

```dart
HtmlEditorPlus(
  // Required parameters
  value: '', // Initial HTML content
  onChanged: (String newValue) {
    // Handle changes to the HTML content
  },
  // Optional parameters
  height: 200, // Height of the editor
  width: 300, // Width of the editor
  toolbar: [
    // Customize the toolbar buttons
    'bold',
    'italic',
    'underline',
  ],
)
```

### Platform-Specific Details

* Android: No additional configuration required.
* iOS: Add the following line to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:html_editor_plus/html_editor_plus.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Html Editor Plus Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _htmlContent = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Html Editor Plus Demo'),
      ),
      body: Center(
        child: HtmlEditorPlus(
          value: _htmlContent,
          onChanged: (String newValue) {
            setState(() {
              _htmlContent = newValue;
            });
          },
          height: 200,
          width: 300,
          toolbar: [
            'bold',
            'italic',
            'underline',
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          print(_htmlContent);
        },
        tooltip: 'Print HTML Content',
        child: Icon(Icons.print),
      ),
    );
  }
}

// Application flow:
// 1. The user interacts with the HtmlEditorPlus widget, making changes to the HTML content.
// 2. The onChanged callback is triggered, updating the _htmlContent variable with the new HTML content.
// 3. The user presses the floating action button to print the current HTML content.
// 4. The _htmlContent variable is printed to the console.

// Final summary:
// This code demonstrates the use of the HtmlEditorPlus widget to create and edit HTML content within a Flutter application.
// The widget is customized with a toolbar and an onChanged callback to handle changes to the HTML content.
// The application flow involves the user interacting with the widget, making changes to the HTML content, and printing the current content using a floating action button.
```

<-- END_MAIN -->