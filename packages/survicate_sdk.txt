<-- START_DESCRIPTION -->

# Survicate SDK Flutter Package
================================

The Survicate SDK Flutter package is a powerful tool for integrating surveys and feedback mechanisms into your Flutter applications. It allows you to collect user feedback, conduct surveys, and analyze user behavior to improve your app's overall user experience.

## When to Use This Package
---------------------------

You should use this package when you want to:

* Collect user feedback and opinions about your app
* Conduct surveys to understand user behavior and preferences
* Analyze user behavior to identify areas for improvement
* Improve your app's overall user experience

## Features
------------

The Survicate SDK Flutter package offers the following features:

* Easy integration with your Flutter app
* Customizable survey templates and questions
* Support for multiple survey types (e.g., rating, multiple-choice, open-ended)
* Real-time analytics and reporting
* Integration with popular analytics tools (e.g., Google Analytics)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Survicate SDK Flutter Package
=============================================

To set up the Survicate SDK Flutter package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  survicate_sdk: ^1.0.0
```
### Step 2: Import the Package in Your Dart File

Import the package in your Dart file:
```dart
import 'package:survicate_sdk/survicate_sdk.dart';
```
### Step 3: Initialize the Survicate SDK

Initialize the Survicate SDK in your app's `main` function:
```dart
void main() {
  SurvicateSdk.init('YOUR_API_KEY');
  runApp(MyApp());
}
```
Replace `YOUR_API_KEY` with your actual API key.

### Step 4: Configure the Survicate SDK (Optional)

You can configure the Survicate SDK to suit your needs. For example, you can set the survey template and questions:
```dart
SurvicateSdk.configure(
  surveyTemplate: 'template1',
  questions: [
    {
      'type': 'rating',
      'text': 'How do you rate our app?',
    },
    {
      'type': 'multiple-choice',
      'text': 'What do you like most about our app?',
      'options': ['Option 1', 'Option 2', 'Option 3'],
    },
  ],
);
```
### Platform-Specific Details

For Android, add the following lines to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<application
  ...
  android:usesCleartextTraffic="true"
  ...
>
```
For iOS, add the following lines to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:survicate_sdk/survicate_sdk.dart';

void main() {
  SurvicateSdk.init('YOUR_API_KEY');
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Survicate SDK Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Survicate SDK Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Show the survey
            SurvicateSdk.showSurvey();
          },
          child: Text('Show Survey'),
        ),
      ),
    );
  }
}
```

// This is the main entry point of the app.
// The Survicate SDK is initialized with the API key.
// The app uses the Material theme and has a single page with a button.
// When the button is pressed, the survey is shown using the Survicate SDK.

// The Survicate SDK is configured to use a specific survey template and questions.
// The survey template and questions are defined in the Survicate dashboard.
// The app uses the Survicate SDK to show the survey and collect user feedback.

// The app flow is as follows:
// 1. The user opens the app and sees the main page with a button.
// 2. The user presses the button to show the survey.
// 3. The Survicate SDK shows the survey with the configured template and questions.
// 4. The user answers the survey questions and submits the survey.
// 5. The Survicate SDK collects the user feedback and sends it to the Survicate dashboard.

<-- END_MAIN -->