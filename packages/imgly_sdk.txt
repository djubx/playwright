<-- START_DESCRIPTION -->

# Imgly SDK Flutter Package
================================

The Imgly SDK Flutter package is a powerful image editing tool that allows developers to integrate a comprehensive photo editor into their Flutter applications. With a wide range of features and customization options, this package is ideal for apps that require advanced image editing capabilities.

### Key Features

*   Advanced image editing tools (e.g., filters, adjustments, text, and shapes)
*   Customizable UI and layout
*   Support for both Android and iOS platforms
*   High-performance rendering and processing

### When to Use This Package

The Imgly SDK Flutter package is perfect for apps that require:

*   Advanced image editing features
*   Customizable UI and layout
*   High-performance image processing
*   Support for both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Imgly SDK Flutter Package
------------------------------------------

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  imgly_sdk: ^1.4.1
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:imgly_sdk/imgly_sdk.dart';
```

### Step 3: Initialize the Imgly SDK

Initialize the Imgly SDK before using it:

```dart
Imgly.init();
```

### Step 4: Create an Image Editor

Create an image editor instance:

```dart
final editor = ImglyEditor(
  image: 'assets/image.jpg', // Load an image from assets
);
```

### Step 5: Customize the UI (Optional)

Customize the UI and layout as needed:

```dart
editor.config = ImglyConfig(
  // Customize the UI and layout here
);
```

### Platform-Specific Details

*   **Android:** Make sure to add the following permissions to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
```
*   **iOS:** Add the following lines to your `Info.plist` file:

    ```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library.</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:imgly_sdk/imgly_sdk.dart';

void main() {
  // Initialize the Imgly SDK
  Imgly.init();

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Imgly SDK Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // Load an image from assets
  final image = 'assets/image.jpg';

  // Create an image editor instance
  final editor = ImglyEditor(
    image: 'assets/image.jpg', // Load an image from assets
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Imgly SDK Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Display the image editor
            Expanded(
              child: editor,
            ),
            // Add a button to save the edited image
            ElevatedButton(
              onPressed: () async {
                // Save the edited image
                final savedImage = await editor.saveImage();

                // Display a snackbar with the saved image path
                ScaffoldMessenger.of(context).showSnackBar(
                  SnackBar(
                    content: Text('Image saved to: $savedImage'),
                  ),
                );
              },
              child: Text('Save Image'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow:
// 1. The user opens the app and is presented with an image editor.
// 2. The user edits the image using the Imgly SDK tools.
// 3. The user clicks the "Save Image" button to save the edited image.
// 4. The app saves the edited image and displays a snackbar with the saved image path.

// Summary:
// This code demonstrates how to use the Imgly SDK Flutter package to create an image editor.
// The user can edit an image using the Imgly SDK tools and save the edited image.
// The app displays a snackbar with the saved image path after saving the image.
```

<-- END_MAIN -->