```markdown
<!-- START_DESCRIPTION -->
# Overview of the `text_highlight_rounded` Flutter Package

The `text_highlight_rounded` package is a powerful Flutter library designed to enhance text display by allowing developers to highlight specific portions of text with rounded backgrounds. This package is particularly useful in applications where text emphasis is crucial, such as educational apps, note-taking applications, or any app that requires user interaction with text.

## When to Use This Package
- **Educational Apps**: Highlighting important terms or definitions.
- **Note-Taking Applications**: Allowing users to emphasize key points in their notes.
- **Chat Applications**: Highlighting specific messages or keywords for better visibility.

## Key Features
- **Customizable Highlight Colors**: You can easily change the background color of the highlighted text.
- **Rounded Corners**: The package provides options for rounded corners, giving a modern look to highlighted text.
- **Flexible Text Styles**: Supports various text styles, allowing for a cohesive design with the rest of your application.

Overall, `text_highlight_rounded` is an excellent choice for developers looking to add a visually appealing text highlighting feature to their Flutter applications.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using `text_highlight_rounded`

## Installation
To use the `text_highlight_rounded` package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` and add the following line under dependencies:

```yaml
dependencies:
  text_highlight_rounded: ^latest_version
```

Make sure to replace `latest_version` with the most recent version available on [pub.dev](https://pub.dev/packages/text_highlight_rounded).

After adding the dependency, run the following command in your terminal to install the package:

```bash
flutter pub get
```

## Platform-Specific Details
### Android
No additional configuration is required for Android. Just ensure that your `minSdkVersion` is set to at least 21 in your `android/app/build.gradle` file.

### iOS
For iOS, ensure that your deployment target is set to at least 10.0 in your `ios/Podfile`:

```ruby
platform :ios, '10.0'
```

## Basic Usage
To use the `text_highlight_rounded` package, you can import it into your Dart file:

```dart
import 'package:text_highlight_rounded/text_highlight_rounded.dart';
```

You can then create a `TextHighlight` widget to highlight specific text. Hereâ€™s a simple example:

```dart
TextHighlight(
  text: 'This is a highlighted text.',
  highlights: [
    HighlightedText(
      text: 'highlighted',
      color: Colors.yellow,
    ),
  ],
)
```

This will highlight the word "highlighted" in yellow.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using `text_highlight_rounded`

```dart
import 'package:flutter/material.dart';
import 'package:text_highlight_rounded/text_highlight_rounded.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Text Highlight Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Text Highlight Example'),
        ),
        body: Center(
          child: Padding(
            padding: const EdgeInsets.all(16.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                // Using TextHighlight to highlight specific words
                TextHighlight(
                  text: 'Flutter is an amazing framework for building beautiful apps.',
                  highlights: [
                    HighlightedText(
                      text: 'amazing',
                      color: Colors.yellow, // Highlight color
                    ),
                    HighlightedText(
                      text: 'beautiful',
                      color: Colors.green, // Another highlight color
                    ),
                  ],
                ),
                SizedBox(height: 20), // Adding space between texts
                // Another example of highlighting
                TextHighlight(
                  text: 'This package makes text highlighting easy and customizable.',
                  highlights: [
                    HighlightedText(
                      text: 'easy',
                      color: Colors.blue,
                    ),
                    HighlightedText(
                      text: 'customizable',
                      color: Colors.orange,
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

// Explanation of the application flow:
// 1. The main function starts the app by calling runApp() with the RealFlutter widget.
// 2. The RealFlutter widget builds a MaterialApp with a title and a Scaffold.
// 3. The Scaffold contains an AppBar with the title 'Text Highlight Example'.
// 4. The body of the Scaffold is centered and contains a Column widget.
// 5. Inside the Column, we use the TextHighlight widget to display text with highlighted words.
// 6. Each TextHighlight widget takes a string of text and a list of HighlightedText objects.
// 7. Each HighlightedText specifies the text to highlight and the color for the highlight.
// 8. The SizedBox widget adds space between the two highlighted text examples for better readability.
```
<!-- END_MAIN -->
```

This structured blog post provides a comprehensive overview of the `text_highlight_rounded` package, including its features, installation instructions, usage examples, and a complete functional example with detailed comments explaining the application flow.