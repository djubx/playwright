<-- START_DESCRIPTION -->

Location Distance Calculator Flutter Package
=============================================

The `location_distance_calculator` Flutter package is a utility library that provides an easy-to-use API for calculating distances between two geographic locations. It is a useful tool for developers who want to build location-based applications, such as ride-hailing services, delivery apps, or social media platforms that require location-based features.

Key Features
------------

*   Calculate distances between two points on the surface of the Earth using the Haversine formula
*   Support for both kilometers and miles units
*   Simple and easy-to-use API

When to Use
------------

You can use this package in any Flutter application that requires location-based calculations, such as:

*   Ride-hailing services: to calculate the distance between the driver's location and the passenger's pickup point
*   Delivery apps: to calculate the distance between the delivery person's location and the customer's address
*   Social media platforms: to calculate the distance between two users' locations

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
----------------

To use the `location_distance_calculator` package in your Flutter application, follow these steps:

### Step 1: Add the Package to Your Project

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  location_distance_calculator: ^1.0.0
```

Then, run `flutter pub get` in your terminal to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:location_distance_calculator/location_distance_calculator.dart';
```

### Step 3: Calculate the Distance

Use the `calculateDistance` function to calculate the distance between two points:

```dart
double distance = calculateDistance(
  lat1: 37.7749, // latitude of the first point
  lon1: -122.4194, // longitude of the first point
  lat2: 34.0522, // latitude of the second point
  lon2: -118.2437, // longitude of the second point
  unit: Unit.kilometers, // unit of measurement (kilometers or miles)
);
```

Platform-Specific Details
-------------------------

This package does not require any platform-specific configurations or optimizations.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:location_distance_calculator/location_distance_calculator.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Location Distance Calculator Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  double _distance = 0;
  final _lat1Controller = TextEditingController();
  final _lon1Controller = TextEditingController();
  final _lat2Controller = TextEditingController();
  final _lon2Controller = TextEditingController();

  void _calculateDistance() {
    // Get the values from the text fields
    double lat1 = double.parse(_lat1Controller.text);
    double lon1 = double.parse(_lon1Controller.text);
    double lat2 = double.parse(_lat2Controller.text);
    double lon2 = double.parse(_lon2Controller.text);

    // Calculate the distance using the package
    double distance = calculateDistance(
      lat1: lat1,
      lon1: lon1,
      lat2: lat2,
      lon2: lon2,
      unit: Unit.kilometers,
    );

    // Update the UI with the result
    setState(() {
      _distance = distance;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Location Distance Calculator Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _lat1Controller,
              decoration: InputDecoration(
                labelText: 'Latitude 1',
              ),
            ),
            TextField(
              controller: _lon1Controller,
              decoration: InputDecoration(
                labelText: 'Longitude 1',
              ),
            ),
            TextField(
              controller: _lat2Controller,
              decoration: InputDecoration(
                labelText: 'Latitude 2',
              ),
            ),
            TextField(
              controller: _lon2Controller,
              decoration: InputDecoration(
                labelText: 'Longitude 2',
              ),
            ),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: _calculateDistance,
              child: Text('Calculate Distance'),
            ),
            SizedBox(height: 16),
            Text(
              'Distance: $_distance km',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters the latitude and longitude values for two points in the text fields.
// 2. When the user clicks the "Calculate Distance" button, the _calculateDistance function is called.
// 3. This function gets the values from the text fields and uses the calculateDistance function from the package to calculate the distance between the two points.
// 4. The result is then updated in the UI using the setState function.
// 5. The distance is displayed to the user in kilometers.
```

<-- END_MAIN -->