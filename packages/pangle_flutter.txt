<-- START_DESCRIPTION -->

# Pangle Flutter Package Overview
=====================================

The `pangle_flutter` package is a Flutter wrapper for the Pangle SDK, which is a popular Chinese ad network. This package allows developers to easily integrate Pangle ads into their Flutter applications.

## When to Use This Package
---------------------------

You should use this package if you want to display ads from the Pangle network in your Flutter app. This package is particularly useful for developers who want to target the Chinese market, as Pangle is one of the largest ad networks in China.

## Features
------------

The `pangle_flutter` package supports the following features:

*   Banner ads
*   Interstitial ads
*   Rewarded video ads
*   Native ads

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Pangle Flutter Package Tutorial
=====================================

## Setup
--------

To use the `pangle_flutter` package, you need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  pangle_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Android Configuration
-----------------------

To use the `pangle_flutter` package on Android, you need to add the following configuration to your `AndroidManifest.xml` file:

```xml
<application>
    ...
    <meta-data
        android:name="com.bytedance.sdk.openadsdk.appid"
        android:value="YOUR_APP_ID" />
</application>
```

Replace `YOUR_APP_ID` with your actual Pangle app ID.

## iOS Configuration
--------------------

To use the `pangle_flutter` package on iOS, you need to add the following configuration to your `Info.plist` file:

```xml
<key>com.bytedance.sdk.openadsdk.appid</key>
<string>YOUR_APP_ID</string>
```

Replace `YOUR_APP_ID` with your actual Pangle app ID.

## Usage
-----

To use the `pangle_flutter` package, you need to import it in your Dart file:

```dart
import 'package:pangle_flutter/pangle_flutter.dart';
```

Then, you can use the `Pangle` class to display ads:

```dart
Pangle.init(
  appId: 'YOUR_APP_ID',
  appName: 'YOUR_APP_NAME',
);

Pangle.loadBannerAd(
  adId: 'YOUR_AD_ID',
  adSize: AdSize.banner,
);

Pangle.showBannerAd();
```

Replace `YOUR_APP_ID`, `YOUR_APP_NAME`, and `YOUR_AD_ID` with your actual Pangle app ID, app name, and ad ID.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:pangle_flutter/pangle_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Pangle Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // Initialize the Pangle SDK
  void _initPangle() {
    Pangle.init(
      appId: 'YOUR_APP_ID',
      appName: 'YOUR_APP_NAME',
    );
  }

  // Load a banner ad
  void _loadBannerAd() {
    Pangle.loadBannerAd(
      adId: 'YOUR_AD_ID',
      adSize: AdSize.banner,
    );
  }

  // Show the banner ad
  void _showBannerAd() {
    Pangle.showBannerAd();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Pangle Flutter Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _initPangle,
              child: Text('Initialize Pangle'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _loadBannerAd,
              child: Text('Load Banner Ad'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _showBannerAd,
              child: Text('Show Banner Ad'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a button to initialize the Pangle SDK.
// 2. When the user clicks the button, the _initPangle method is called, which initializes the Pangle SDK with the app ID and app name.
// 3. After the Pangle SDK is initialized, the user can click the button to load a banner ad.
// 4. When the user clicks the button, the _loadBannerAd method is called, which loads a banner ad with the specified ad ID and ad size.
// 5. After the banner ad is loaded, the user can click the button to show the banner ad.
// 6. When the user clicks the button, the _showBannerAd method is called, which shows the banner ad on the screen.

// In summary, the code flows as follows:
// Initialize Pangle SDK -> Load Banner Ad -> Show Banner Ad

```

<-- END_MAIN -->