<-- START_DESCRIPTION -->

# Flutter QQ Ads Package
==========================

The `flutter_qq_ads` package is a Flutter plugin that allows developers to integrate QQ ads into their Flutter applications. QQ is a popular social media platform in China, and this package provides a convenient way to monetize Flutter apps with QQ ads.

## When to Use This Package
---------------------------

This package is ideal for developers who want to target the Chinese market and monetize their Flutter apps with QQ ads. It is also suitable for developers who want to integrate multiple ad platforms into their apps.

## Features
------------

*   Supports multiple ad formats, including banner ads, interstitial ads, and rewarded video ads
*   Easy to integrate and use
*   Supports both Android and iOS platforms
*   Provides a range of customization options for ad appearance and behavior

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Flutter QQ Ads Package
===========================================================

## Step 1: Add the Package to Your Flutter Project
------------------------------------------------

To use the `flutter_qq_ads` package, you need to add it to your Flutter project. You can do this by adding the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_qq_ads: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the Package
---------------------------

To use the package, you need to import it into your Dart file. You can do this by adding the following line at the top of your file:

```dart
import 'package:flutter_qq_ads/flutter_qq_ads.dart';
```

## Step 3: Initialize the Package
------------------------------

Before you can use the package, you need to initialize it. You can do this by calling the `init` method and passing in your QQ ad app ID:

```dart
await FlutterQqAds.init('your_app_id');
```

## Step 4: Create an Ad
---------------------

To create an ad, you need to call the `createAd` method and pass in the ad type and ad ID:

```dart
final ad = await FlutterQqAds.createAd(AdType.banner, 'your_ad_id');
```

## Step 5: Show the Ad
------------------

To show the ad, you need to call the `show` method:

```dart
await ad.show();
```

## Platform-Specific Details
---------------------------

### Android

To use the package on Android, you need to add the following lines to your `AndroidManifest.xml` file:

```xml
<application>
  <meta-data
    android:name="com.qq.e.ads.appid"
    android:value="your_app_id" />
</application>
```

### iOS

To use the package on iOS, you need to add the following lines to your `Info.plist` file:

```xml
<key>QQEAD_APP_ID</key>
<string>your_app_id</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_qq_ads/flutter_qq_ads.dart';

void main() async {
  // Initialize the package
  await FlutterQqAds.init('your_app_id');

  // Create a banner ad
  final bannerAd = await FlutterQqAds.createAd(AdType.banner, 'your_ad_id');

  // Create an interstitial ad
  final interstitialAd = await FlutterQqAds.createAd(AdType.interstitial, 'your_ad_id');

  // Create a rewarded video ad
  final rewardedVideoAd = await FlutterQqAds.createAd(AdType.rewardedVideo, 'your_ad_id');

  runApp(MyApp(bannerAd, interstitialAd, rewardedVideoAd));
}

class MyApp extends StatelessWidget {
  final Ad bannerAd;
  final Ad interstitialAd;
  final Ad rewardedVideoAd;

  MyApp(this.bannerAd, this.interstitialAd, this.rewardedVideoAd);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter QQ Ads Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Show the banner ad
              bannerAd.getView(),

              // Show the interstitial ad
              ElevatedButton(
                onPressed: () async {
                  await interstitialAd.show();
                },
                child: Text('Show Interstitial Ad'),
              ),

              // Show the rewarded video ad
              ElevatedButton(
                onPressed: () async {
                  await rewardedVideoAd.show();
                },
                child: Text('Show Rewarded Video Ad'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and the package is initialized with the app ID.
// 2. The user creates a banner ad, an interstitial ad, and a rewarded video ad.
// 3. The user shows the banner ad on the screen.
// 4. The user clicks the button to show the interstitial ad.
// 5. The user clicks the button to show the rewarded video ad.
// 6. The user watches the rewarded video ad and earns a reward.
```

// In summary, the code flows as follows:
// The user initializes the package with their app ID.
// The user creates three ads: a banner ad, an interstitial ad, and a rewarded video ad.
// The user shows the banner ad on the screen.
// The user shows the interstitial ad and the rewarded video ad when they click the corresponding buttons.
// The user earns a reward after watching the rewarded video ad.

<-- END_MAIN -->