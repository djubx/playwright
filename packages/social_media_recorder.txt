<-- START_DESCRIPTION -->
# Social Media Recorder Flutter Package
=====================================

The `social_media_recorder` Flutter package allows developers to easily integrate social media recording features into their apps. This package provides a simple and efficient way to record and share videos on various social media platforms.

## When to Use This Package
---------------------------

This package is ideal for apps that require video recording and sharing features, such as:

* Social media apps
* Video sharing apps
* Live streaming apps
* Gaming apps

## Features
------------

* Record video and audio
* Share recorded video on social media platforms (e.g. Instagram, Facebook, Twitter)
* Customize recording settings (e.g. resolution, frame rate, bitrate)
* Support for both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the Social Media Recorder Package
===========================================================

## Step 1: Add the Package to Your Flutter Project
------------------------------------------------

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  social_media_recorder: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package
---------------------------

Import the package in your Dart file:
```dart
import 'package:social_media_recorder/social_media_recorder.dart';
```
## Step 3: Initialize the Recorder
---------------------------------

Initialize the recorder with the desired settings:
```dart
SocialMediaRecorder _recorder = SocialMediaRecorder(
  resolution: Resolution.hd,
  frameRate: 30,
  bitrate: 1000000,
);
```
## Step 4: Start Recording
-------------------------

Start recording using the `_recorder` object:
```dart
_recorder.startRecording();
```
## Step 5: Stop Recording and Share
---------------------------------

Stop recording and share the recorded video on social media:
```dart
_recorder.stopRecording().then((videoFile) {
  // Share the video file on social media
  shareVideoOnSocialMedia(videoFile);
});
```
## Platform-Specific Details
---------------------------

### Android

* Add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.CAMERA" />
<uses-permission android:name="android.permission.RECORD_AUDIO" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```
* Use the `android.permission.CAMERA` permission to access the camera.

### iOS

* Add the following permissions to your `Info.plist` file:
```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to record video.</string>
<key>NSMicrophoneUsageDescription</key>
<string>This app needs microphone access to record audio.</string>
```
* Use the `NSCameraUsageDescription` permission to access the camera.

<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:social_media_recorder/social_media_recorder.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Social Media Recorder Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  SocialMediaRecorder _recorder;
  bool _isRecording = false;

  @override
  void initState() {
    super.initState();
    _recorder = SocialMediaRecorder(
      resolution: Resolution.hd,
      frameRate: 30,
      bitrate: 1000000,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Social Media Recorder Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _startRecording,
              child: Text('Start Recording'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _stopRecording,
              child: Text('Stop Recording'),
            ),
            SizedBox(height: 20),
            Text(_isRecording ? 'Recording...' : 'Not recording'),
          ],
        ),
      ),
    );
  }

  void _startRecording() {
    _recorder.startRecording();
    setState(() {
      _isRecording = true;
    });
  }

  void _stopRecording() {
    _recorder.stopRecording().then((videoFile) {
      // Share the video file on social media
      shareVideoOnSocialMedia(videoFile);
      setState(() {
        _isRecording = false;
      });
    });
  }

  void shareVideoOnSocialMedia(File videoFile) {
    // Share the video file on social media using a package like share_plus
  }
}
```
// This code creates a simple app with two buttons: Start Recording and Stop Recording.
// When the Start Recording button is pressed, the app starts recording video using the SocialMediaRecorder package.
// When the Stop Recording button is pressed, the app stops recording and shares the recorded video on social media.
// The app uses the SocialMediaRecorder package to handle the recording and sharing of the video.
// The shareVideoOnSocialMedia function is a placeholder for sharing the video file on social media using a package like share_plus.
<-- END_MAIN -->