<-- START_DESCRIPTION -->

# Customer.io Flutter Package
==========================

The Customer.io Flutter package is a powerful tool for integrating Customer.io's marketing automation and customer engagement platform into your Flutter app. With this package, you can easily track user behavior, send targeted push notifications, and create personalized experiences for your users.

## When to Use This Package
---------------------------

You should use this package if you want to:

* Track user behavior and send targeted push notifications
* Create personalized experiences for your users
* Integrate Customer.io's marketing automation platform into your Flutter app

## Features
------------

* Track user behavior with custom events and attributes
* Send targeted push notifications with Customer.io's segmentation and automation tools
* Create personalized experiences with Customer.io's content and messaging features

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Customer.io Flutter Package
=============================================

To set up the Customer.io Flutter package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  customer_io: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package in Your Dart File

Import the package in your Dart file:
```dart
import 'package:customer_io/customer_io.dart';
```
### Step 3: Initialize the Customer.io SDK

Initialize the Customer.io SDK with your site ID and API key:
```dart
CustomerIO.initialize(
  siteId: 'YOUR_SITE_ID',
  apiKey: 'YOUR_API_KEY',
);
```
### Step 4: Track User Behavior

Track user behavior with custom events and attributes:
```dart
CustomerIO.track(
  event: 'MY_EVENT',
  attributes: {
    'attribute1': 'value1',
    'attribute2': 'value2',
  },
);
```
### Step 5: Send Targeted Push Notifications

Send targeted push notifications with Customer.io's segmentation and automation tools:
```dart
CustomerIO.sendPush(
  campaignId: 'CAMPAIGN_ID',
  recipientId: 'RECIPIENT_ID',
);
```
### Platform-Specific Details

* For Android, add the following lines to your `AndroidManifest.xml` file:
```xml
<application>
  ...
  <meta-data
    android:name="com.customerio.sdk.site_id"
    android:value="YOUR_SITE_ID" />
  <meta-data
    android:name="com.customerio.sdk.api_key"
    android:value="YOUR_API_KEY" />
</application>
```
* For iOS, add the following lines to your `Info.plist` file:
```xml
<key>CustomerIO</key>
<dict>
  <key>SiteID</key>
  <string>YOUR_SITE_ID</string>
  <key>APIKey</key>
  <string>YOUR_API_KEY</string>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:customer_io/customer_io.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Customer.io Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  void initState() {
    super.initState();
    // Initialize the Customer.io SDK
    CustomerIO.initialize(
      siteId: 'YOUR_SITE_ID',
      apiKey: 'YOUR_API_KEY',
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Customer.io Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Track user behavior with custom events and attributes
            ElevatedButton(
              onPressed: () {
                CustomerIO.track(
                  event: 'MY_EVENT',
                  attributes: {
                    'attribute1': 'value1',
                    'attribute2': 'value2',
                  },
                );
              },
              child: Text('Track Event'),
            ),
            // Send targeted push notifications with Customer.io's segmentation and automation tools
            ElevatedButton(
              onPressed: () {
                CustomerIO.sendPush(
                  campaignId: 'CAMPAIGN_ID',
                  recipientId: 'RECIPIENT_ID',
                );
              },
              child: Text('Send Push'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and the Customer.io SDK is initialized with the site ID and API key.
// 2. The user clicks the "Track Event" button, which tracks a custom event with attributes using the CustomerIO.track method.
// 3. The user clicks the "Send Push" button, which sends a targeted push notification using the CustomerIO.sendPush method.
// 4. The Customer.io SDK handles the push notification and displays it to the user.
```

// The code flow is as follows:
// 1. The main function runs the MyApp widget.
// 2. The MyApp widget builds the MyHomePage widget.
// 3. The MyHomePage widget initializes the Customer.io SDK in its initState method.
// 4. The MyHomePage widget builds a Scaffold with two ElevatedButton widgets.
// 5. The first ElevatedButton widget tracks a custom event with attributes when pressed.
// 6. The second ElevatedButton widget sends a targeted push notification when pressed.
// 7. The Customer.io SDK handles the push notification and displays it to the user.

<-- END_MAIN -->