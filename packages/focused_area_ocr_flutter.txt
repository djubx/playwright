<-- START_DESCRIPTION -->

# Focused Area OCR Flutter Package
=====================================

The `focused_area_ocr_flutter` package is a powerful tool for Optical Character Recognition (OCR) in Flutter applications. It allows developers to extract text from images, focusing on specific areas of interest. This package is ideal for applications that require text recognition, such as document scanning, business card reading, or image-based data entry.

### Key Features

*   **Area of Interest (AOI) selection**: Define specific regions within an image to perform OCR.
*   **Image processing**: Enhance image quality for better OCR results.
*   **Text recognition**: Extract text from images using advanced OCR algorithms.
*   **Platform support**: Compatible with both Android and iOS platforms.

### Use Cases

*   Document scanning and text extraction
*   Business card reading and contact information extraction
*   Image-based data entry for forms or surveys
*   Text recognition for visually impaired users

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Package
=============================================

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  focused_area_ocr_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:focused_area_ocr_flutter/focused_area_ocr_flutter.dart';
```

### Step 3: Initialize the Package

Initialize the package by calling the `init` method:

```dart
await FocusedAreaOcrFlutter.init();
```

### Step 4: Load an Image

Load an image from a file or asset:

```dart
final image = await loadImage('path/to/image.jpg');
```

### Step 5: Define the Area of Interest (AOI)

Define the AOI by specifying the coordinates of the top-left and bottom-right corners:

```dart
final aoi = Rect.fromLTWH(100, 100, 300, 300);
```

### Step 6: Perform OCR

Perform OCR on the image, focusing on the defined AOI:

```dart
final text = await FocusedAreaOcrFlutter.performOcr(image, aoi);
```

### Platform-Specific Details

*   **Android**: The package uses the Google Mobile Vision API for OCR. Make sure to add the following dependency to your `android/app/build.gradle` file:

    ```groovy
dependencies {
  implementation 'com.google.android.gms:play-services-vision:20.1.3'
}
```

*   **iOS**: The package uses the Tesseract OCR engine. Make sure to add the following dependency to your `ios/Podfile` file:

    ```ruby
pod 'TesseractOCRiOS', '~> 4.0.0'
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:focused_area_ocr_flutter/focused_area_ocr_flutter.dart';

void main() async {
  // Initialize the package
  await FocusedAreaOcrFlutter.init();

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Focused Area OCR Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _text = '';

  Future<void> _performOcr() async {
    // Load an image from a file or asset
    final image = await loadImage('path/to/image.jpg');

    // Define the Area of Interest (AOI)
    final aoi = Rect.fromLTWH(100, 100, 300, 300);

    // Perform OCR on the image, focusing on the defined AOI
    final text = await FocusedAreaOcrFlutter.performOcr(image, aoi);

    // Update the UI with the extracted text
    setState(() {
      _text = text;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Focused Area OCR Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(_text),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _performOcr,
              child: Text('Perform OCR'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and is presented with a button to perform OCR.
// 2. When the button is pressed, the app loads an image from a file or asset.
// 3. The app defines the Area of Interest (AOI) within the image.
// 4. The app performs OCR on the image, focusing on the defined AOI.
// 5. The extracted text is displayed on the screen.
```

<-- END_MAIN -->