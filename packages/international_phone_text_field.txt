<-- START_DESCRIPTION -->

International Phone Text Field Flutter Package
=============================================

The `international_phone_text_field` package is a Flutter widget that allows users to input phone numbers in an international format. It provides a dropdown list of countries with their respective country codes, making it easy for users to select their country and enter their phone number.

When to Use This Package
------------------------

This package is useful when you need to collect phone numbers from users in different countries. It ensures that the phone numbers are formatted correctly and can be easily validated.

Features
--------

*   Dropdown list of countries with their respective country codes
*   Automatic formatting of phone numbers based on the selected country
*   Support for both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
----------------

To use the `international_phone_text_field` package, follow these steps:

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  international_phone_text_field: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:international_phone_text_field/international_phone_text_field.dart';
```

### Step 3: Use the `InternationalPhoneTextField` Widget

Use the `InternationalPhoneTextField` widget in your Flutter widget tree:

```dart
InternationalPhoneTextField(
  onSubmitted: (String phoneNumber) {
    // Handle the submitted phone number
  },
)
```

Platform-Specific Details
-------------------------

### Android

No additional configuration is required for Android.

### iOS

No additional configuration is required for iOS.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:international_phone_text_field/international_phone_text_field.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'International Phone Text Field Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _phoneNumber = '';

  void _handleSubmitted(String phoneNumber) {
    setState(() {
      _phoneNumber = phoneNumber;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('International Phone Text Field Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            InternationalPhoneTextField(
              onSubmitted: _handleSubmitted,
            ),
            Text('Phone Number: $_phoneNumber'),
          ],
        ),
      ),
    );
  }
}
```

// This is the main entry point of the application.
// The `MyApp` widget is the root of the widget tree.
// It uses the `MaterialApp` widget to create a Material Design app.
// The `MyHomePage` widget is the home page of the app.
// It uses the `Scaffold` widget to create a basic Material Design layout.
// The `InternationalPhoneTextField` widget is used to input phone numbers.
// When the user submits the phone number, the `_handleSubmitted` function is called.
// The `_handleSubmitted` function updates the `_phoneNumber` variable with the submitted phone number.
// The updated phone number is displayed on the screen.

// The application flow is as follows:
// 1. The user opens the app and is presented with the home page.
// 2. The user clicks on the `InternationalPhoneTextField` widget to input their phone number.
// 3. The user selects their country and enters their phone number.
// 4. The user submits the phone number.
// 5. The `_handleSubmitted` function is called with the submitted phone number.
// 6. The `_handleSubmitted` function updates the `_phoneNumber` variable with the submitted phone number.
// 7. The updated phone number is displayed on the screen.

<-- END_MAIN -->