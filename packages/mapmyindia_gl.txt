<-- START_DESCRIPTION -->

# MapmyIndia GL Flutter Package
================================

The MapmyIndia GL Flutter package is a powerful tool for integrating MapmyIndia maps into your Flutter applications. It provides a range of features, including map rendering, marker placement, and routing.

## When to Use
--------------

This package is ideal for applications that require map-based functionality, such as:

* Location-based services
* Navigation and routing
* Geospatial data visualization
* Ride-hailing and logistics applications

## Features
------------

* Map rendering with various map types (e.g., satellite, hybrid)
* Marker placement and customization
* Routing and navigation
* Geospatial data visualization
* Support for both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the MapmyIndia GL Flutter package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  mapmyindia_gl: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Configure the Package

Import the package in your Dart file:
```dart
import 'package:mapmyindia_gl/mapmyindia_gl.dart';
```
### Step 3: Initialize the Map

Create a `MapmyIndiaMap` widget and initialize it with your API key:
```dart
MapmyIndiaMap(
  apiKey: 'YOUR_API_KEY',
  onMapCreated: (map) {
    // Map created callback
  },
)
```
### Platform-Specific Details

* **Android:** Add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
```
* **iOS:** Add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:mapmyindia_gl/mapmyindia_gl.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  MapmyIndiaMapController _mapController;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: MapmyIndiaMap(
          apiKey: 'YOUR_API_KEY',
          onMapCreated: (map) {
            _mapController = map;
            // Map created callback
          },
          initialCameraPosition: CameraPosition(
            target: LatLng(28.7041, 77.1025),
            zoom: 12,
          ),
          markers: [
            Marker(
              markerId: MarkerId('marker1'),
              position: LatLng(28.7041, 77.1025),
              infoWindow: InfoWindow(title: 'Marker 1'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and the `RealFlutter` widget is created.
// 2. The `MapmyIndiaMap` widget is created and initialized with the API key.
// 3. The map is rendered with the initial camera position and markers.
// 4. The user can interact with the map, such as zooming and panning.
// 5. The map created callback is called when the map is created.
```

// Final summary:
// The code creates a Flutter app that displays a MapmyIndia map with a marker.
// The map is initialized with an API key and an initial camera position.
// The user can interact with the map, and the map created callback is called when the map is created.

<-- END_MAIN -->