```dart
import 'package:flutter/material.dart';
import 'package:toss_payment/toss_payment.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Toss Payment Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  TossPayment _tossPayment;

  @override
  void initState() {
    super.initState();
    _tossPayment = TossPayment(
      apiKey: 'YOUR_API_KEY',
      secretKey: 'YOUR_SECRET_KEY',
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Toss Payment Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Toss Payment Example',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                _tossPayment.createPayment(
                  amount: 10000,
                  paymentMethod: TossPaymentMethod.card,
                  orderId: 'ORDER_ID',
                  orderName: 'ORDER_NAME',
                  customerName: 'CUSTOMER_NAME',
                  customerEmail: 'CUSTOMER_EMAIL',
                  customerPhone: 'CUSTOMER_PHONE',
                );
              },
              child: Text('Make Payment'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Make Payment" button.
// 2. The _tossPayment.createPayment method is called with the payment details.
// 3. The user is redirected to the Toss payment page to complete the payment.
// 4. After the payment is complete, the user is redirected back to the app.
// 5. The _tossPayment.onPaymentResult stream emits an event with the payment result.
// 6. The app handles the payment result and displays a success or failure message to the user.

// This is a basic example of how to use the Toss payment package in a Flutter app.
// You can customize the payment flow and handle errors as needed.

// Note: You should replace 'YOUR_API_KEY' and 'YOUR_SECRET_KEY' with your actual Toss API key and secret key.

<-- END_MAIN -->
```