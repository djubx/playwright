# Bangla Converter Flutter Package

## <-- START_DESCRIPTION -->

### Description

The `bangla_converter` Flutter package is designed to facilitate the conversion of text between English and Bangla (Bengali) scripts. This package is particularly useful for applications targeting Bangla-speaking audiences, enabling seamless communication and content display in both languages. 

### When to Use

You might consider using the `bangla_converter` package in scenarios such as:
- Developing educational apps that teach the Bangla language.
- Creating messaging applications that support multilingual communication.
- Building content management systems that require text input in both English and Bangla.

### Features

- **Text Conversion**: Convert text from English to Bangla and vice versa.
- **Easy Integration**: Simple API that can be easily integrated into any Flutter application.
- **Lightweight**: Minimal overhead, ensuring that your app remains responsive.
- **Unicode Support**: Handles Unicode characters effectively, ensuring accurate representation of Bangla text.

## <-- END_DESCRIPTION -->

## <-- START_TUTORIAL -->

### Tutorial

#### Installation

To use the `bangla_converter` package, you need to add it to your `pubspec.yaml` file. Open the file and add the following line under dependencies:

```yaml
dependencies:
  bangla_converter: ^1.0.0  # Check for the latest version on pub.dev
```

After adding the dependency, run the following command in your terminal to install the package:

```bash
flutter pub get
```

#### Platform-Specific Details

For both Android and iOS, no additional configurations are required for the `bangla_converter` package. However, ensure that your app supports Unicode text rendering, which is typically enabled by default in Flutter.

#### Usage

To use the `bangla_converter` package, you can import it into your Dart file as follows:

```dart
import 'package:bangla_converter/bangla_converter.dart';
```

You can then utilize the provided methods to convert text. Hereâ€™s a simple example of how to convert English text to Bangla:

```dart
String banglaText = BanglaConverter().toBangla("Hello, how are you?");
```

## <-- END_TUTORIAL -->

## <-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:bangla_converter/bangla_converter.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Bangla Converter Demo',
      home: BanglaConverterScreen(),
    );
  }
}

class BanglaConverterScreen extends StatefulWidget {
  @override
  _BanglaConverterScreenState createState() => _BanglaConverterScreenState();
}

class _BanglaConverterScreenState extends State<BanglaConverterScreen> {
  // Controller for the input text field
  final TextEditingController _controller = TextEditingController();
  // Variable to hold the converted Bangla text
  String _convertedText = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Bangla Converter'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            // Text field for user input
            TextField(
              controller: _controller,
              decoration: InputDecoration(
                labelText: 'Enter English Text',
              ),
            ),
            SizedBox(height: 20),
            // Button to trigger conversion
            ElevatedButton(
              onPressed: _convertText,
              child: Text('Convert to Bangla'),
            ),
            SizedBox(height: 20),
            // Display the converted Bangla text
            Text(
              _convertedText,
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }

  // Method to convert text when button is pressed
  void _convertText() {
    // Get the text from the controller
    String inputText = _controller.text;
    // Convert the text to Bangla using the BanglaConverter
    setState(() {
      _convertedText = BanglaConverter().toBangla(inputText);
    });
  }
}

// The application flow is as follows:
// 1. The app starts with the main function, which runs the RealFlutter widget.
// 2. The RealFlutter widget builds a MaterialApp with a title and a home screen.
// 3. The BanglaConverterScreen widget is created, which contains a TextField for user input,
//    a button to trigger the conversion, and a Text widget to display the converted text.
// 4. When the user enters text in the TextField and presses the "Convert to Bangla" button,
//    the _convertText method is called.
// 5. This method retrieves the input text, converts it to Bangla using the BanglaConverter,
//    and updates the state to display the converted text on the screen.
```

## <-- END_MAIN -->

### Summary

In this blog post, we explored the `bangla_converter` Flutter package, which provides a straightforward way to convert text between English and Bangla. We covered the installation process, usage examples, and provided a complete Flutter application demonstrating its capabilities. The application allows users to input English text and convert it to Bangla, showcasing the package's functionality in a user-friendly interface. This package is ideal for developers looking to support Bangla language features in their applications.