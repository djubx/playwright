# Flutter Package: icon_bottomsheet

<!-- START_DESCRIPTION -->
## Description

The `icon_bottomsheet` Flutter package is a versatile tool designed to enhance the user experience by providing a customizable bottom sheet that can be triggered by tapping on an icon. This package is particularly useful in applications where you want to present additional options or information without navigating away from the current screen. 

### When to Use

You might consider using `icon_bottomsheet` in scenarios such as:
- Displaying contextual actions related to a specific item in a list.
- Providing quick access to settings or options without cluttering the main UI.
- Offering additional information or tips related to a feature when the user taps on an icon.

### Features

- **Customizable Appearance**: You can easily style the bottom sheet to match your app's theme.
- **Icon Trigger**: The bottom sheet is activated by tapping on an icon, making it intuitive for users.
- **Flexible Content**: Supports various types of content, including text, images, and buttons.
- **Animation Support**: Smooth animations enhance the user experience when the bottom sheet appears and disappears.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
## Tutorial

### Installation

To use the `icon_bottomsheet` package, you need to add it to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  icon_bottomsheet: ^1.0.0  # Check for the latest version on pub.dev
```

After adding the dependency, run `flutter pub get` to install the package.

### Platform-Specific Details

#### Android

No additional configuration is required for Android. Just ensure that your `minSdkVersion` is set to at least 21 in your `android/app/build.gradle` file.

#### iOS

For iOS, ensure that you have the correct permissions set in your `Info.plist` if your bottom sheet interacts with any device features (like camera or location).

### Basic Usage

To use the `icon_bottomsheet`, you can follow these steps:

1. Import the package in your Dart file:

```dart
import 'package:icon_bottomsheet/icon_bottomsheet.dart';
```

2. Create a function to show the bottom sheet when the icon is tapped:

```dart
void _showBottomSheet(BuildContext context) {
  showIconBottomSheet(
    context: context,
    builder: (context) {
      return Container(
        height: 200,
        child: Center(
          child: Text('This is a bottom sheet!'),
        ),
      );
    },
  );
}
```

3. Add an icon button in your widget tree that calls this function:

```dart
IconButton(
  icon: Icon(Icons.more_vert),
  onPressed: () => _showBottomSheet(context),
)
```

This will display a bottom sheet with the specified content when the icon is tapped.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
## Complete Example

```dart
import 'package:flutter/material.dart';
import 'package:icon_bottomsheet/icon_bottomsheet.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Icon Bottom Sheet Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Icon Bottom Sheet Demo'),
        ),
        body: Center(
          child: IconButton(
            // This icon button will trigger the bottom sheet
            icon: Icon(Icons.more_vert),
            onPressed: () => _showBottomSheet(context),
          ),
        ),
      ),
    );
  }

  // Function to show the bottom sheet
  void _showBottomSheet(BuildContext context) {
    showIconBottomSheet(
      context: context,
      builder: (context) {
        return Container(
          height: 200, // Set the height of the bottom sheet
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.vertical(top: Radius.circular(16)),
          ),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text('This is a bottom sheet!'),
              SizedBox(height: 20),
              ElevatedButton(
                // Button to close the bottom sheet
                onPressed: () {
                  Navigator.pop(context); // Close the bottom sheet
                },
                child: Text('Close'),
              ),
            ],
          ),
        );
      },
    );
  }
}

// Application Flow Explanation:
// 1. The app starts with the main function, which runs the RealFlutter widget.
// 2. The RealFlutter widget builds a MaterialApp with a Scaffold containing an AppBar and a Center widget.
// 3. Inside the Center widget, an IconButton is created. When this button is pressed, it calls the _showBottomSheet function.
// 4. The _showBottomSheet function uses the showIconBottomSheet method to display a bottom sheet with a specified height and content.
// 5. The bottom sheet contains a Text widget and an ElevatedButton. When the button is pressed, it calls Navigator.pop(context) to close the bottom sheet.
```

<!-- END_MAIN -->

## Summary

In this blog post, we explored the `icon_bottomsheet` Flutter package, which provides a user-friendly way to display additional options or information through a bottom sheet triggered by an icon. We covered the installation process, platform-specific details, and provided a complete example demonstrating how to implement the package in a Flutter application. The example code illustrates how to create a simple app that showcases the bottom sheet functionality, making it easy for developers to integrate this package into their own projects.