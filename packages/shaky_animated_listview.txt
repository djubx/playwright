<-- START_DESCRIPTION -->

# Shaky Animated Listview Flutter Package
=============================================

The `shaky_animated_listview` Flutter package provides a unique and engaging way to display lists of items. It allows developers to create a shaky animation effect when users interact with the list, making the app more interactive and fun.

### When to Use This Package

This package is ideal for apps that require a creative and engaging way to display lists of items. It can be used in various scenarios, such as:

* Displaying a list of products in an e-commerce app
* Showing a list of items in a game
* Creating a interactive tutorial or guide

### Features

The `shaky_animated_listview` package comes with several features, including:

* Customizable animation duration and intensity
* Support for various animation types (e.g., shake, bounce, fade)
* Ability to animate individual items or the entire list
* Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `shaky_animated_listview` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  shaky_animated_listview: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:shaky_animated_listview/shaky_animated_listview.dart';
```
### Step 3: Create a Shaky Animated Listview

Create a `ShakyAnimatedListview` widget and pass in the required parameters:
```dart
ShakyAnimatedListview(
  children: [
    // Your list items here
  ],
  animationType: ShakyAnimationType.shake,
  animationDuration: Duration(milliseconds: 500),
)
```
### Platform-Specific Details

The `shaky_animated_listview` package is compatible with both Android and iOS platforms. However, you may need to make some adjustments to your app's configuration files to ensure smooth animation performance.

For Android, add the following line to your `AndroidManifest.xml` file:
```xml
<application
  ...
  android:hardwareAccelerated="true"
  ...
>
```
For iOS, add the following line to your `Info.plist` file:
```xml
<key>UIViewAnimationCurveEaseInOut</key>
<string>YES</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:shaky_animated_listview/shaky_animated_listview.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shaky Animated Listview Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<String> _items = [
    'Item 1',
    'Item 2',
    'Item 3',
    'Item 4',
    'Item 5',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Shaky Animated Listview Demo'),
      ),
      body: ShakyAnimatedListview(
        children: _items.map((item) {
          return ListTile(
            title: Text(item),
          );
        }).toList(),
        animationType: ShakyAnimationType.shake,
        animationDuration: Duration(milliseconds: 500),
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget is a stateless widget that returns a MaterialApp widget with a title and a home page.
// The home page is an instance of the MyHomePage widget, which is a stateful widget.
// The MyHomePage widget has a list of items and a ShakyAnimatedListview widget.
// The ShakyAnimatedListview widget takes the list of items and creates a shaky animation effect when the user interacts with the list.
// The animation type and duration can be customized using the animationType and animationDuration properties.
```

<-- END_MAIN -->