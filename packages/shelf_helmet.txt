<-- START_DESCRIPTION -->

# Shelf Helmet Flutter Package
================================

The Shelf Helmet Flutter package is a lightweight library that provides a simple way to manage the application's title, icon, and other metadata on both Android and iOS platforms. It allows developers to easily customize the appearance of their app's shelf, which is the area at the top of the screen that displays the app's title and icon.

## When to Use This Package
---------------------------

This package is useful when you want to:

* Customize the title and icon of your app's shelf
* Change the color scheme of your app's shelf
* Add custom metadata to your app's shelf

## Features
------------

* Easy to use API for customizing the app's shelf
* Supports both Android and iOS platforms
* Allows for custom title, icon, and metadata

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using Shelf Helmet
=============================================

## Step 1: Add the Package to Your Pubspec.yaml File
------------------------------------------------

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  shelf_helmet: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package in Your Dart File
---------------------------------------------

Import the package in your Dart file:
```dart
import 'package:shelf_helmet/shelf_helmet.dart';
```
## Step 3: Create a Shelf Helmet Instance
-----------------------------------------

Create a Shelf Helmet instance:
```dart
final shelfHelmet = ShelfHelmet();
```
## Step 4: Customize the App's Shelf
------------------------------------

Customize the app's shelf using the `shelfHelmet` instance:
```dart
shelfHelmet.title = 'My App';
shelfHelmet.icon = Icon(Icons.android);
```
## Platform-Specific Details
---------------------------

### Android

On Android, you need to add the following code to your `AndroidManifest.xml` file:
```xml
<application
    ...
    android:label="@string/app_name"
    android:icon="@mipmap/ic_launcher"
    ...>
```
### iOS

On iOS, you need to add the following code to your `Info.plist` file:
```xml
<key>CFBundleName</key>
<string>My App</string>
<key>CFBundleIconFiles</key>
<array>
    <string>Icon-60@2x.png</string>
</array>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:shelf_helmet/shelf_helmet.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shelf Helmet Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final shelfHelmet = ShelfHelmet();

  @override
  void initState() {
    super.initState();
    shelfHelmet.title = 'My App';
    shelfHelmet.icon = Icon(Icons.android);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(shelfHelmet.title),
        leading: shelfHelmet.icon,
      ),
      body: Center(
        child: Text('Shelf Helmet Demo'),
      ),
    );
  }
}

// The app starts by running the main function, which creates a MaterialApp instance.
// The MaterialApp instance has a title and a home property, which is set to MyHomePage.
// MyHomePage is a stateful widget that creates a ShelfHelmet instance in its initState method.
// The ShelfHelmet instance is used to customize the app's shelf, setting the title and icon.
// The build method of MyHomePage returns a Scaffold instance with an AppBar and a body.
// The AppBar has a title and a leading property, which is set to the shelfHelmet icon.
// The body of the Scaffold is a Center widget with a Text child, displaying the text 'Shelf Helmet Demo'.

// In summary, the app flows as follows:
// 1. The main function creates a MaterialApp instance with a title and a home property.
// 2. The home property is set to MyHomePage, which creates a ShelfHelmet instance in its initState method.
// 3. The ShelfHelmet instance is used to customize the app's shelf, setting the title and icon.
// 4. The build method of MyHomePage returns a Scaffold instance with an AppBar and a body.
// 5. The AppBar has a title and a leading property, which is set to the shelfHelmet icon.
// 6. The body of the Scaffold is a Center widget with a Text child, displaying the text 'Shelf Helmet Demo'.
```

<-- END_MAIN -->