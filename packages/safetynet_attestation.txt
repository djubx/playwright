<-- START_DESCRIPTION -->

**Safetynet Attestation Flutter Package: Ensuring Device Integrity**
===========================================================

The `safetynet_attestation` Flutter package provides a way to verify the integrity of a device, ensuring that it has not been tampered with or compromised. This is particularly important for applications that require high security, such as banking or finance apps.

**When to Use This Package**
---------------------------

You should use this package in the following scenarios:

* When you need to verify the device's integrity before allowing access to sensitive data or features.
* When you want to ensure that your app is running on a genuine, non-rooted device.
* When you need to comply with security regulations or standards that require device integrity verification.

**Features**
------------

The `safetynet_attestation` package provides the following features:

* Device integrity verification using Google's SafetyNet Attestation API.
* Support for both Android and iOS platforms.
* Easy-to-use API for integrating device integrity verification into your app.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setting Up the Package**
-------------------------

To use the `safetynet_attestation` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  safetynet_attestation: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:safetynet_attestation/safetynet_attestation.dart';
```
### Step 3: Initialize the Package

Initialize the package by calling the `init` method:
```dart
await SafetynetAttestation.init();
```
### Step 4: Verify Device Integrity

Verify device integrity by calling the `verify` method:
```dart
bool isValid = await SafetynetAttestation.verify();
```
If the device is valid, the `verify` method returns `true`. Otherwise, it returns `false`.

**Platform-Specific Details**
---------------------------

### Android

On Android, the `safetynet_attestation` package uses the Google Play Services to verify device integrity. Make sure that the Google Play Services are installed and up-to-date on the device.

### iOS

On iOS, the `safetynet_attestation` package uses the DeviceCheck framework to verify device integrity. Make sure that the DeviceCheck framework is enabled in your Xcode project.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:safetynet_attestation/safetynet_attestation.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Safetynet Attestation Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  bool _isValid = false;

  @override
  void initState() {
    super.initState();
    _initSafetynetAttestation();
  }

  Future<void> _initSafetynetAttestation() async {
    // Initialize the Safetynet Attestation package
    await SafetynetAttestation.init();

    // Verify device integrity
    bool isValid = await SafetynetAttestation.verify();

    // Update the UI with the result
    setState(() {
      _isValid = isValid;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Safetynet Attestation Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              _isValid ? 'Device is valid' : 'Device is not valid',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}
```

// The app starts by initializing the Safetynet Attestation package in the `_initSafetynetAttestation` method.
// This method is called in the `initState` method of the `_MyHomePageState` class.
// The `init` method of the Safetynet Attestation package is used to initialize the package.
// After initialization, the `verify` method is used to verify device integrity.
// The result of the verification is stored in the `_isValid` variable.
// The UI is updated with the result by calling the `setState` method.
// The app displays a message indicating whether the device is valid or not.

<-- END_MAIN -->