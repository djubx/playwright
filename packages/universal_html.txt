<-- START_DESCRIPTION -->

# Universal HTML Flutter Package
=====================================

The `universal_html` Flutter package provides a powerful way to render HTML content within Flutter applications. It allows developers to display web pages, HTML documents, and even execute JavaScript code within their Flutter apps.

## When to Use
--------------

This package is ideal for use cases such as:

* Displaying web pages within a Flutter app
* Rendering HTML documents, such as eBooks or reports
* Executing JavaScript code within a Flutter app
* Creating hybrid apps that combine Flutter and web technologies

## Features
------------

* Renders HTML content within a Flutter widget
* Supports JavaScript execution
* Allows for interaction with web pages, such as clicking links and submitting forms
* Provides a range of customization options, including zooming and scrolling

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Universal HTML Package
------------------------------------------

To use the `universal_html` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  universal_html: ^2.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:universal_html/universal_html.dart';
```
### Step 3: Create an HTML Widget

Create an `HtmlWidget` to render the HTML content:
```dart
HtmlWidget(
  html: '<h1>Hello, World!</h1>',
)
```
### Platform-Specific Details

* On Android, the package uses the `WebView` widget to render HTML content.
* On iOS, the package uses the `WKWebView` widget to render HTML content.

### Configurations and Optimizations

* To enable JavaScript execution, set the `javascriptMode` property to `JavascriptMode.unrestricted`.
* To customize the zooming and scrolling behavior, use the `zoom` and `scroll` properties.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:universal_html/universal_html.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Universal HTML Demo',
      home: HtmlDemo(),
    );
  }
}

class HtmlDemo extends StatefulWidget {
  @override
  _HtmlDemoState createState() => _HtmlDemoState();
}

class _HtmlDemoState extends State<HtmlDemo> {
  String _html = '<h1>Hello, World!</h1>';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Universal HTML Demo'),
      ),
      body: Center(
        child: HtmlWidget(
          html: _html,
          // Enable JavaScript execution
          javascriptMode: JavascriptMode.unrestricted,
          // Customize zooming and scrolling behavior
          zoom: 1.5,
          scroll: true,
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: () {
          setState(() {
            _html = '<h1>Hello, Flutter!</h1>';
          });
        },
        child: Icon(Icons.refresh),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and displays an HTML widget with the initial HTML content.
// 2. The user clicks the floating action button to update the HTML content.
// 3. The app updates the HTML content and rebuilds the HTML widget.
// 4. The HTML widget renders the new HTML content and executes any JavaScript code.
```

// Final summary:
// The code demonstrates how to use the `universal_html` package to render HTML content within a Flutter app.
// It shows how to enable JavaScript execution and customize the zooming and scrolling behavior.
// The app updates the HTML content dynamically and rebuilds the HTML widget in response to user input.