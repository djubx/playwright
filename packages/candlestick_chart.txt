<-- START_DESCRIPTION -->

# Candlestick Chart Flutter Package
=====================================

The `candlestick_chart` Flutter package is a powerful and customizable charting library used to create candlestick charts for financial and stock market data. It provides a range of features, including:

*   Customizable chart appearance
*   Support for various data sources
*   Interactive charts with zooming and panning
*   Support for multiple platforms, including Android and iOS

This package is ideal for creating financial and stock market apps, as well as any other applications that require candlestick charts.

### When to Use This Package

Use this package when you need to create a candlestick chart in your Flutter app. This can be useful in a variety of scenarios, such as:

*   Displaying stock prices over time
*   Showing cryptocurrency prices
*   Creating a financial dashboard

### Features

The `candlestick_chart` package has the following features:

*   Customizable chart colors and styles
*   Support for various data sources, including lists and streams
*   Interactive charts with zooming and panning
*   Support for multiple platforms, including Android and iOS

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Candlestick Chart Flutter Package
=====================================================

## Step 1: Add the Package to Your Project

To use the `candlestick_chart` package, you need to add it to your project. You can do this by adding the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  candlestick_chart: ^0.1.1
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

To use the package, you need to import it into your Dart file. You can do this by adding the following line at the top of your file:

```dart
import 'package:candlestick_chart/candlestick_chart.dart';
```

## Step 3: Create a Candlestick Chart

To create a candlestick chart, you need to create a `CandlestickChart` widget. This widget takes a list of `Candlestick` objects as its data source. Here is an example of how to create a candlestick chart:

```dart
CandlestickChart(
  data: [
    Candlestick(
      open: 100,
      high: 120,
      low: 80,
      close: 110,
    ),
    Candlestick(
      open: 110,
      high: 130,
      low: 90,
      close: 120,
    ),
  ],
)
```

## Step 4: Customize the Chart

You can customize the chart by using various properties of the `CandlestickChart` widget. For example, you can change the colors of the chart by using the `colors` property:

```dart
CandlestickChart(
  data: [
    Candlestick(
      open: 100,
      high: 120,
      low: 80,
      close: 110,
    ),
    Candlestick(
      open: 110,
      high: 130,
      low: 90,
      close: 120,
    ),
  ],
  colors: [
    Colors.blue,
    Colors.red,
  ],
)
```

## Step 5: Add Interactivity to the Chart

You can add interactivity to the chart by using the `onTap` property of the `CandlestickChart` widget. This property takes a callback function that is called when the user taps on a candlestick:

```dart
CandlestickChart(
  data: [
    Candlestick(
      open: 100,
      high: 120,
      low: 80,
      close: 110,
    ),
    Candlestick(
      open: 110,
      high: 130,
      low: 90,
      close: 120,
    ),
  ],
  onTap: (candlestick) {
    print('Tapped on candlestick: ${candlestick.open}');
  },
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:candlestick_chart/candlestick_chart.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Candlestick Chart Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<Candlestick> _data = [
    Candlestick(
      open: 100,
      high: 120,
      low: 80,
      close: 110,
    ),
    Candlestick(
      open: 110,
      high: 130,
      low: 90,
      close: 120,
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Candlestick Chart Demo'),
      ),
      body: Center(
        child: CandlestickChart(
          data: _data,
          colors: [
            Colors.blue,
            Colors.red,
          ],
          onTap: (candlestick) {
            print('Tapped on candlestick: ${candlestick.open}');
          },
        ),
      ),
    );
  }
}
```

// This is the main file of the application.
// It creates a Material app with a single page.
// The page has a CandlestickChart widget that displays a candlestick chart.
// The chart has two candlesticks with different colors.
// When the user taps on a candlestick, it prints the open value of the candlestick to the console.

// The application uses the CandlestickChart package to create the candlestick chart.
// The package provides a CandlestickChart widget that takes a list of Candlestick objects as its data source.
// The Candlestick object has properties for the open, high, low, and close values of the candlestick.

// The application also uses the Material package to create the Material app and the page.
// The Material package provides a set of widgets and classes for creating Material Design apps.

// The application has a single page with a CandlestickChart widget.
// The page has an AppBar with a title.
// The body of the page is a Center widget with the CandlestickChart widget as its child.

// The CandlestickChart widget has a list of Candlestick objects as its data source.
// The list has two Candlestick objects with different colors.
// The CandlestickChart widget also has an onTap property that is called when the user taps on a candlestick.
// The onTap property prints the open value of the candlestick to the console.

<-- END_MAIN -->