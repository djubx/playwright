<-- START_DESCRIPTION -->

# Firebase Instance ID Flutter Package
=====================================

The `firebase_instance_id` Flutter package provides a unique identifier for each app instance, allowing for targeted and personalized messaging, analytics, and other Firebase services. This package is essential for Firebase-based applications, as it enables features like Firebase Cloud Messaging (FCM) and Firebase Analytics.

### When to Use This Package

Use the `firebase_instance_id` package when:

* You need a unique identifier for your app instance.
* You want to integrate Firebase services, such as FCM or Firebase Analytics.
* You require a reliable and secure way to identify your app instances.

### Features

The `firebase_instance_id` package provides the following features:

* Unique instance ID generation
* Instance ID refresh and revocation
* Support for Firebase Cloud Messaging (FCM)
* Integration with Firebase Analytics

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Firebase Instance ID Package
=============================================

To use the `firebase_instance_id` package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  firebase_instance_id: ^0.3.4
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:firebase_instance_id/firebase_instance_id.dart';
```
### Step 3: Initialize the Firebase Instance ID

Initialize the Firebase Instance ID in your app's `main` function:
```dart
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();
  runApp(MyApp());
}
```
### Platform-Specific Details

#### Android

Add the following lines to your `AndroidManifest.xml` file:
```xml
<application>
  ...
  <service
    android:name="com.google.firebase.components.ComponentDiscoveryService"
    android:enabled="true"
    android:exported="true" />
  ...
</application>
```
#### iOS

Add the following lines to your `Info.plist` file:
```xml
<key>UIBackgroundModes</key>
<array>
  <string>remote-notification</string>
</array>
```
### Required Configurations and Optimizations

* Make sure to handle instance ID refresh and revocation in your app.
* Use the `firebase_instance_id` package in conjunction with other Firebase services, such as FCM and Firebase Analytics.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:firebase_instance_id/firebase_instance_id.dart';

void main() async {
  // Initialize the Firebase Instance ID
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();

  // Run the app
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _instanceId = '';

  @override
  void initState() {
    super.initState();

    // Get the instance ID
    _getInstanceId();
  }

  Future<void> _getInstanceId() async {
    // Get the instance ID
    String instanceId = await FirebaseInstanceId.instance.getId();

    // Set the instance ID
    setState(() {
      _instanceId = instanceId;
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Real Flutter'),
        ),
        body: Center(
          child: Text('Instance ID: $_instanceId'),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app initializes the Firebase Instance ID in the `main` function.
// 2. The app runs and displays the instance ID on the screen.
// 3. When the instance ID is refreshed or revoked, the app updates the instance ID on the screen.
// 4. The app uses the instance ID to integrate with other Firebase services, such as FCM and Firebase Analytics.

// Summary:
// The `firebase_instance_id` package provides a unique identifier for each app instance, allowing for targeted and personalized messaging, analytics, and other Firebase services. This example demonstrates how to use the package to get the instance ID and display it on the screen.
```

<-- END_MAIN -->