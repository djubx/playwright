<-- START_DESCRIPTION -->

# Flutter Sanity Portable Text Package
=====================================

The `flutter_sanity_portable_text` package is a Flutter library that allows you to render Sanity.io's Portable Text content in your Flutter applications. Portable Text is a JSON-based format for rich text content that can be used across different platforms and devices.

This package is useful when you want to display rich text content in your Flutter app, such as blog posts, articles, or product descriptions, and you want to use Sanity.io as your headless CMS.

Key Features:

* Renders Portable Text content in Flutter
* Supports text, images, and other media types
* Customizable rendering options
* Works on both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_sanity_portable_text` package, you need to add it to your Flutter project's `pubspec.yaml` file:

```yml
dependencies:
  flutter_sanity_portable_text: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Android Configuration

No additional configuration is required for Android.

### iOS Configuration

No additional configuration is required for iOS.

### Using the Package

To use the package, you need to import it in your Dart file:

```dart
import 'package:flutter_sanity_portable_text/flutter_sanity_portable_text.dart';
```

Then, you can use the `PortableText` widget to render your Portable Text content:

```dart
PortableText(
  content: yourPortableTextContent,
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_sanity_portable_text/flutter_sanity_portable_text.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Sanity Portable Text Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Define your Portable Text content
    final portableTextContent = {
      'type': 'doc',
      'content': [
        {
          'type': 'paragraph',
          'content': [
            {
              'type': 'text',
              'value': 'Hello, world!',
            },
          ],
        },
        {
          'type': 'image',
          'attrs': {
            'src': 'https://example.com/image.jpg',
          },
        },
      ],
    };

    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Sanity Portable Text Demo'),
      ),
      body: Center(
        child: PortableText(
          content: portableTextContent,
        ),
      ),
    );
  }
}
```

// This is the main entry point of the app.
// The MyApp widget is the root of the app.
// The MyHomePage widget is the home page of the app.
// The PortableText widget is used to render the Portable Text content.
// The content is defined as a JSON object, which is passed to the PortableText widget.
// The PortableText widget renders the content as a rich text UI component.
// The UI component includes text, images, and other media types.
// The user can interact with the UI component, such as tapping on links or images.

// In summary, this code defines a Flutter app that renders Portable Text content using the flutter_sanity_portable_text package.
// The app includes a home page with a PortableText widget, which renders the content as a rich text UI component.
// The user can interact with the UI component, and the app responds accordingly.

<-- END_MAIN -->