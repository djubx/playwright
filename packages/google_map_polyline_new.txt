<-- START_DESCRIPTION -->

# Google Map Polyline New Flutter Package
=============================================

The `google_map_polyline_new` Flutter package is a powerful tool for creating and managing polylines on Google Maps. It provides a simple and efficient way to draw routes, paths, and other shapes on the map, making it ideal for a wide range of applications, from navigation and logistics to fitness and tourism.

## Key Features

*   Create and manage polylines on Google Maps
*   Support for multiple polyline styles and colors
*   Ability to add, remove, and update polyline points
*   Compatible with both Android and iOS platforms

## When to Use This Package

This package is perfect for any application that requires displaying routes, paths, or shapes on a map. Some examples include:

*   Navigation and logistics apps
*   Fitness and exercise tracking apps
*   Tourism and travel apps
*   Real estate and property mapping apps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
---------------------------

To use the `google_map_polyline_new` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  google_map_polyline_new: ^0.2.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:google_map_polyline_new/google_map_polyline_new.dart';
```

### Step 3: Set Up Google Maps

To use the package, you need to set up Google Maps on your platform. Here are the platform-specific details:

#### Android

Add the following lines to your `AndroidManifest.xml` file:

```xml
<application>
  ...
  <meta-data
    android:name="com.google.android.geo.API_KEY"
    android:value="YOUR_API_KEY" />
</application>
```

Replace `YOUR_API_KEY` with your actual Google Maps API key.

#### iOS

Add the following lines to your `Info.plist` file:

```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
<key>NSLocationAlwaysUsageDescription</key>
<string>This app needs access to location to work properly</string>
```

### Step 4: Create a Google Map Polyline

Create a `GoogleMapPolyline` object and add it to your map:

```dart
GoogleMapPolyline _polyline = GoogleMapPolyline(
  polyline: Polyline(
    polylineId: PolylineId('my_polyline'),
    points: [
      LatLng(37.7749, -122.4194),
      LatLng(37.7859, -122.4364),
    ],
    color: Colors.blue,
    width: 10,
  ),
);
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:google_map_polyline_new/google_map_polyline_new.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Create a Google Map controller
  GoogleMapController _mapController;

  // Create a Google Map polyline
  GoogleMapPolyline _polyline = GoogleMapPolyline(
    polyline: Polyline(
      polylineId: PolylineId('my_polyline'),
      points: [
        LatLng(37.7749, -122.4194),
        LatLng(37.7859, -122.4364),
      ],
      color: Colors.blue,
      width: 10,
    ),
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Google Map Polyline New'),
      ),
      body: GoogleMap(
        // Set the map controller
        onMapCreated: (GoogleMapController controller) {
          _mapController = controller;
        },
        // Set the map initial position
        initialCameraPosition: CameraPosition(
          target: LatLng(37.7749, -122.4194),
          zoom: 12,
        ),
        // Add the polyline to the map
        polylines: _polyline.polyline,
      ),
    );
  }
}

// The application flow:
// 1. The user opens the app and sees a Google Map.
// 2. The map is centered at the initial position (37.7749, -122.4194).
// 3. A polyline is drawn on the map from (37.7749, -122.4194) to (37.7859, -122.4364).
// 4. The polyline is blue and 10 pixels wide.
// 5. The user can zoom in and out of the map and move it around.
// 6. The polyline remains on the map and updates its position accordingly.

// Summary: This code creates a Google Map with a polyline drawn on it.
// The polyline is created using the Google Map Polyline New package.
// The map is centered at a specific position and the polyline is drawn from one point to another.
// The user can interact with the map and the polyline updates its position accordingly.
```

<-- END_MAIN -->