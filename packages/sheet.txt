<-- START_DESCRIPTION -->

# Introduction to the "sheet" Flutter Package
=====================================================

The "sheet" Flutter package is a powerful tool for displaying bottom sheets in Flutter applications. It provides a simple and easy-to-use API for creating and customizing bottom sheets.

## When to Use the "sheet" Package
--------------------------------

The "sheet" package is useful when you need to display a bottom sheet in your Flutter application. This can be used for a variety of purposes, such as:

* Displaying a menu or list of options
* Showing a dialog or alert
* Providing additional information or context
* Creating a custom UI component

## Features of the "sheet" Package
---------------------------------

The "sheet" package provides a number of features, including:

* Support for displaying bottom sheets on both Android and iOS platforms
* Customizable sheet size and position
* Support for displaying sheets with a fixed height or a dynamic height based on the content
* Ability to display sheets with a transparent or opaque background
* Support for displaying sheets with a custom animation

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the "sheet" Package
================================

To use the "sheet" package in your Flutter application, you will need to add it to your `pubspec.yaml` file. You can do this by adding the following line to the `dependencies` section of your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  sheet: ^1.0.0
```

Once you have added the "sheet" package to your `pubspec.yaml` file, you can run `flutter pub get` to install the package.

## Using the "sheet" Package
---------------------------

To use the "sheet" package, you will need to import it into your Dart file. You can do this by adding the following line to the top of your Dart file:

```dart
import 'package:sheet/sheet.dart';
```

Once you have imported the "sheet" package, you can use it to display a bottom sheet. Here is an example of how to display a simple bottom sheet:

```dart
Sheet(
  child: Container(
    height: 200,
    child: Center(
      child: Text('Hello, World!'),
    ),
  ),
)
```

This will display a bottom sheet with a height of 200 pixels and a centered text label.

## Platform-Specific Details
---------------------------

The "sheet" package provides platform-specific details for both Android and iOS platforms.

On Android, the "sheet" package uses the `BottomSheet` widget to display the bottom sheet. This widget is provided by the Android SDK and is used to display a bottom sheet with a fixed height.

On iOS, the "sheet" package uses the `UIActionSheet` widget to display the bottom sheet. This widget is provided by the iOS SDK and is used to display a bottom sheet with a dynamic height based on the content.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:sheet/sheet.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Sheet Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Sheet Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Display the bottom sheet
            Sheet(
              child: Container(
                height: 200,
                child: Center(
                  child: Text('Hello, World!'),
                ),
              ),
            ).show(context);
          },
          child: Text('Show Sheet'),
        ),
      ),
    );
  }
}
```

// This is the main entry point of the application.
// The `MyApp` widget is the root widget of the application.
// It uses the `MaterialApp` widget to provide a material design theme to the application.
// The `MyHomePage` widget is the home page of the application.
// It uses the `Scaffold` widget to provide a basic material design layout to the page.
// The `ElevatedButton` widget is used to display a button that, when pressed, displays the bottom sheet.
// The `Sheet` widget is used to display the bottom sheet.
// It uses the `Container` widget to provide a fixed height to the sheet.
// The `Center` widget is used to center the text label in the sheet.
// The `Text` widget is used to display the text label in the sheet.

// When the button is pressed, the `onPressed` callback is called.
// This callback displays the bottom sheet using the `show` method of the `Sheet` widget.
// The `show` method takes the `context` parameter, which is the build context of the widget.
// The `context` parameter is used to display the sheet in the correct position on the screen.

// The sheet is displayed with a fixed height of 200 pixels.
// The text label is centered in the sheet.
// The sheet is displayed with a transparent background.

// This is the end of the main file example.

<-- END_MAIN -->