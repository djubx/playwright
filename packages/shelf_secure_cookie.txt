<-- START_DESCRIPTION -->

**Shelf Secure Cookie Flutter Package**
=====================================

The shelf_secure_cookie package is a Flutter package that provides a secure way to store and manage cookies in your Flutter application. It uses the shelf library to handle HTTP requests and responses, and provides a simple and easy-to-use API for storing and retrieving cookies.

**When to Use This Package**
---------------------------

You should use this package when you need to store and manage cookies in your Flutter application, especially when you need to handle secure cookies. This package is particularly useful when you need to:

* Store and retrieve cookies securely
* Handle cookie expiration and renewal
* Manage cookie sessions

**Features**
------------

* Secure cookie storage using the shelf library
* Easy-to-use API for storing and retrieving cookies
* Support for cookie expiration and renewal
* Support for cookie sessions

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setup and Usage**
-------------------

To use the shelf_secure_cookie package, you need to add it to your pubspec.yaml file:

```yml
dependencies:
  shelf_secure_cookie: ^1.0.0
```

Then, you need to import the package in your Dart file:

```dart
import 'package:shelf_secure_cookie/shelf_secure_cookie.dart';
```

**Platform-Specific Details**
---------------------------

### Android

On Android, you need to add the following configuration to your AndroidManifest.xml file:

```xml
<application
    ...
    android:usesCleartextTraffic="true"
    ...>
</application>
```

This configuration allows the app to use clear text traffic, which is required for the shelf library to work.

### iOS

On iOS, you need to add the following configuration to your Info.plist file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```

This configuration allows the app to use arbitrary loads, which is required for the shelf library to work.

**Using the Package**
---------------------

To use the package, you need to create a `ShelfSecureCookie` instance:

```dart
ShelfSecureCookie cookie = ShelfSecureCookie(
  // Your cookie name
  'my_cookie',
  // Your cookie value
  'my_cookie_value',
  // Your cookie expiration date
  DateTime.now().add(Duration(days: 30)),
);
```

Then, you can store the cookie using the `store` method:

```dart
await cookie.store();
```

You can retrieve the cookie using the `retrieve` method:

```dart
String cookieValue = await cookie.retrieve();
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:shelf_secure_cookie/shelf_secure_cookie.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shelf Secure Cookie Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  ShelfSecureCookie _cookie;

  @override
  void initState() {
    super.initState();
    _cookie = ShelfSecureCookie(
      'my_cookie',
      'my_cookie_value',
      DateTime.now().add(Duration(days: 30)),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Shelf Secure Cookie Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Cookie Value:',
            ),
            Text(
              _cookie.value,
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _storeCookie,
              child: Text('Store Cookie'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: _retrieveCookie,
              child: Text('Retrieve Cookie'),
            ),
          ],
        ),
      ),
    );
  }

  _storeCookie() async {
    await _cookie.store();
    print('Cookie stored');
  }

  _retrieveCookie() async {
    String cookieValue = await _cookie.retrieve();
    print('Cookie value: $cookieValue');
  }
}

// The app starts by creating a ShelfSecureCookie instance with a name, value, and expiration date.
// The app then displays a UI with two buttons: Store Cookie and Retrieve Cookie.
// When the Store Cookie button is pressed, the app stores the cookie using the store method.
// When the Retrieve Cookie button is pressed, the app retrieves the cookie using the retrieve method and prints the cookie value.
// The app uses the ShelfSecureCookie package to securely store and retrieve the cookie.

```

<-- END_MAIN -->