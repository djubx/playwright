<-- START_DESCRIPTION -->

# Overview of the pdf_viewer_plugin Flutter Package
=====================================================

The `pdf_viewer_plugin` is a Flutter package that allows you to display PDF files within your Flutter application. It provides a simple and efficient way to render PDFs on both Android and iOS platforms.

### When to Use This Package

This package is useful when you need to display PDF files within your Flutter application, such as:

* Displaying user manuals or guides
* Showing receipts or invoices
* Rendering reports or documents

### Features

The `pdf_viewer_plugin` package provides the following features:

* Display PDF files from assets, files, or URLs
* Zoom in and out of the PDF
* Pan across the PDF
* Support for both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the pdf_viewer_plugin Package
=====================================================

### Step 1: Add the Package to Your pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  pdf_viewer_plugin: ^1.0.0
```
Then, run `flutter pub get` to get the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:pdf_viewer_plugin/pdf_viewer_plugin.dart';
```
### Step 3: Create a PDF Viewer

Create a PDF viewer using the `PdfViewer` widget:
```dart
PdfViewer(
  filePath: 'assets/example.pdf',
  onPageChanged: (page) {
    print('Page changed to $page');
  },
)
```
### Platform-Specific Details

#### Android

On Android, you need to add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```
#### iOS

On iOS, you need to add the following line to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:pdf_viewer_plugin/pdf_viewer_plugin.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'PDF Viewer Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _filePath = 'assets/example.pdf';
  int _currentPage = 1;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('PDF Viewer Demo'),
      ),
      body: Center(
        child: PdfViewer(
          filePath: _filePath,
          onPageChanged: (page) {
            setState(() {
              _currentPage = page;
            });
          },
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: <Widget>[
            IconButton(
              icon: Icon(Icons.arrow_back),
              onPressed: () {
                setState(() {
                  _currentPage--;
                });
              },
            ),
            Text('Page $_currentPage'),
            IconButton(
              icon: Icon(Icons.arrow_forward),
              onPressed: () {
                setState(() {
                  _currentPage++;
                });
              },
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and is presented with a PDF viewer.
// 2. The PDF viewer displays the first page of the PDF file.
// 3. The user can navigate to the next page by pressing the forward arrow button.
// 4. The user can navigate to the previous page by pressing the back arrow button.
// 5. The current page number is displayed in the bottom navigation bar.
// 6. When the user navigates to a new page, the page number is updated in the bottom navigation bar.

// Summary:
// This code creates a simple PDF viewer app that allows the user to navigate through a PDF file.
// The app uses the `pdf_viewer_plugin` package to display the PDF file and handle page navigation.
// The app also includes a bottom navigation bar that displays the current page number and allows the user to navigate to the next or previous page.
```

<-- END_MAIN -->