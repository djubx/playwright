<-- START_DESCRIPTION -->

# uc_pdfview Flutter Package
The uc_pdfview package is a powerful and easy-to-use library for displaying PDF files in Flutter applications. It provides a simple and efficient way to render PDF documents, making it an ideal choice for apps that require PDF viewing capabilities.

## Key Features

*   Fast and efficient PDF rendering
*   Support for password-protected PDF files
*   Zooming and panning capabilities
*   Double-tap to zoom in and out
*   Swipe to navigate between pages
*   Support for Android and iOS platforms

## When to Use

The uc_pdfview package is perfect for apps that require PDF viewing capabilities, such as:

*   Document viewers
*   E-book readers
*   Report generators
*   Educational apps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up uc_pdfview

To use the uc_pdfview package, follow these steps:

1.  Add the package to your pubspec.yaml file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  uc_pdfview: ^1.0.0
```

2.  Run `flutter pub get` to install the package.

3.  Import the package in your Dart file:

    ```dart
import 'package:uc_pdfview/uc_pdfview.dart';
```

## Platform-Specific Details

### Android

*   Make sure to add the following permissions to your AndroidManifest.xml file:

    ```xml
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
```

### iOS

*   Add the following lines to your Info.plist file:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```

## Using uc_pdfview

To display a PDF file, use the `UCPdfView` widget:

```dart
UCPdfView(
  filePath: 'path/to/your/file.pdf',
  onPageChanged: (int page) {
    print('Page changed: $page');
  },
  onViewCreated: (UCPdfViewController controller) {
    print('View created');
  },
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:uc_pdfview/uc_pdfview.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'UC Pdf View Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _filePath = 'path/to/your/file.pdf';
  int _currentPage = 1;
  UCPdfViewController _controller;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('UC Pdf View Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Expanded(
              child: UCPdfView(
                filePath: _filePath,
                onPageChanged: (int page) {
                  setState(() {
                    _currentPage = page;
                  });
                },
                onViewCreated: (UCPdfViewController controller) {
                  _controller = controller;
                },
              ),
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                ElevatedButton(
                  onPressed: () {
                    _controller.previousPage();
                  },
                  child: Text('Previous Page'),
                ),
                SizedBox(width: 10),
                ElevatedButton(
                  onPressed: () {
                    _controller.nextPage();
                  },
                  child: Text('Next Page'),
                ),
              ],
            ),
            Text('Current Page: $_currentPage'),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a PDF view.
// 2. The PDF view displays the first page of the PDF file.
// 3. The user can swipe left or right to navigate between pages.
// 4. The user can also use the "Previous Page" and "Next Page" buttons to navigate.
// 5. The current page number is displayed at the bottom of the screen.
// 6. When the user navigates to a new page, the current page number is updated.

// This code demonstrates the use of the uc_pdfview package to display a PDF file.
// It also shows how to navigate between pages and display the current page number.
```

<-- END_MAIN -->