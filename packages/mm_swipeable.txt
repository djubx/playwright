<-- START_DESCRIPTION -->

# mm_swipeable Flutter Package
================================

The `mm_swipeable` Flutter package provides a swipeable widget that can be used to create swipe-based interactions in your app. This package is ideal for creating swipe-to-dismiss or swipe-to-reveal actions.

## Features

*   Swipeable widget with customizable swipe directions
*   Supports both horizontal and vertical swipe directions
*   Can be used to create swipe-to-dismiss or swipe-to-reveal actions
*   Customizable swipe threshold and animation duration

## When to Use

*   Use this package when you want to create swipe-based interactions in your app, such as swipe-to-dismiss or swipe-to-reveal actions.
*   Use this package when you want to provide a customizable swipe experience for your users.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Setup

To use the `mm_swipeable` package, add it to your `pubspec.yaml` file:

```yml
dependencies:
  mm_swipeable: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Basic Usage

To use the `MmSwipeable` widget, simply wrap your child widget with it:

```dart
MmSwipeable(
  child: Container(
    height: 100,
    color: Colors.blue,
  ),
)
```

## Customizing Swipe Direction

You can customize the swipe direction by using the `direction` property:

```dart
MmSwipeable(
  direction: MmSwipeDirection.horizontal,
  child: Container(
    height: 100,
    color: Colors.blue,
  ),
)
```

## Customizing Swipe Threshold

You can customize the swipe threshold by using the `threshold` property:

```dart
MmSwipeable(
  threshold: 0.5,
  child: Container(
    height: 100,
    color: Colors.blue,
  ),
)
```

## Customizing Animation Duration

You can customize the animation duration by using the `animationDuration` property:

```dart
MmSwipeable(
  animationDuration: Duration(milliseconds: 500),
  child: Container(
    height: 100,
    color: Colors.blue,
  ),
)
```

## Platform-Specific Details

*   On Android, the `MmSwipeable` widget uses the `GestureDetector` widget to detect swipe gestures.
*   On iOS, the `MmSwipeable` widget uses the `UISwipeGestureRecognizer` to detect swipe gestures.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:mm_swipeable/mm_swipeable.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'MmSwipeable Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('MmSwipeable Demo'),
      ),
      body: Center(
        child: MmSwipeable(
          // Customize swipe direction
          direction: MmSwipeDirection.horizontal,
          // Customize swipe threshold
          threshold: 0.5,
          // Customize animation duration
          animationDuration: Duration(milliseconds: 500),
          child: Container(
            height: 100,
            color: Colors.blue,
            child: Center(
              child: Text('Swipe me!'),
            ),
          ),
        ),
      ),
    );
  }
}

// The app starts by running the main function, which runs the MyApp widget.
// The MyApp widget builds a MaterialApp with a title and a theme.
// The home of the MaterialApp is the MyHomePage widget.
// The MyHomePage widget builds a Scaffold with an AppBar and a body.
// The body of the Scaffold is a Center widget that contains the MmSwipeable widget.
// The MmSwipeable widget is customized with a horizontal swipe direction, a swipe threshold of 0.5, and an animation duration of 500 milliseconds.
// The child of the MmSwipeable widget is a Container with a height of 100, a blue color, and a centered Text widget that says 'Swipe me!'.
// When the user swipes the MmSwipeable widget, it will animate the swipe action based on the customized properties.

```

<-- END_MAIN -->