<-- START_DESCRIPTION -->

# Forex Conversion Package for Flutter
=====================================

The `forex_conversion` package is a useful tool for Flutter developers who need to handle currency conversions in their applications. This package provides an easy-to-use API for converting between different currencies and staying up-to-date with the latest exchange rates.

### When to Use This Package

This package is perfect for applications that require:

* Currency conversion for e-commerce transactions
* Real-time exchange rate updates for financial apps
* Simple and efficient currency conversion for travel or tourism apps

### Features

* Supports over 150 currencies
* Real-time exchange rate updates
* Easy-to-use API for converting between currencies
* Offline support for storing exchange rates

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Forex Conversion Package
=====================================

To use the `forex_conversion` package in your Flutter application, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  forex_conversion: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:forex_conversion/forex_conversion.dart';
```
### Step 3: Initialize the Package

Initialize the package with your API key (if required):
```dart
ForexConversion forex = ForexConversion(apiKey: 'YOUR_API_KEY');
```
### Platform-Specific Details

* For Android, add the following line to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
```
* For iOS, add the following line to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```
### Required Configurations

* Make sure to handle errors and exceptions properly
* Use the `async/await` syntax to handle asynchronous operations

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:forex_conversion/forex_conversion.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Forex Conversion Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  ForexConversion forex = ForexConversion(apiKey: 'YOUR_API_KEY');
  String _fromCurrency = 'USD';
  String _toCurrency = 'EUR';
  double _amount = 100.0;
  double _result = 0.0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Forex Conversion Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              decoration: InputDecoration(
                labelText: 'From Currency',
              ),
              onChanged: (value) {
                setState(() {
                  _fromCurrency = value;
                });
              },
            ),
            TextField(
              decoration: InputDecoration(
                labelText: 'To Currency',
              ),
              onChanged: (value) {
                setState(() {
                  _toCurrency = value;
                });
              },
            ),
            TextField(
              decoration: InputDecoration(
                labelText: 'Amount',
              ),
              onChanged: (value) {
                setState(() {
                  _amount = double.parse(value);
                });
              },
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                // Convert the amount from the from currency to the to currency
                _result = await forex.convert(
                  from: _fromCurrency,
                  to: _toCurrency,
                  amount: _amount,
                );
                setState(() {});
              },
              child: Text('Convert'),
            ),
            SizedBox(height: 20),
            Text(
              'Result: $_result',
              style: TextStyle(fontSize: 24),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by initializing the ForexConversion object with the API key.
// The user is then presented with a form to input the from currency, to currency, and amount.
// When the user clicks the convert button, the app uses the ForexConversion object to convert the amount from the from currency to the to currency.
// The result is then displayed to the user.
// The app uses the async/await syntax to handle the asynchronous operation of converting the currency.
// The app also handles errors and exceptions properly.
```

<-- END_MAIN -->