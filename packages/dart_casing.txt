<-- START_DESCRIPTION -->

# Introduction to dart_casing
The dart_casing package is a useful library for Flutter developers that simplifies the process of converting text between different casing styles. It provides a simple and efficient way to convert text to and from camel case, pascal case, snake case, and more.

## When to Use dart_casing
The dart_casing package is particularly useful when working with APIs or data storage systems that require specific casing conventions. For example, when sending data to a server that expects JSON keys in snake case, dart_casing can be used to convert the keys from camel case to snake case.

## Features
The dart_casing package provides the following features:

*   Conversion to and from camel case, pascal case, snake case, and more
*   Support for custom casing styles
*   Simple and efficient API

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up dart_casing
To use the dart_casing package in your Flutter project, follow these steps:

1.  Add the dart_casing package to your pubspec.yaml file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  dart_casing: ^1.0.0
```

2.  Run `flutter pub get` to install the package.

## Using dart_casing
To use the dart_casing package, import it into your Dart file:

```dart
import 'package:dart_casing/dart_casing.dart';
```

You can then use the `toCase` method to convert text between different casing styles. For example:

```dart
void main() {
  String text = 'hello_world';
  print(text.toCase(CaseStyle.camel)); // Output: helloWorld
}
```

### Platform-Specific Details
The dart_casing package works on all platforms supported by Flutter, including Android and iOS. No platform-specific configurations or optimizations are required.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:dart_casing/dart_casing.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Dart Casing Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _text = '';
  CaseStyle _caseStyle = CaseStyle.camel;

  void _convertText() {
    setState(() {
      _text = _text.toCase(_caseStyle);
    });
  }

  void _updateCaseStyle(CaseStyle caseStyle) {
    setState(() {
      _caseStyle = caseStyle;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Dart Casing Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              onChanged: (text) {
                setState(() {
                  _text = text;
                });
              },
            ),
            SizedBox(height: 20),
            DropdownButton<CaseStyle>(
              value: _caseStyle,
              onChanged: _updateCaseStyle,
              items: [
                DropdownMenuItem(
                  child: Text('Camel Case'),
                  value: CaseStyle.camel,
                ),
                DropdownMenuItem(
                  child: Text('Pascal Case'),
                  value: CaseStyle.pascal,
                ),
                DropdownMenuItem(
                  child: Text('Snake Case'),
                  value: CaseStyle.snake,
                ),
              ],
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _convertText,
              child: Text('Convert Text'),
            ),
            SizedBox(height: 20),
            Text(_text),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters text into the TextField.
// 2. The user selects a casing style from the DropdownButton.
// 3. The user clicks the "Convert Text" button.
// 4. The _convertText method is called, which converts the text to the selected casing style.
// 5. The converted text is displayed below the button.

// In summary, this application takes user input, allows the user to select a casing style, and then converts the input text to the selected casing style.
```

<-- END_MAIN -->