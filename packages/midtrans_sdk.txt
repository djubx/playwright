Here's a detailed technical blog on the "midtrans_sdk" Flutter package, structured as requested.

<!-- START_DESCRIPTION -->
# Midtrans SDK Flutter Package

The **midtrans_sdk** Flutter package is a powerful tool for integrating payment processing into Flutter applications. It provides a seamless way to handle various payment methods, including credit cards, bank transfers, and e-wallets, making it an essential package for developers looking to implement payment solutions in their apps.

## When to Use This Package

You should consider using the **midtrans_sdk** package when:
- You are developing an e-commerce application that requires payment processing.
- You need to support multiple payment methods to cater to a diverse user base.
- You want to ensure secure and reliable transactions within your Flutter app.

## Features

- **Multiple Payment Methods**: Supports various payment options, including credit cards, bank transfers, and e-wallets.
- **Easy Integration**: Simple setup process with clear documentation.
- **Secure Transactions**: Implements industry-standard security measures to protect user data.
- **Customizable UI**: Allows developers to customize the payment interface to match their app's design.

Overall, the **midtrans_sdk** package simplifies the payment integration process, making it easier for developers to focus on building their applications while ensuring a smooth payment experience for users.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the Midtrans SDK

In this tutorial, we will walk through the setup process for the **midtrans_sdk** package and demonstrate how to use it in a Flutter application.

## Step 1: Add Dependency

To get started, add the **midtrans_sdk** package to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  midtrans_sdk: ^latest_version
```

Make sure to replace `^latest_version` with the latest version of the package.

## Step 2: Platform-Specific Configuration

### Android Configuration

1. **Update AndroidManifest.xml**: Open `android/app/src/main/AndroidManifest.xml` and add the following permissions and metadata:

   ```xml
   <uses-permission android:name="android.permission.INTERNET"/>
   <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
   
   <application>
       ...
       <meta-data
           android:name="midtrans_sdk_client_key"
           android:value="YOUR_CLIENT_KEY"/>
       <meta-data
           android:name="midtrans_sdk_base_url"
           android:value="https://api.midtrans.com/v2/"/>
   </application>
   ```

   Replace `YOUR_CLIENT_KEY` with your actual Midtrans client key.

### iOS Configuration

1. **Update Info.plist**: Open `ios/Runner/Info.plist` and add the following:

   ```xml
   <key>NSAppTransportSecurity</key>
   <dict>
       <key>NSAllowsArbitraryLoads</key>
       <true/>
   </dict>
   ```

2. **Add URL Schemes**: In the same `Info.plist`, add your URL scheme for handling payment callbacks.

## Step 3: Initialize the SDK

In your Flutter application, you need to initialize the Midtrans SDK. This is typically done in the main function or the first screen of your app.

```dart
import 'package:flutter/material.dart';
import 'package:midtrans_sdk/midtrans_sdk.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Midtrans SDK Demo',
      home: HomeScreen(),
    );
  }
}
```

## Step 4: Implement Payment Process

You can now implement the payment process in your application. Hereâ€™s a simple example of how to initiate a payment:

```dart
class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Midtrans Payment')),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Start the payment process
            initiatePayment();
          },
          child: Text('Pay Now'),
        ),
      ),
    );
  }

  void initiatePayment() async {
    // Create a payment request
    final paymentRequest = PaymentRequest(
      transactionDetails: TransactionDetails(
        orderId: 'order-id-123',
        grossAmount: 10000,
      ),
      customerDetails: CustomerDetails(
        firstName: 'John',
        lastName: 'Doe',
        email: 'john.doe@example.com',
      ),
    );

    // Call the Midtrans SDK to process the payment
    final result = await MidtransSDK.startPayment(paymentRequest);

    // Handle the payment result
    if (result.isSuccess) {
      // Payment successful
      print('Payment successful: ${result.transactionId}');
    } else {
      // Payment failed
      print('Payment failed: ${result.message}');
    }
  }
}
```

This code sets up a simple Flutter application with a button that initiates a payment process when pressed. The `initiatePayment` function creates a payment request and calls the Midtrans SDK to process the payment.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example: Midtrans SDK in Flutter

```dart
import 'package:flutter/material.dart';
import 'package:midtrans_sdk/midtrans_sdk.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Midtrans SDK Demo',
      home: HomeScreen(),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Midtrans Payment')),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Start the payment process
            initiatePayment();
          },
          child: Text('Pay Now'),
        ),
      ),
    );
  }

  void initiatePayment() async {
    // Create a payment request
    final paymentRequest = PaymentRequest(
      transactionDetails: TransactionDetails(
        orderId: 'order-id-123', // Unique order ID
        grossAmount: 10000, // Amount to be charged
      ),
      customerDetails: CustomerDetails(
        firstName: 'John', // Customer's first name
        lastName: 'Doe', // Customer's last name
        email: 'john.doe@example.com', // Customer's email
      ),
    );

    // Call the Midtrans SDK to process the payment
    final result = await MidtransSDK.startPayment(paymentRequest);

    // Handle the payment result
    if (result.isSuccess) {
      // Payment successful
      print('Payment successful: ${result.transactionId}');
    } else {
      // Payment failed
      print('Payment failed: ${result.message}');
    }
  }
}

// Application Flow Explanation:
// 1. The app starts and displays the HomeScreen.
// 2. The HomeScreen contains a button labeled "Pay Now."
// 3. When the button is pressed, the initiatePayment function is called.
// 4. A PaymentRequest object is created with transaction and customer details.
// 5. The Midtrans SDK is called to start the payment process.
// 6. The result of the payment is checked:
//    - If successful, the transaction ID is printed.
//    - If failed, an error message is printed.
```
<!-- END_MAIN -->

In this blog, we covered the **midtrans_sdk** Flutter package, including its description, setup tutorial, and a complete example. This package provides a robust solution for integrating payment processing into Flutter applications, ensuring a smooth and secure transaction experience for users.