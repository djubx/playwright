<-- START_DESCRIPTION -->

# Flutter File View Package
==========================

The `flutter_file_view` package is a powerful tool for viewing and managing files within a Flutter application. It provides a simple and efficient way to display files of various types, including images, videos, and documents.

## When to Use This Package
---------------------------

This package is ideal for applications that require file viewing capabilities, such as:

* File managers
* Document viewers
* Image galleries
* Video players

## Features
------------

* Supports multiple file types, including images, videos, and documents
* Provides a customizable file viewer with zoom and pan capabilities
* Allows for file management, including deletion and renaming
* Works on both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_file_view` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_file_view: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:flutter_file_view/flutter_file_view.dart';
```
## Platform-Specific Details
---------------------------

### Android

* Add the following permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
```
* Use the `FlutterFileView` widget to display files.

### iOS

* Add the following permission to your `Info.plist` file:
```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library to display files.</string>
```
* Use the `FlutterFileView` widget to display files.

## Configurations and Optimizations
------------------------------------

* Use the `FlutterFileViewOptions` class to customize the file viewer.
* Use the `FlutterFileViewManager` class to manage files.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_file_view/flutter_file_view.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter File View Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<File> _files = [];

  @override
  void initState() {
    super.initState();
    _loadFiles();
  }

  Future<void> _loadFiles() async {
    // Load files from device storage
    final files = await FlutterFileViewManager.getFiles();
    setState(() {
      _files = files;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter File View Demo'),
      ),
      body: ListView.builder(
        itemCount: _files.length,
        itemBuilder: (context, index) {
          final file = _files[index];
          return ListTile(
            title: Text(file.name),
            onTap: () {
              // Open file viewer
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => FileViewer(file)),
              );
            },
          );
        },
      ),
    );
  }
}

class FileViewer extends StatelessWidget {
  final File _file;

  FileViewer(this._file);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(_file.name),
      ),
      body: Center(
        child: FlutterFileView(
          file: _file,
          options: FlutterFileViewOptions(
            zoomEnabled: true,
            panEnabled: true,
          ),
        ),
      ),
    );
  }
}
```

// This code demonstrates the use of the `flutter_file_view` package to display a list of files and open a file viewer when a file is tapped.
// The `MyHomePage` widget loads a list of files from device storage using the `FlutterFileViewManager` class.
// The `FileViewer` widget displays a file using the `FlutterFileView` widget, with options to enable zoom and pan.
// When a file is tapped, the `FileViewer` widget is pushed onto the navigation stack, displaying the file.

<-- END_MAIN -->