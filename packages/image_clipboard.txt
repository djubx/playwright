<-- START_DESCRIPTION -->

# Image Clipboard Flutter Package
=====================================

The `image_clipboard` Flutter package allows users to copy and paste images from the clipboard. This package is useful when you want to enable users to share images between different applications or within the same application.

### Features

*   Supports copying and pasting images from the clipboard
*   Works on both Android and iOS platforms
*   Provides a simple and easy-to-use API

### When to Use

You can use this package in scenarios where users need to share images, such as:

*   Social media applications
*   Image editing applications
*   Chat applications

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Setup

To use the `image_clipboard` package, you need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  image_clipboard: ^1.0.0
```

Then, run `flutter pub get` to get the package.

## Android Configuration

For Android, you need to add the following configuration to your `AndroidManifest.xml` file:

```xml
<application
    ...
    android:hardwareAccelerated="true"
    ...
>
```

## iOS Configuration

For iOS, you need to add the following configuration to your `Info.plist` file:

```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs photo library access to paste images</string>
```

## Usage

To use the package, you can import it and use the `ImageClipboard` class:

```dart
import 'package:image_clipboard/image_clipboard.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Image Clipboard Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            final image = await ImageClipboard.getImage();
            if (image != null) {
              // Use the image
            }
          },
          child: Text('Paste Image'),
        ),
      ),
    );
  }
}
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'dart:typed_data';
import 'package:flutter/material.dart';
import 'package:image_clipboard/image_clipboard.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Image Clipboard Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  Uint8List? _image;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Image Clipboard Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            if (_image != null)
              Image.memory(
                _image!,
                width: 200,
                height: 200,
              ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                // Get the image from the clipboard
                final image = await ImageClipboard.getImage();
                if (image != null) {
                  setState(() {
                    _image = image;
                  });
                }
              },
              child: Text('Paste Image'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: () async {
                // Copy the image to the clipboard
                await ImageClipboard.copyImage(_image);
              },
              child: Text('Copy Image'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a screen that has two buttons: "Paste Image" and "Copy Image".
// 2. When the user clicks the "Paste Image" button, the app gets the image from the clipboard using the ImageClipboard.getImage() method.
// 3. If an image is found in the clipboard, it is displayed on the screen.
// 4. When the user clicks the "Copy Image" button, the app copies the displayed image to the clipboard using the ImageClipboard.copyImage() method.
// 5. The user can then go to another app and paste the image from the clipboard.

// The ImageClipboard package provides a simple and easy-to-use API for working with images in the clipboard.
// It supports both Android and iOS platforms, making it a great choice for cross-platform apps.
```

<-- END_MAIN -->