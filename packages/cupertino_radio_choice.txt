<-- START_DESCRIPTION -->

# Cupertino Radio Choice Package
================================

The Cupertino Radio Choice package is a Flutter package that provides a Cupertino-style radio button widget. It is designed to be used in iOS-style apps, but can also be used in Android apps.

## Features

* Cupertino-style radio button design
* Supports multiple radio buttons in a group
* Can be used in both iOS and Android apps

## When to Use

This package is ideal for apps that require a Cupertino-style radio button design. It is also useful for apps that need to support multiple radio buttons in a group.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
================

## Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  cupertino_radio_choice: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:cupertino_radio_choice/cupertino_radio_choice.dart';
```
## Step 3: Use the CupertinoRadioChoice Widget

Use the `CupertinoRadioChoice` widget in your app:
```dart
CupertinoRadioChoice(
  choices: [
    'Option 1',
    'Option 2',
    'Option 3',
  ],
  onChanged: (value) {
    print('Selected value: $value');
  },
)
```
## Platform-Specific Details

* On iOS, the radio button design is based on the Cupertino design language.
* On Android, the radio button design is based on the Material design language.

## Required Configurations or Optimizations

* None required.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:cupertino_radio_choice/cupertino_radio_choice.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _selectedValue;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Cupertino Radio Choice Demo'),
        ),
        body: Center(
          child: CupertinoRadioChoice(
            choices: [
              'Option 1',
              'Option 2',
              'Option 3',
            ],
            onChanged: (value) {
              setState(() {
                _selectedValue = value;
              });
              print('Selected value: $value');
            },
          ),
        ),
        bottomNavigationBar: BottomAppBar(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text('Selected value: $_selectedValue'),
            ],
          ),
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates an instance of the RealFlutter widget.
// The RealFlutter widget is a stateful widget, which means it has a state that can change over time.
// The state is stored in the _RealFlutterState class, which extends the State class.
// The build method is called when the widget is first created, and it returns a MaterialApp widget.
// The MaterialApp widget is the top-level widget in the app, and it contains a Scaffold widget.
// The Scaffold widget provides a basic material design layout, with a top app bar and a bottom navigation bar.
// The CupertinoRadioChoice widget is used to display a list of radio buttons, and it is centered in the screen.
// When a radio button is selected, the onChanged callback is called, which updates the state of the app.
// The state is updated by calling the setState method, which notifies the framework that the state has changed.
// The framework then rebuilds the widget tree, using the new state.
// The selected value is displayed in the bottom navigation bar.

```

<-- END_MAIN -->