<-- START_DESCRIPTION -->

# Overview of the "spa" Flutter Package
=====================================

The "spa" package is a Flutter package that allows you to easily implement Single-Page Application (SPA) routing in your Flutter app. It provides a simple and efficient way to manage routes and navigate between different screens in your app.

## When to Use This Package
---------------------------

You should use this package when you want to create a Flutter app that has multiple screens, but you don't want to use the traditional `Navigator` class to manage routes. This package is particularly useful when you want to create a web-like experience in your Flutter app, where users can navigate between different screens without having to reload the entire app.

## Features
------------

*   Simple and efficient routing system
*   Supports multiple routes and sub-routes
*   Automatic handling of back button and app bar
*   Customizable route animations

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the "spa" Package
=============================

To use the "spa" package in your Flutter app, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  spa: ^1.0.0
```

Then, run `flutter pub get` in your terminal to get the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:spa/spa.dart';
```

### Step 3: Create Routes

Create routes using the `SpaRoute` class:

```dart
SpaRoute homeRoute = SpaRoute(
  path: '/',
  builder: (context) => HomeScreen(),
);

SpaRoute aboutRoute = SpaRoute(
  path: '/about',
  builder: (context) => AboutScreen(),
);
```

### Step 4: Create the Spa App

Create the Spa app using the `SpaApp` class:

```dart
SpaApp(
  title: 'My Spa App',
  home: homeRoute,
  routes: [
    homeRoute,
    aboutRoute,
  ],
);
```

### Platform-Specific Details

*   For Android, you need to add the following line to your `AndroidManifest.xml` file:

    ```xml
<application
  ...
  android:usesCleartextTraffic="true"
  ...>
```

*   For iOS, you need to add the following line to your `Info.plist` file:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

### Required Configurations or Optimizations

*   You can customize the route animations by using the `SpaRouteAnimation` class.
*   You can handle the back button and app bar automatically by using the `SpaAppBar` class.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:spa/spa.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create routes
    SpaRoute homeRoute = SpaRoute(
      path: '/',
      builder: (context) => HomeScreen(),
    );

    SpaRoute aboutRoute = SpaRoute(
      path: '/about',
      builder: (context) => AboutScreen(),
    );

    // Create the Spa app
    return SpaApp(
      title: 'My Spa App',
      home: homeRoute,
      routes: [
        homeRoute,
        aboutRoute,
      ],
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a button to navigate to the about screen
    return Scaffold(
      appBar: SpaAppBar(
        title: Text('Home Screen'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Navigate to the about screen
            SpaNavigator.pushNamed(context, '/about');
          },
          child: Text('Go to About Screen'),
        ),
      ),
    );
  }
}

class AboutScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a button to navigate back to the home screen
    return Scaffold(
      appBar: SpaAppBar(
        title: Text('About Screen'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Navigate back to the home screen
            SpaNavigator.pop(context);
          },
          child: Text('Go Back to Home Screen'),
        ),
      ),
    );
  }
}

// The app starts by creating the Spa app with the home route and other routes.
// When the user navigates to a new route, the SpaNavigator pushes the new route onto the navigator.
// When the user navigates back, the SpaNavigator pops the current route off the navigator.
// The SpaAppBar automatically handles the back button and app bar for each screen.
```

<-- END_MAIN -->