<-- START_DESCRIPTION -->

# Circular Profile Avatar Package
=====================================

The `circular_profile_avatar` package is a Flutter package that allows you to create circular profile avatars with ease. It provides a simple and customizable way to display profile pictures in your Flutter app.

### When to Use This Package

This package is perfect for any Flutter app that requires a profile picture feature, such as:

* Social media apps
* Chat apps
* Profile management apps
* Gaming apps

### Features

* Customizable avatar size and border width
* Support for different image sources (e.g., network, asset, file)
* Placeholder image support
* Error handling for image loading

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Package
=============================================

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  circular_profile_avatar: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:circular_profile_avatar/circular_profile_avatar.dart';
```
### Step 3: Use the Package

Create a `CircularProfileAvatar` widget and pass in the required parameters:
```dart
CircularProfileAvatar(
  child: Image.network('https://example.com/profile_picture.jpg'),
  radius: 50,
  borderWidth: 2,
  borderColor: Colors.white,
)
```
### Platform-Specific Details

* For Android, make sure to add the `INTERNET` permission to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
```
* For iOS, make sure to add the `NSAppTransportSecurity` key to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:circular_profile_avatar/circular_profile_avatar.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Circular Profile Avatar Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Circular Profile Avatar Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Create a CircularProfileAvatar widget with a network image
              CircularProfileAvatar(
                child: Image.network('https://example.com/profile_picture.jpg'),
                radius: 50,
                borderWidth: 2,
                borderColor: Colors.white,
              ),
              SizedBox(height: 20),
              // Create a CircularProfileAvatar widget with an asset image
              CircularProfileAvatar(
                child: Image.asset('assets/profile_picture.png'),
                radius: 50,
                borderWidth: 2,
                borderColor: Colors.white,
              ),
              SizedBox(height: 20),
              // Create a CircularProfileAvatar widget with a placeholder image
              CircularProfileAvatar(
                child: Image.asset('assets/placeholder.png'),
                radius: 50,
                borderWidth: 2,
                borderColor: Colors.white,
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app and is presented with a screen containing three CircularProfileAvatar widgets.
// 2. Each CircularProfileAvatar widget displays a different type of image (network, asset, placeholder).
// 3. The user can view the different images by scrolling through the screen.
// 4. The CircularProfileAvatar widgets are customizable, allowing the user to change the border width, border color, and radius.
// 5. The app demonstrates the use of the CircularProfileAvatar package to display profile pictures in a Flutter app.

// Final summary: This code demonstrates the use of the CircularProfileAvatar package to display profile pictures in a Flutter app. It shows how to create a CircularProfileAvatar widget and customize its appearance. The app also demonstrates the use of different image sources (network, asset, placeholder) and error handling for image loading.
```
<-- END_MAIN -->