<-- START_DESCRIPTION -->

# File Picker Pro Flutter Package
=====================================

The `file_picker_pro` Flutter package is a powerful and flexible file picker that allows users to select files from their device's storage. It provides a simple and intuitive API for developers to integrate file picking functionality into their Flutter apps.

### When to Use

This package is useful when you need to allow users to select files from their device's storage, such as:

* Uploading files to a server
* Processing files locally
* Sharing files with other apps

### Features

* Supports picking multiple files at once
* Allows filtering by file type (e.g., images, videos, documents)
* Provides a customizable UI for the file picker
* Supports Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the Package
=====================================

### Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  file_picker_pro: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:file_picker_pro/file_picker_pro.dart';
```
### Step 3: Use the Package

Create an instance of the `FilePickerPro` class and call the `pickFiles` method:
```dart
FilePickerPro filePicker = FilePickerPro();
List<File> files = await filePicker.pickFiles();
```
You can customize the file picker by passing options to the `pickFiles` method:
```dart
List<File> files = await filePicker.pickFiles(
  allowMultiple: true,
  type: FileType.image,
);
```
### Platform-Specific Details

#### Android

* Make sure to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```
* If you're targeting Android 10 or later, you need to add the following code to your `AndroidManifest.xml` file:
```xml
<application
  ...
  android:requestLegacyExternalStorage="true"
>
```
#### iOS

* Make sure to add the following key to your `Info.plist` file:
```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:file_picker_pro/file_picker_pro.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'File Picker Pro Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<File> _files = [];

  void _pickFiles() async {
    // Create an instance of the FilePickerPro class
    FilePickerPro filePicker = FilePickerPro();

    // Call the pickFiles method to open the file picker
    List<File> files = await filePicker.pickFiles(
      // Allow multiple files to be picked
      allowMultiple: true,
      // Filter by file type (in this case, images)
      type: FileType.image,
    );

    // Update the UI with the picked files
    setState(() {
      _files = files;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('File Picker Pro Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Display the picked files
            Expanded(
              child: ListView.builder(
                itemCount: _files.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(_files[index].name),
                  );
                },
              ),
            ),
            // Button to open the file picker
            ElevatedButton(
              onPressed: _pickFiles,
              child: Text('Pick Files'),
            ),
          ],
        ),
      ),
    );
  }
}
```

// This is the main entry point of the app.
// The MyApp widget is the root of the app's widget tree.
// The MyHomePage widget is the home page of the app.
// The _MyHomePageState class is the state of the MyHomePage widget.
// The _pickFiles method is called when the user presses the "Pick Files" button.
// This method opens the file picker and allows the user to select files.
// The picked files are then displayed in the ListView.
// The app uses the FilePickerPro package to open the file picker.
// The package provides a simple and intuitive API for developers to integrate file picking functionality into their Flutter apps.

<-- END_MAIN -->