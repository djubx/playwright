<-- START_DESCRIPTION -->

# libre_doc_converter Flutter Package
=====================================

The libre_doc_converter Flutter package is a powerful tool for converting various document formats to PDF, image, or text. It supports a wide range of input formats, including Word, Excel, PowerPoint, and more. This package is ideal for applications that require document conversion, such as document viewers, editors, or sharing platforms.

### Key Features

*   Convert various document formats to PDF, image, or text
*   Support for Word, Excel, PowerPoint, and more input formats
*   Platform-specific optimizations for Android and iOS
*   Easy-to-use API for seamless integration into Flutter applications

### When to Use

Use the libre_doc_converter package when you need to convert documents to different formats in your Flutter application. This package is perfect for:

*   Document viewers: Convert documents to PDF or image for easy viewing
*   Document editors: Convert documents to text for editing
*   Sharing platforms: Convert documents to PDF or image for sharing

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
================

To use the libre_doc_converter package, follow these steps:

### Step 1: Add the Package to Your pubspec.yaml File

```yml
dependencies:
  flutter:
    sdk: flutter
  libre_doc_converter: ^1.0.0
```

### Step 2: Import the Package in Your Dart File

```dart
import 'package:libre_doc_converter/libre_doc_converter.dart';
```

### Step 3: Convert a Document

```dart
void _convertDocument() async {
  // Create a new instance of the RealFlutter class
  RealFlutter realFlutter = RealFlutter();

  // Set the input file path
  String inputFile = 'path/to/input/file.docx';

  // Set the output file path
  String outputFile = 'path/to/output/file.pdf';

  // Convert the document
  await realFlutter.convertDocument(inputFile, outputFile);
}
```

### Platform-Specific Details

#### Android

*   Add the following permissions to your AndroidManifest.xml file:

    ```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```

*   Use the `android` package to access Android-specific features:

    ```dart
import 'package:libre_doc_converter/android.dart';
```

#### iOS

*   Add the following permissions to your Info.plist file:

    ```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to the photo library to convert documents</string>
```

*   Use the `ios` package to access iOS-specific features:

    ```dart
import 'package:libre_doc_converter/ios.dart';
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:libre_doc_converter/libre_doc_converter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Document Converter',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // Create a new instance of the RealFlutter class
  RealFlutter realFlutter = RealFlutter();

  // Set the input file path
  String inputFile = 'path/to/input/file.docx';

  // Set the output file path
  String outputFile = 'path/to/output/file.pdf';

  void _convertDocument() async {
    // Convert the document
    await realFlutter.convertDocument(inputFile, outputFile);

    // Show a snackbar to confirm the conversion
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text('Document converted successfully!'),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Document Converter'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _convertDocument,
          child: Text('Convert Document'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Convert Document" button.
// 2. The _convertDocument function is called.
// 3. The RealFlutter class is used to convert the document.
// 4. The converted document is saved to the output file path.
// 5. A snackbar is shown to confirm the conversion.

// This code demonstrates the key features of the libre_doc_converter package,
// including document conversion and platform-specific optimizations.

// The RealFlutter class provides a simple and easy-to-use API for converting
// documents, making it perfect for applications that require document conversion.

// By using the libre_doc_converter package, developers can easily add document
// conversion capabilities to their applications, without having to worry about
// the underlying complexities of document conversion.
```

<-- END_MAIN -->