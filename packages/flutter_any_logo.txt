<-- START_DESCRIPTION -->
# Flutter Any Logo Package
================================

The `flutter_any_logo` package is a powerful tool for Flutter developers to easily display and customize logos in their applications. With this package, you can display logos from various sources, including network URLs, assets, and even base64 encoded strings.

## Features

*   Display logos from network URLs, assets, and base64 encoded strings
*   Customize logo size, color, and padding
*   Supports various image formats, including PNG, JPEG, and SVG

## When to Use

The `flutter_any_logo` package is perfect for applications that require displaying logos, such as:

*   E-commerce apps displaying product logos
*   Social media apps displaying user profile logos
*   Business apps displaying company logos

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->
# Tutorial
================

## Setup

To use the `flutter_any_logo` package, add it to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_any_logo: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Basic Usage

To display a logo, use the `AnyLogo` widget:

```dart
import 'package:flutter_any_logo/flutter_any_logo.dart';

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return AnyLogo(
      logo: 'https://example.com/logo.png',
      size: 100,
    );
  }
}
```

## Customization

You can customize the logo size, color, and padding using the `size`, `color`, and `padding` properties:

```dart
AnyLogo(
  logo: 'https://example.com/logo.png',
  size: 100,
  color: Colors.blue,
  padding: EdgeInsets.all(10),
)
```

## Platform-Specific Details

### Android

On Android, you need to add the `android.permission.INTERNET` permission to your `AndroidManifest.xml` file to display logos from network URLs:

```xml
<uses-permission android:name="android.permission.INTERNET" />
```

### iOS

On iOS, you need to add the `NSAppTransportSecurity` key to your `Info.plist` file to display logos from network URLs:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:flutter_any_logo/flutter_any_logo.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Any Logo Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Display a logo from a network URL
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Any Logo Demo'),
      ),
      body: Center(
        child: AnyLogo(
          logo: 'https://example.com/logo.png',
          size: 100,
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the app.
// 2. The app displays a scaffold with an app bar and a body.
// 3. The body contains a centered AnyLogo widget.
// 4. The AnyLogo widget displays a logo from the specified network URL.
// 5. The logo is displayed with the specified size.
```

// In summary, this code creates a simple Flutter app that displays a logo from a network URL using the `flutter_any_logo` package. The logo is centered on the screen and displayed with a size of 100 pixels.

<-- END_MAIN -->