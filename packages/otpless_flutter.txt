<-- START_DESCRIPTION -->

# otpless_flutter Package Overview
=====================================

The otpless_flutter package is a Flutter library that enables developers to authenticate users without the need for one-time passwords (OTPs). This package provides a seamless and secure way to verify user phone numbers and authenticate users.

### When to Use This Package

The otpless_flutter package is ideal for applications that require phone number verification and authentication, such as:

* Social media apps
* E-commerce apps
* Banking and finance apps
* Food delivery apps

### Features

The otpless_flutter package offers the following features:

* Phone number verification
* User authentication
* Support for Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the otpless_flutter Package
==========================================

To use the otpless_flutter package, follow these steps:

### Step 1: Add the Package to Your pubspec.yaml File

Add the following line to your pubspec.yaml file:
```yml
dependencies:
  otpless_flutter: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:otpless_flutter/otpless_flutter.dart';
```
### Step 3: Initialize the Package

Initialize the package by calling the `init` method:
```dart
OtplessFlutter.init();
```
### Step 4: Verify the User's Phone Number

Verify the user's phone number by calling the `verifyPhoneNumber` method:
```dart
OtplessFlutter.verifyPhoneNumber(
  phoneNumber: '+1234567890',
  verificationCompleted: (AuthCredential credential) {
    // Verification completed
  },
  verificationFailed: (AuthException exception) {
    // Verification failed
  },
  codeSent: (String verificationId, [int forceResendingToken]) {
    // Code sent
  },
  codeAutoRetrievalTimeout: (String verificationId) {
    // Code auto retrieval timeout
  },
);
```
### Platform-Specific Details

For Android, add the following lines to your AndroidManifest.xml file:
```xml
<uses-permission android:name="android.permission.READ_PHONE_STATE" />
<uses-permission android:name="android.permission.RECEIVE_SMS" />
```
For iOS, add the following lines to your Info.plist file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:otpless_flutter/otpless_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Otpless Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _formKey = GlobalKey<FormState>();
  String _phoneNumber = '';

  // Step 1: Initialize the package
  @override
  void initState() {
    super.initState();
    OtplessFlutter.init();
  }

  // Step 2: Verify the user's phone number
  void _verifyPhoneNumber() {
    OtplessFlutter.verifyPhoneNumber(
      phoneNumber: _phoneNumber,
      verificationCompleted: (AuthCredential credential) {
        // Verification completed
        print('Verification completed');
      },
      verificationFailed: (AuthException exception) {
        // Verification failed
        print('Verification failed');
      },
      codeSent: (String verificationId, [int forceResendingToken]) {
        // Code sent
        print('Code sent');
      },
      codeAutoRetrievalTimeout: (String verificationId) {
        // Code auto retrieval timeout
        print('Code auto retrieval timeout');
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Otpless Flutter Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                decoration: InputDecoration(
                  labelText: 'Phone Number',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value!.isEmpty) {
                    return 'Please enter your phone number';
                  }
                  return null;
                },
                onSaved: (value) => _phoneNumber = value!,
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    _formKey.currentState!.save();
                    _verifyPhoneNumber();
                  }
                },
                child: Text('Verify Phone Number'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and is presented with a form to enter their phone number.
// 2. The user enters their phone number and clicks the "Verify Phone Number" button.
// 3. The app initializes the otpless_flutter package and verifies the user's phone number.
// 4. If the verification is successful, the app prints "Verification completed" to the console.
// 5. If the verification fails, the app prints "Verification failed" to the console.
// 6. If the code is sent successfully, the app prints "Code sent" to the console.
// 7. If the code auto retrieval times out, the app prints "Code auto retrieval timeout" to the console.

```

<-- END_MAIN -->