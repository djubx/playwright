# Huawei ML Text Flutter Package

<!-- START_DESCRIPTION -->
## Description

The `huawei_ml_text` Flutter package is a powerful tool that allows developers to integrate text recognition capabilities into their applications using Huawei's machine learning services. This package is particularly useful for applications that require text extraction from images, such as document scanning apps, translation services, or any app that needs to process textual data from visual sources.

### When to Use

You might consider using the `huawei_ml_text` package in scenarios such as:
- Extracting text from images for data entry automation.
- Building a translation app that requires real-time text recognition.
- Creating a document management system that scans and indexes text from physical documents.

### Features

- **Text Recognition**: Recognizes and extracts text from images.
- **Multi-language Support**: Supports various languages for text recognition.
- **Real-time Processing**: Capable of processing images in real-time for instant results.
- **Integration with Huawei ML Kit**: Leverages Huawei's robust machine learning capabilities for accurate text recognition.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
## Tutorial

### Setup Process

To get started with the `huawei_ml_text` package, follow these steps:

1. **Add Dependency**: Open your `pubspec.yaml` file and add the following dependency:

   ```yaml
   dependencies:
     huawei_ml_text: ^latest_version
   ```

   Replace `latest_version` with the most recent version of the package.

2. **Platform-Specific Configuration**:
   - **Android**:
     - Ensure that your `android/app/build.gradle` file includes the necessary Huawei dependencies and permissions. You may need to add the following permissions in your `AndroidManifest.xml`:

       ```xml
       <uses-permission android:name="android.permission.CAMERA"/>
       <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
       ```

   - **iOS**:
     - For iOS, you need to add the necessary permissions in your `Info.plist` file:

       ```xml
       <key>NSCameraUsageDescription</key>
       <string>We need access to the camera for text recognition.</string>
       <key>NSPhotoLibraryUsageDescription</key>
       <string>We need access to the photo library for text recognition.</string>
       ```

3. **Initialize Huawei ML Kit**: Before using the package, ensure that you initialize the Huawei ML Kit in your application. This is typically done in the `main()` function.

### Using the Package

Hereâ€™s a simple example of how to use the `huawei_ml_text` package to recognize text from an image:

```dart
import 'package:flutter/material.dart';
import 'package:huawei_ml_text/huawei_ml_text.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String recognizedText = '';

  // Function to recognize text from an image
  Future<void> recognizeTextFromImage(String imagePath) async {
    // Create an instance of the text recognizer
    MLTextAnalyzer analyzer = MLTextAnalyzer();

    // Create a request for text recognition
    MLTextAnalyzerSetting setting = MLTextAnalyzerSetting();
    setting.setImagePath(imagePath);

    // Perform text recognition
    try {
      MLText text = await analyzer.analyze(setting);
      setState(() {
        recognizedText = text.text; // Update the recognized text
      });
    } catch (e) {
      print("Error recognizing text: $e");
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('Huawei ML Text Example')),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text('Recognized Text: $recognizedText'),
              ElevatedButton(
                onPressed: () {
                  // Call the function to recognize text from an image
                  recognizeTextFromImage('path_to_your_image');
                },
                child: Text('Recognize Text'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
```

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
## Complete Example

```dart
import 'package:flutter/material.dart';
import 'package:huawei_ml_text/huawei_ml_text.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String recognizedText = ''; // Variable to hold recognized text

  // Function to recognize text from an image
  Future<void> recognizeTextFromImage(String imagePath) async {
    // Create an instance of the text recognizer
    MLTextAnalyzer analyzer = MLTextAnalyzer();

    // Create a request for text recognition
    MLTextAnalyzerSetting setting = MLTextAnalyzerSetting();
    setting.setImagePath(imagePath); // Set the image path for recognition

    // Perform text recognition
    try {
      MLText text = await analyzer.analyze(setting); // Analyze the image
      setState(() {
        recognizedText = text.text; // Update the recognized text
      });
    } catch (e) {
      print("Error recognizing text: $e"); // Handle any errors
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('Huawei ML Text Example')),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text('Recognized Text: $recognizedText'), // Display recognized text
              ElevatedButton(
                onPressed: () {
                  // Call the function to recognize text from an image
                  recognizeTextFromImage('path_to_your_image'); // Replace with actual image path
                },
                child: Text('Recognize Text'), // Button to trigger text recognition
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The app starts with the main function, which runs the RealFlutter widget.
// 2. The RealFlutter widget is a StatefulWidget that maintains the state of recognized text.
// 3. The recognizeTextFromImage function is defined to handle text recognition from a given image path.
// 4. When the "Recognize Text" button is pressed, the function is called with the specified image path.
// 5. The text recognition process is initiated, and the recognized text is updated in the state.
// 6. The recognized text is displayed on the screen, allowing users to see the results of the recognition process.
```
<!-- END_MAIN -->

## Summary

In this blog post, we explored the `huawei_ml_text` Flutter package, which provides robust text recognition capabilities. We covered the setup process, including platform-specific configurations for Android and iOS, and provided a complete example demonstrating how to use the package effectively. The application flow was explained step-by-step, highlighting how the text recognition process works within a Flutter app. This package is ideal for developers looking to integrate text recognition features into their applications, making it a valuable addition to any Flutter project.