<-- START_DESCRIPTION -->

# Flutter Vertical Heatmap Package
=====================================

The `flutter_vertical_heatmap` package is a powerful tool for creating vertical heatmaps in Flutter applications. It provides a simple and intuitive way to visualize data as a two-dimensional representation of values, making it perfect for a wide range of use cases, such as:

*   Displaying temperature data over time
*   Visualizing stock prices or market trends
*   Representing website traffic or user engagement
*   Illustrating music or audio waveforms

Key Features:

*   Customizable color palette and gradient
*   Support for various data types (e.g., integers, doubles, strings)
*   Interactive heatmaps with touch events and gestures
*   Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_vertical_heatmap` package, follow these steps:

1.  Add the package to your `pubspec.yaml` file:

    ```yml
dependencies:
  flutter_vertical_heatmap: ^1.0.0
```

2.  Run `flutter pub get` to install the package.
3.  Import the package in your Dart file:

    ```dart
import 'package:flutter_vertical_heatmap/flutter_vertical_heatmap.dart';
```

### Platform-Specific Configurations

*   **Android:** No additional configurations are required.
*   **iOS:** In your `Info.plist` file, add the following lines to enable heatmaps:

    ```xml
<key>io.flutter.embedded_views</key>
<true/>
```

### Optimizations

For optimal performance, consider the following:

*   Use a limited number of data points to avoid performance issues.
*   Choose a suitable color palette to ensure readability.
*   Implement touch events and gestures to enhance user interaction.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_vertical_heatmap/flutter_vertical_heatmap.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Vertical Heatmap Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Sample data for the heatmap
  List<List<double>> _data = [
    [10, 20, 30, 40, 50],
    [20, 30, 40, 50, 60],
    [30, 40, 50, 60, 70],
    [40, 50, 60, 70, 80],
    [50, 60, 70, 80, 90],
  ];

  // Color palette for the heatmap
  List<Color> _colors = [
    Colors.blue,
    Colors.green,
    Colors.yellow,
    Colors.orange,
    Colors.red,
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Vertical Heatmap Demo'),
      ),
      body: Center(
        child: VerticalHeatmap(
          data: _data,
          colors: _colors,
          // Enable touch events and gestures
          onTap: (row, column) {
            print('Tapped at row $row, column $column');
          },
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user runs the app, and the `MyApp` widget is rendered.
// 2. The `MyApp` widget builds the `RealFlutter` widget as its home screen.
// 3. The `RealFlutter` widget initializes the sample data and color palette.
// 4. The `RealFlutter` widget builds the `VerticalHeatmap` widget with the provided data and colors.
// 5. The user interacts with the heatmap by tapping on it, triggering the `onTap` callback.
// 6. The `onTap` callback prints the row and column of the tapped cell to the console.

// Summary:
// The code flows from the `MyApp` widget to the `RealFlutter` widget, which initializes the data and colors.
// The `RealFlutter` widget then builds the `VerticalHeatmap` widget, enabling user interaction through touch events.
// The application responds to user input by printing the tapped cell's coordinates to the console.
```

<-- END_MAIN -->