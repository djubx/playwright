<-- START_DESCRIPTION -->

**Regexed Validator Flutter Package**
=====================================

The `regexed_validator` package provides a simple and efficient way to validate user input in Flutter applications using regular expressions. This package is ideal for validating email addresses, phone numbers, passwords, and other types of input that require specific formatting.

**When to Use**
---------------

Use the `regexed_validator` package when you need to validate user input in your Flutter application, such as:

* Email address validation
* Phone number validation
* Password validation
* Credit card number validation
* IP address validation

**Features**
------------

* Simple and easy-to-use API
* Supports a wide range of regular expression patterns
* Fast and efficient validation
* Works on both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setup and Usage**
-------------------

To use the `regexed_validator` package in your Flutter application, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  regexed_validator: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:regexed_validator/regexed_validator.dart';
```
4. Use the `RegexedValidator` class to validate user input:
```dart
final emailValidator = RegexedValidator(
  regex: r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$',
  errorText: 'Invalid email address',
);

final email = 'example@example.com';
if (emailValidator.validate(email)) {
  print('Email is valid');
} else {
  print('Email is invalid');
}
```
**Platform-Specific Details**
---------------------------

The `regexed_validator` package works on both Android and iOS platforms. However, on Android, you may need to add the following configuration to your `android/app/src/main/AndroidManifest.xml` file:
```xml
<application
  ...
  android:hardwareAccelerated="true"
  ...
>
```
This configuration enables hardware acceleration for the app, which is required for the package to work properly.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:regexed_validator/regexed_validator.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Regexed Validator Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _formKey = GlobalKey<FormState>();
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Regexed Validator Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _emailController,
                decoration: InputDecoration(
                  labelText: 'Email',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  final emailValidator = RegexedValidator(
                    regex: r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$',
                    errorText: 'Invalid email address',
                  );
                  if (!emailValidator.validate(value)) {
                    return emailValidator.errorText;
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              TextFormField(
                controller: _passwordController,
                decoration: InputDecoration(
                  labelText: 'Password',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  final passwordValidator = RegexedValidator(
                    regex: r'^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$',
                    errorText: 'Invalid password',
                  );
                  if (!passwordValidator.validate(value)) {
                    return passwordValidator.errorText;
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState.validate()) {
                    print('Form is valid');
                  } else {
                    print('Form is invalid');
                  }
                },
                child: Text('Submit'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The app flow is as follows:
// 1. The user enters their email and password in the text fields.
// 2. When the user clicks the submit button, the form is validated.
// 3. The email and password are validated using the RegexedValidator class.
// 4. If the email and password are valid, the form is submitted and a success message is printed.
// 5. If the email and password are invalid, an error message is displayed to the user.

// This code demonstrates the use of the RegexedValidator class to validate user input in a Flutter app.
// The RegexedValidator class provides a simple and efficient way to validate user input using regular expressions.
```

<-- END_MAIN -->