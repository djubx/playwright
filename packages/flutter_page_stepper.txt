<-- START_DESCRIPTION -->

# Flutter Page Stepper Package
================================

The `flutter_page_stepper` package is a Flutter widget that allows you to create a page stepper, which is a series of pages that the user can navigate through in a specific order. This package is useful when you need to guide the user through a process that involves multiple steps, such as a tutorial, a survey, or a payment process.

## Features

*   Create a page stepper with multiple pages
*   Customize the appearance of the page stepper, including the colors, fonts, and layout
*   Add a navigation bar to the page stepper
*   Use a built-in animation to transition between pages
*   Support for both Android and iOS platforms

## When to Use

*   When you need to guide the user through a process that involves multiple steps
*   When you want to create a tutorial or a survey that requires the user to navigate through multiple pages
*   When you want to create a payment process that involves multiple steps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Project

To use the `flutter_page_stepper` package, you need to add it to your project. You can do this by adding the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_page_stepper: ^1.0.0
```

## Step 2: Import the Package

After adding the package to your project, you need to import it in your Dart file. You can do this by adding the following line at the top of your file:

```dart
import 'package:flutter_page_stepper/flutter_page_stepper.dart';
```

## Step 3: Create a Page Stepper

To create a page stepper, you need to create a `PageStepper` widget and pass a list of `Page` widgets to it. Here is an example:

```dart
PageStepper(
  pages: [
    Page(
      child: Center(
        child: Text('Page 1'),
      ),
    ),
    Page(
      child: Center(
        child: Text('Page 2'),
      ),
    ),
    Page(
      child: Center(
        child: Text('Page 3'),
      ),
    ),
  ],
)
```

## Step 4: Customize the Page Stepper

You can customize the appearance of the page stepper by passing a `PageStepperOptions` object to the `PageStepper` widget. Here is an example:

```dart
PageStepper(
  pages: [
    // ...
  ],
  options: PageStepperOptions(
    color: Colors.blue,
    fontSize: 24,
    layout: PageStepperLayout.horizontal,
  ),
)
```

## Step 5: Add a Navigation Bar

You can add a navigation bar to the page stepper by passing a `NavigationBar` widget to the `PageStepper` widget. Here is an example:

```dart
PageStepper(
  pages: [
    // ...
  ],
  navigationBar: NavigationBar(
    title: Text('Page Stepper'),
    leading: IconButton(
      icon: Icon(Icons.arrow_back),
      onPressed: () {
        // Go back to the previous page
      },
    ),
    trailing: IconButton(
      icon: Icon(Icons.arrow_forward),
      onPressed: () {
        // Go to the next page
      },
    ),
  ),
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_page_stepper/flutter_page_stepper.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Page Stepper Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _currentPage = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Page Stepper Demo'),
      ),
      body: PageStepper(
        pages: [
          Page(
            child: Center(
              child: Text('Page 1'),
            ),
          ),
          Page(
            child: Center(
              child: Text('Page 2'),
            ),
          ),
          Page(
            child: Center(
              child: Text('Page 3'),
            ),
          ),
        ],
        options: PageStepperOptions(
          color: Colors.blue,
          fontSize: 24,
          layout: PageStepperLayout.horizontal,
        ),
        navigationBar: NavigationBar(
          title: Text('Page Stepper'),
          leading: IconButton(
            icon: Icon(Icons.arrow_back),
            onPressed: () {
              setState(() {
                if (_currentPage > 0) {
                  _currentPage--;
                }
              });
            },
          ),
          trailing: IconButton(
            icon: Icon(Icons.arrow_forward),
            onPressed: () {
              setState(() {
                if (_currentPage < 2) {
                  _currentPage++;
                }
              });
            },
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a page stepper.
// 2. The page stepper has three pages, each with a different text.
// 3. The user can navigate between pages using the navigation bar.
// 4. The navigation bar has a title, a back button, and a forward button.
// 5. When the user clicks the back button, the app goes back to the previous page.
// 6. When the user clicks the forward button, the app goes to the next page.
// 7. The app updates the current page index when the user navigates between pages.
```

<-- END_MAIN -->