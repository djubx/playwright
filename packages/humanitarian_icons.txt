# Humanitarian Icons Flutter Package

<!-- START_DESCRIPTION -->
## Description

The `humanitarian_icons` Flutter package provides a comprehensive set of icons specifically designed for humanitarian and non-profit organizations. This package is particularly useful for developers working on applications that focus on social causes, disaster relief, and community support. By using these icons, developers can enhance the visual appeal of their applications while conveying important messages related to humanitarian efforts.

### When to Use

- **Non-Profit Applications**: Ideal for apps that represent NGOs or charitable organizations.
- **Disaster Relief Platforms**: Useful for applications that provide information or services related to disaster management.
- **Community Support Apps**: Great for platforms that aim to connect volunteers with those in need.

### Features

- **Wide Range of Icons**: Includes various icons representing different humanitarian themes such as health, education, and emergency services.
- **Customizable**: Icons can be easily customized in terms of size and color to fit the app's design.
- **Easy Integration**: Simple to add to any Flutter project with minimal setup.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
## Tutorial

### Installation

To add the `humanitarian_icons` package to your Flutter project, include it in your `pubspec.yaml` file:

```yaml
dependencies:
  humanitarian_icons: ^1.0.0
```

After adding the dependency, run the following command to install the package:

```bash
flutter pub get
```

### Usage

1. **Import the Package**: In your Dart file, import the package to access the icons.

   ```dart
   import 'package:humanitarian_icons/humanitarian_icons.dart';
   ```

2. **Using Icons**: You can use the icons in your widget tree. Hereâ€™s how to use an icon:

   ```dart
   Icon(HumanitarianIcons.health);
   ```

### Platform-Specific Details

- **Android**: Ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21 to avoid compatibility issues.
  
- **iOS**: No specific configurations are required, but ensure that your iOS deployment target is compatible with the Flutter version you are using.

### Optimizations

- **Icon Size**: You can adjust the size of the icons using the `size` parameter in the `Icon` widget.
  
- **Color Customization**: Change the color of the icons using the `color` parameter.

```dart
Icon(
  HumanitarianIcons.education,
  size: 30.0,
  color: Colors.blue,
);
```

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
## Complete Example

```dart
import 'package:flutter/material.dart';
import 'package:humanitarian_icons/humanitarian_icons.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Humanitarian Icons Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Humanitarian Icons Example'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              // Displaying a health icon
              Icon(
                HumanitarianIcons.health,
                size: 50.0,
                color: Colors.green,
              ),
              SizedBox(height: 20), // Adding space between icons
              // Displaying an education icon
              Icon(
                HumanitarianIcons.education,
                size: 50.0,
                color: Colors.blue,
              ),
              SizedBox(height: 20), // Adding space between icons
              // Displaying an emergency icon
              Icon(
                HumanitarianIcons.emergency,
                size: 50.0,
                color: Colors.red,
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application starts with the main function, which runs the RealFlutter widget.
// The RealFlutter widget builds a MaterialApp with a title and a Scaffold.
// Inside the Scaffold, an AppBar is created with the title "Humanitarian Icons Example".
// The body of the Scaffold contains a Center widget that centers its child.
// A Column widget is used to arrange the icons vertically.
// Each icon is displayed using the Icon widget, with specific icons from the humanitarian_icons package.
// The size and color of each icon are customized for better visibility.
// SizedBox widgets are used to add space between the icons for better layout.
// The application effectively demonstrates the use of humanitarian icons in a Flutter app.
```

<!-- END_MAIN -->

## Summary

In this blog post, we explored the `humanitarian_icons` Flutter package, which provides a rich set of icons tailored for humanitarian efforts. We covered the installation process, usage examples, and provided a complete Flutter application demonstrating how to integrate these icons effectively. The application flow was explained step-by-step through comments, making it easy to understand how to utilize the package in real-world scenarios. This package is a valuable resource for developers looking to enhance their applications with meaningful icons that resonate with social causes.