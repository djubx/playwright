<-- START_DESCRIPTION -->

# Drago Blue Printer Flutter Package
=====================================

The `drago_blue_printer` Flutter package provides a simple and efficient way to print documents and images from your Flutter application. It supports various printing formats, including PDF, JPEG, and PNG.

### When to Use

This package is ideal for applications that require printing capabilities, such as:

* Document editing apps
* Image editing apps
* Point-of-sale (POS) systems
* Inventory management systems

### Features

* Supports PDF, JPEG, and PNG printing formats
* Allows for custom paper sizes and orientations
* Provides a simple and intuitive API for printing documents and images

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Drago Blue Printer Package
------------------------------------------

To use the `drago_blue_printer` package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  drago_blue_printer: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:drago_blue_printer/drago_blue_printer.dart';
```
### Step 3: Initialize the Printer

Initialize the printer by calling the `init` method:
```dart
await DragoBluePrinter.init();
```
### Step 4: Print a Document or Image

Print a document or image using the `print` method:
```dart
await DragoBluePrinter.print(
  document: 'path/to/document.pdf',
  paperSize: PaperSize.A4,
  orientation: Orientation.Portrait,
);
```
### Platform-Specific Details

* Android: Make sure to add the `android.permission.BLUETOOTH` permission to your `AndroidManifest.xml` file.
* iOS: Make sure to add the `NSBluetoothAlwaysUsageDescription` key to your `Info.plist` file.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:drago_blue_printer/drago_blue_printer.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Drago Blue Printer Example'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              ElevatedButton(
                onPressed: _printDocument,
                child: Text('Print Document'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _printImage,
                child: Text('Print Image'),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Future<void> _printDocument() async {
    // Initialize the printer
    await DragoBluePrinter.init();

    // Print a document
    await DragoBluePrinter.print(
      document: 'path/to/document.pdf',
      paperSize: PaperSize.A4,
      orientation: Orientation.Portrait,
    );
  }

  Future<void> _printImage() async {
    // Initialize the printer
    await DragoBluePrinter.init();

    // Print an image
    await DragoBluePrinter.print(
      image: 'path/to/image.jpg',
      paperSize: PaperSize.A4,
      orientation: Orientation.Landscape,
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Print Document" or "Print Image" button.
// 2. The `_printDocument` or `_printImage` function is called, respectively.
// 3. The printer is initialized using the `init` method.
// 4. The document or image is printed using the `print` method.
// 5. The printer is released using the `release` method (not shown in this example).
```

// The application flow is a simple button press that triggers the print function.
// This function initializes the printer, prints the document or image, and releases the printer.
// The printer is released to prevent memory leaks and other issues.

<-- END_MAIN -->