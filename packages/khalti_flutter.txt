<-- START_DESCRIPTION -->

**Khalti Flutter Package: A Comprehensive Overview**
=====================================================

The `khalti_flutter` package is a Flutter wrapper for the Khalti payment gateway, allowing developers to integrate Khalti payment services into their Flutter applications. This package provides a seamless payment experience for users, supporting various payment methods, including credit/debit cards, bank transfers, and mobile wallets.

**When to Use This Package?**
-----------------------------

Use the `khalti_flutter` package when you need to integrate a payment gateway into your Flutter application, specifically for the Nepalese market. This package is ideal for e-commerce applications, online marketplaces, and any other applications that require payment processing.

**Key Features**
----------------

*   Supports various payment methods, including credit/debit cards, bank transfers, and mobile wallets
*   Provides a seamless payment experience for users
*   Easy integration with Flutter applications
*   Supports both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setting Up the Khalti Flutter Package**
=====================================

To use the `khalti_flutter` package, follow these steps:

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  khalti_flutter: ^2.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:khalti_flutter/khalti_flutter.dart';
```

### Step 3: Initialize the Khalti Payment Gateway

Initialize the Khalti payment gateway with your public key:

```dart
KhaltiFlutter khaltiFlutter = KhaltiFlutter(
  publicKey: 'YOUR_PUBLIC_KEY',
);
```

### Step 4: Create a Payment Request

Create a payment request with the required amount and payment method:

```dart
PaymentRequest paymentRequest = PaymentRequest(
  amount: 1000,
  paymentMethod: PaymentMethod.card,
);
```

### Step 5: Process the Payment

Process the payment using the `khaltiFlutter` instance:

```dart
khaltiFlutter.processPayment(
  paymentRequest: paymentRequest,
  onSuccess: (paymentResponse) {
    // Handle payment success
  },
  onFailure: (error) {
    // Handle payment failure
  },
);
```

### Platform-Specific Details

For Android, add the following code to your `AndroidManifest.xml` file:

```xml
<application>
  ...
  <meta-data
    android:name="com.khalti.publicKey"
    android:value="YOUR_PUBLIC_KEY" />
</application>
```

For iOS, add the following code to your `Info.plist` file:

```xml
<key>com.khalti.publicKey</key>
<string>YOUR_PUBLIC_KEY</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:khalti_flutter/khalti_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Khalti Payment Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _formKey = GlobalKey<FormState>();
  final _amountController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Khalti Payment Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _amountController,
                decoration: InputDecoration(
                  labelText: 'Amount',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value!.isEmpty) {
                    return 'Please enter an amount';
                  }
                  return null;
                },
              ),
              SizedBox(height: 16),
              ElevatedButton(
                onPressed: () {
                  if (_formKey.currentState!.validate()) {
                    // Create a payment request
                    PaymentRequest paymentRequest = PaymentRequest(
                      amount: int.parse(_amountController.text),
                      paymentMethod: PaymentMethod.card,
                    );

                    // Process the payment
                    KhaltiFlutter khaltiFlutter = KhaltiFlutter(
                      publicKey: 'YOUR_PUBLIC_KEY',
                    );
                    khaltiFlutter.processPayment(
                      paymentRequest: paymentRequest,
                      onSuccess: (paymentResponse) {
                        // Handle payment success
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Payment successful'),
                          ),
                        );
                      },
                      onFailure: (error) {
                        // Handle payment failure
                        ScaffoldMessenger.of(context).showSnackBar(
                          SnackBar(
                            content: Text('Payment failed'),
                          ),
                        );
                      },
                    );
                  }
                },
                child: Text('Make Payment'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters an amount in the text field.
// 2. The user clicks the "Make Payment" button.
// 3. The application creates a payment request with the entered amount and payment method (card).
// 4. The application processes the payment using the Khalti payment gateway.
// 5. If the payment is successful, the application displays a success message.
// 6. If the payment fails, the application displays a failure message.

// This code demonstrates a basic payment flow using the Khalti payment gateway.
// You can modify the code to suit your specific requirements.

```

<-- END_MAIN -->