<-- START_DESCRIPTION -->

# Fast Image Resizer Package
The `fast_image_resizer` package is a powerful Flutter library that enables efficient image resizing and compression. It's ideal for applications that require image processing, such as social media, e-commerce, and photo editing apps.

## Key Features

*   Fast and efficient image resizing
*   Support for various image formats (JPEG, PNG, GIF, etc.)
*   Compression options for reducing file size
*   Easy integration with Flutter widgets

## When to Use

*   When you need to resize images before uploading them to a server
*   When you want to compress images to reduce storage space or improve loading times
*   When you need to display images in different sizes or aspect ratios

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package

To use the `fast_image_resizer` package, follow these steps:

1.  Add the package to your `pubspec.yaml` file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  fast_image_resizer: ^1.0.0
```

2.  Run `flutter pub get` to install the package.

## Platform-Specific Configurations

### Android

*   Add the following lines to your `android/app/build.gradle` file:

    ```groovy
android {
    ...
    defaultConfig {
        ...
        multiDexEnabled true
    }
}
```

### iOS

*   Add the following lines to your `ios/Podfile` file:

    ```ruby
target 'Runner' do
  use_frameworks!
  use_modular_headers!
  pod 'FastImageResizer'
end
```

## Using the Package

To resize an image, use the `FastImageResizer.resize` method:

```dart
import 'package:fast_image_resizer/fast_image_resizer.dart';

void main() async {
  // Load the image
  final image = await ImagePicker().getImage(source: ImageSource.gallery);

  // Resize the image
  final resizedImage = await FastImageResizer.resize(
    image.path,
    width: 800,
    height: 600,
    quality: 80,
  );

  // Use the resized image
  print(resizedImage.path);
}
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:fast_image_resizer/fast_image_resizer.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Fast Image Resizer Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  File _image;
  File _resizedImage;

  // Step 1: Load the image using the ImagePicker package
  Future<void> _loadImage() async {
    final image = await ImagePicker().getImage(source: ImageSource.gallery);
    setState(() {
      _image = File(image.path);
    });
  }

  // Step 2: Resize the image using the FastImageResizer package
  Future<void> _resizeImage() async {
    final resizedImage = await FastImageResizer.resize(
      _image.path,
      width: 800,
      height: 600,
      quality: 80,
    );
    setState(() {
      _resizedImage = resizedImage;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Fast Image Resizer Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Display the original image
            if (_image != null)
              Image.file(_image)
            else
              Text('No image loaded'),
            SizedBox(height: 20),
            // Display the resized image
            if (_resizedImage != null)
              Image.file(_resizedImage)
            else
              Text('No image resized'),
            SizedBox(height: 20),
            // Load image button
            ElevatedButton(
              onPressed: _loadImage,
              child: Text('Load Image'),
            ),
            SizedBox(height: 10),
            // Resize image button
            ElevatedButton(
              onPressed: _resizeImage,
              child: Text('Resize Image'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user loads an image using the ImagePicker package.
// 2. The image is displayed on the screen.
// 3. The user clicks the "Resize Image" button.
// 4. The FastImageResizer package resizes the image to the specified width, height, and quality.
// 5. The resized image is displayed on the screen.

```

<-- END_MAIN -->