<-- START_DESCRIPTION -->

# Group Select Flutter Package
================================

The `group_select` Flutter package provides a simple and efficient way to display a list of items and allow users to select multiple items from the list. It is particularly useful when you need to display a list of options and allow users to select multiple options.

## Features

*   Display a list of items with checkboxes or radio buttons
*   Allow users to select multiple items from the list
*   Customize the appearance of the list and the selection indicators
*   Support for both Android and iOS platforms

## When to Use

*   When you need to display a list of options and allow users to select multiple options
*   When you need to display a list of items and allow users to select multiple items
*   When you need a simple and efficient way to display a list of items with selection indicators

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Project

To use the `group_select` package, you need to add it to your project. You can do this by adding the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  group_select: ^1.0.0
```

Then, run `flutter pub get` to get the package.

## Step 2: Import the Package

To use the package, you need to import it into your Dart file. You can do this by adding the following line at the top of your file:

```dart
import 'package:group_select/group_select.dart';
```

## Step 3: Create a List of Items

To display a list of items, you need to create a list of items. You can do this by creating a list of `GroupSelectItem` objects. For example:

```dart
List<GroupSelectItem> items = [
  GroupSelectItem(
    value: 'item1',
    label: 'Item 1',
  ),
  GroupSelectItem(
    value: 'item2',
    label: 'Item 2',
  ),
  GroupSelectItem(
    value: 'item3',
    label: 'Item 3',
  ),
];
```

## Step 4: Display the List

To display the list, you can use the `GroupSelect` widget. For example:

```dart
GroupSelect(
  items: items,
  onChanged: (values) {
    print(values);
  },
)
```

This will display a list of items with checkboxes. When the user selects an item, the `onChanged` callback will be called with the selected values.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:group_select/group_select.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Group Select Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<GroupSelectItem> items = [
    GroupSelectItem(
      value: 'item1',
      label: 'Item 1',
    ),
    GroupSelectItem(
      value: 'item2',
      label: 'Item 2',
    ),
    GroupSelectItem(
      value: 'item3',
      label: 'Item 3',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Group Select Demo'),
      ),
      body: Center(
        child: GroupSelect(
          items: items,
          onChanged: (values) {
            print(values);
          },
        ),
      ),
    );
  }
}

// The app starts by running the main function, which runs the MyApp widget.
// The MyApp widget builds the app's title and theme, and then runs the MyHomePage widget.
// The MyHomePage widget builds the app's home page, which includes the GroupSelect widget.
// The GroupSelect widget displays a list of items with checkboxes.
// When the user selects an item, the onChanged callback is called with the selected values.
// The selected values are then printed to the console.

// This code demonstrates how to use the GroupSelect package to display a list of items with checkboxes.
// It also shows how to handle the selection of items and print the selected values to the console.
```

<-- END_MAIN -->