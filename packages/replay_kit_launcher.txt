<-- START_DESCRIPTION -->

# Replay Kit Launcher Flutter Package
=====================================

The `replay_kit_launcher` Flutter package provides a simple and efficient way to record and replay screen activities on both Android and iOS platforms. This package is particularly useful for creating tutorial videos, recording in-app user interactions, and testing purposes.

### Key Features:

*   Records screen activities with audio
*   Saves recorded videos to the device's gallery
*   Supports both Android and iOS platforms
*   Provides a simple and easy-to-use API

### When to Use:

*   Creating tutorial videos for your app
*   Recording in-app user interactions for testing purposes
*   Providing a feature to record and share in-app activities

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the Replay Kit Launcher Package
=====================================================

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  replay_kit_launcher: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:replay_kit_launcher/replay_kit_launcher.dart';
```

### Step 3: Initialize the Replay Kit Launcher

Initialize the Replay Kit Launcher before using it:

```dart
ReplayKitLauncher.initialize();
```

### Step 4: Start Recording

Start recording the screen activity:

```dart
ReplayKitLauncher.startRecording();
```

### Step 5: Stop Recording

Stop recording the screen activity:

```dart
ReplayKitLauncher.stopRecording();
```

### Platform-Specific Details:

*   **Android:** The recorded video will be saved to the device's gallery.
*   **iOS:** The recorded video will be saved to the device's Photos app.

### Required Configurations and Optimizations:

*   **Android:** Add the following permission to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```

*   **iOS:** Add the following key to your `Info.plist` file:

    ```xml
<key>NSMicrophoneUsageDescription</key>
<string>This app needs access to the microphone to record audio.</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:replay_kit_launcher/replay_kit_launcher.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Replay Kit Launcher Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  bool _isRecording = false;

  @override
  void initState() {
    super.initState();
    // Initialize the Replay Kit Launcher
    ReplayKitLauncher.initialize();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Replay Kit Launcher Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Start recording button
            ElevatedButton(
              onPressed: () {
                // Start recording the screen activity
                ReplayKitLauncher.startRecording();
                setState(() {
                  _isRecording = true;
                });
              },
              child: Text('Start Recording'),
            ),
            // Stop recording button
            ElevatedButton(
              onPressed: () {
                // Stop recording the screen activity
                ReplayKitLauncher.stopRecording();
                setState(() {
                  _isRecording = false;
                });
              },
              child: Text('Stop Recording'),
            ),
            // Text to display the recording status
            Text(_isRecording ? 'Recording...' : 'Not recording'),
          ],
        ),
      ),
    );
  }
}

// The application flow:
// 1. The user opens the app and is presented with a start recording button.
// 2. When the user clicks the start recording button, the Replay Kit Launcher starts recording the screen activity.
// 3. The user can then interact with the app while the recording is taking place.
// 4. When the user clicks the stop recording button, the Replay Kit Launcher stops recording the screen activity.
// 5. The recorded video is then saved to the device's gallery or Photos app.
// 6. The user can then view the recorded video by opening the gallery or Photos app.

// Summary:
// The Replay Kit Launcher provides a simple and efficient way to record and replay screen activities on both Android and iOS platforms.
// This demo app shows how to use the Replay Kit Launcher to start and stop recording the screen activity, and how to display the recording status to the user.
```

<-- END_MAIN -->