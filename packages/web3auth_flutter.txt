<-- START_DESCRIPTION -->

# Web3Auth Flutter Package
================================

The `web3auth_flutter` package provides a simple and secure way to authenticate users in Flutter applications using Web3 technologies. It allows developers to integrate Web3 authentication into their apps, enabling users to log in with their Web3 wallets, such as MetaMask.

## When to Use
--------------

Use this package when you want to:

* Authenticate users with their Web3 wallets
* Integrate Web3 technologies into your Flutter app
* Provide a secure and decentralized authentication solution

## Features
------------

* Supports multiple Web3 wallets, including MetaMask
* Secure and decentralized authentication
* Easy to integrate into existing Flutter apps

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Pubspec.yaml File
------------------------------------------------

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  web3auth_flutter: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package
---------------------------

Import the package in your Dart file:
```dart
import 'package:web3auth_flutter/web3auth_flutter.dart';
```
## Step 3: Initialize the Web3Auth Instance
-----------------------------------------

Create a new instance of the `Web3Auth` class:
```dart
Web3Auth web3auth = Web3Auth();
```
## Step 4: Configure the Web3Auth Instance
-----------------------------------------

Configure the `Web3Auth` instance with your Web3 wallet provider:
```dart
web3auth.configure(
  provider: 'https://mainnet.infura.io/v3/YOUR_PROJECT_ID',
);
```
Replace `YOUR_PROJECT_ID` with your actual Infura project ID.

## Step 5: Authenticate the User
------------------------------

Call the `login` method to authenticate the user:
```dart
web3auth.login().then((credentials) {
  // User is authenticated, use the credentials to access Web3 services
}).catchError((error) {
  // Handle authentication errors
});
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:web3auth_flutter/web3auth_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Web3Auth Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Web3Auth _web3auth = Web3Auth();

  @override
  void initState() {
    super.initState();
    _web3auth.configure(
      provider: 'https://mainnet.infura.io/v3/YOUR_PROJECT_ID',
    );
  }

  void _login() {
    _web3auth.login().then((credentials) {
      // User is authenticated, use the credentials to access Web3 services
      print('Authenticated!');
    }).catchError((error) {
      // Handle authentication errors
      print('Error: $error');
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Web3Auth Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _login,
          child: Text('Login with Web3'),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and is presented with a login button.
// 2. When the user clicks the login button, the `_login` method is called.
// 3. The `_login` method calls the `login` method on the `Web3Auth` instance.
// 4. The `login` method authenticates the user using their Web3 wallet.
// 5. If the authentication is successful, the `login` method returns the user's credentials.
// 6. The `_login` method uses the credentials to access Web3 services.
// 7. If an error occurs during authentication, the `_login` method catches the error and prints it to the console.

// Summary:
// This code demonstrates how to use the `web3auth_flutter` package to authenticate users in a Flutter app.
// The app presents a login button to the user, which calls the `_login` method when clicked.
// The `_login` method uses the `Web3Auth` instance to authenticate the user and access Web3 services.
```

<-- END_MAIN -->