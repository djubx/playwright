<-- START_DESCRIPTION -->

# get_phone_number Flutter Package
=====================================

The `get_phone_number` Flutter package provides a simple way to retrieve the user's phone number on both Android and iOS platforms. This package is useful when you need to authenticate users or verify their phone numbers.

### When to Use

*   When you need to authenticate users using their phone numbers.
*   When you need to verify the user's phone number.
*   When you need to retrieve the user's phone number for any other purpose.

### Features

*   Retrieves the user's phone number on both Android and iOS platforms.
*   Supports dual SIM devices.
*   Easy to use and integrate into your Flutter app.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your pubspec.yaml File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  get_phone_number: ^1.0.0
```

Then, run `flutter pub get` in your terminal to get the package.

## Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:get_phone_number/get_phone_number.dart';
```

## Step 3: Use the Package

Use the `GetPhoneNumber` class to retrieve the user's phone number:

```dart
String phoneNumber = await GetPhoneNumber().getPhoneNumber();
```

### Platform-Specific Details

#### Android

*   Add the following permission to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.READ_PHONE_STATE" />
```

*   If you're targeting Android 10 (API level 29) or higher, add the following permission to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.READ_PRIVILEGED_PHONE_STATE" />
```

#### iOS

*   Add the following lines to your `Info.plist` file:

    ```xml
<key>NSContactsUsageDescription</key>
<string>This app needs access to your contacts to retrieve your phone number</string>
```

### Required Configurations or Optimizations

*   Make sure to handle the case where the user denies the permission to access their phone number.
*   Make sure to handle the case where the user's phone number is not available.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:get_phone_number/get_phone_number.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Get Phone Number Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _phoneNumber = '';

  // Step 1: Create a GetPhoneNumber instance
  GetPhoneNumber _getPhoneNumber = GetPhoneNumber();

  // Step 2: Define a function to get the phone number
  Future<void> _getPhoneNumberAsync() async {
    // Step 3: Get the phone number
    String phoneNumber = await _getPhoneNumber.getPhoneNumber();

    // Step 4: Update the UI with the phone number
    setState(() {
      _phoneNumber = phoneNumber;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Get Phone Number Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Your phone number is:',
            ),
            Text(
              _phoneNumber,
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _getPhoneNumberAsync,
              child: Text('Get Phone Number'),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by creating a GetPhoneNumber instance.
// When the user clicks the "Get Phone Number" button, the _getPhoneNumberAsync function is called.
// This function gets the phone number using the GetPhoneNumber instance and updates the UI with the phone number.
// The phone number is displayed on the screen.
// If the user denies the permission to access their phone number, the app will not be able to get the phone number.
// If the user's phone number is not available, the app will not be able to get the phone number.

```

<-- END_MAIN -->