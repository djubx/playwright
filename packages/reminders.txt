<-- START_DESCRIPTION -->

# Reminders Flutter Package
The reminders Flutter package is a useful tool for scheduling notifications and reminders in Flutter applications. It provides a simple and efficient way to schedule reminders, both one-time and recurring, and allows for customization of notification content, timing, and behavior.

## When to Use
This package is ideal for applications that require scheduling notifications, such as:

* Task management apps
* Calendar apps
* Medication reminder apps
* Alarm clock apps

## Features

* Schedule one-time and recurring reminders
* Customize notification content, including title, message, and icon
* Set reminder timing, including date, time, and frequency
* Handle reminder notifications, including callback functions for when a reminder is triggered

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
To use the reminders package, follow these steps:

### Step 1: Add the Package to Your Project
Add the reminders package to your pubspec.yaml file:
```yml
dependencies:
  reminders: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package
Import the reminders package in your Dart file:
```dart
import 'package:reminders/reminders.dart';
```
### Step 3: Request Notification Permissions
Request notification permissions on Android and iOS:
```dart
await Reminders.requestPermissions();
```
### Step 4: Schedule a Reminder
Schedule a reminder using the `Reminders.scheduleReminder` method:
```dart
await Reminders.scheduleReminder(
  title: 'Reminder Title',
  message: 'Reminder Message',
  date: DateTime.now().add(Duration(minutes: 10)),
);
```
### Step 5: Handle Reminder Notifications
Handle reminder notifications using the `Reminders.onReminder` callback:
```dart
Reminders.onReminder((reminder) {
  print('Reminder triggered: ${reminder.title}');
});
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:reminders/reminders.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  void initState() {
    super.initState();
    // Request notification permissions
    Reminders.requestPermissions().then((_) {
      // Schedule a reminder
      Reminders.scheduleReminder(
        title: 'Reminder Title',
        message: 'Reminder Message',
        date: DateTime.now().add(Duration(minutes: 10)),
      );
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Reminders Example'),
        ),
        body: Center(
          child: Text('Reminder scheduled'),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app requests notification permissions using `Reminders.requestPermissions`.
// 2. Once permissions are granted, the app schedules a reminder using `Reminders.scheduleReminder`.
// 3. When the reminder is triggered, the `Reminders.onReminder` callback is called.
// 4. The callback prints a message to the console indicating that the reminder was triggered.

// Summary:
// This code demonstrates how to use the reminders package to schedule a reminder and handle the reminder notification.
// The app requests notification permissions, schedules a reminder, and handles the reminder notification using a callback function.
```

<-- END_MAIN -->