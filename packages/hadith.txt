Here's a detailed technical blog on the "hadith" Flutter package, structured as requested.

<!-- START_DESCRIPTION -->
# Hadith Flutter Package

The **Hadith** Flutter package is a powerful tool designed for developers who want to integrate Islamic teachings and texts into their Flutter applications. This package provides a comprehensive collection of Hadiths (sayings of the Prophet Muhammad) that can be easily accessed and displayed in various formats. 

## When to Use This Package
You might consider using the Hadith package in scenarios such as:
- **Islamic Educational Apps**: To provide users with access to authentic Hadiths for learning and reference.
- **Daily Reminder Apps**: To display a new Hadith each day as a source of inspiration and guidance.
- **Community Apps**: To foster discussions around Hadiths and their interpretations.

## Features
- **Extensive Database**: Access to a wide range of Hadith collections.
- **Search Functionality**: Easily search for specific Hadiths by keywords.
- **Customizable Display**: Options to format and style the display of Hadiths.
- **Multi-language Support**: Ability to display Hadiths in various languages, catering to a global audience.

The Hadith package is a valuable resource for any Flutter developer looking to enrich their applications with Islamic content.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the Hadith Package

## Step 1: Adding the Dependency
To get started, you need to add the Hadith package to your Flutter project. Open your `pubspec.yaml` file and add the following line under dependencies:

```yaml
dependencies:
  hadith: ^1.0.0  # Check for the latest version on pub.dev
```

Then, run the following command to install the package:

```bash
flutter pub get
```

## Step 2: Platform-Specific Configurations

### Android
For Android, ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
    }
}
```

### iOS
For iOS, you may need to update your `ios/Podfile` to ensure compatibility:

```ruby
platform :ios, '10.0'
```

## Step 3: Importing the Package
In your Dart files, import the Hadith package:

```dart
import 'package:hadith/hadith.dart';
```

## Step 4: Using the Package
You can now use the Hadith package to fetch and display Hadiths. Hereâ€™s a simple example of how to retrieve a Hadith and display it in a Flutter widget:

```dart
Hadith hadith = Hadith();
String randomHadith = hadith.getRandomHadith();
```

This code snippet retrieves a random Hadith from the database.

## Step 5: Customizing Display
You can customize how the Hadith is displayed by using Flutter widgets. For example, you can use `Text` widgets to show the Hadith and its source.

Now you are ready to integrate the Hadith package into your Flutter application!
<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using the Hadith Package

```dart
import 'package:flutter/material.dart';
import 'package:hadith/hadith.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Hadith App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: HadithScreen(),
    );
  }
}

class HadithScreen extends StatefulWidget {
  @override
  _HadithScreenState createState() => _HadithScreenState();
}

class _HadithScreenState extends State<HadithScreen> {
  Hadith hadith = Hadith(); // Create an instance of the Hadith class
  String randomHadith = ''; // Variable to hold the random Hadith

  @override
  void initState() {
    super.initState();
    fetchRandomHadith(); // Fetch a random Hadith when the screen initializes
  }

  void fetchRandomHadith() {
    // Fetch a random Hadith and update the state
    setState(() {
      randomHadith = hadith.getRandomHadith();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Random Hadith'),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                randomHadith,
                style: TextStyle(fontSize: 24, fontStyle: FontStyle.italic),
                textAlign: TextAlign.center,
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: fetchRandomHadith, // Fetch a new Hadith on button press
                child: Text('Get Another Hadith'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function runs the MyApp widget.
// 2. MyApp builds a MaterialApp with a title and theme.
// 3. The home of the app is set to HadithScreen.
// 4. HadithScreen is a stateful widget that manages the state of the random Hadith.
// 5. In the initState method, fetchRandomHadith is called to get a random Hadith when the screen loads.
// 6. fetchRandomHadith updates the randomHadith variable and calls setState to refresh the UI.
// 7. The build method displays the random Hadith and a button to fetch another one.
// 8. Pressing the button calls fetchRandomHadith again, updating the displayed Hadith.
```
<!-- END_MAIN -->

This blog provides a comprehensive overview of the Hadith Flutter package, guiding you through its features, setup, and a complete example of its usage. By following the steps outlined, you can easily integrate Hadiths into your Flutter applications, enhancing their educational and inspirational value.