<-- START_DESCRIPTION -->

# r_album Flutter Package
==========================

The r_album Flutter package is a powerful tool for accessing and managing a device's photo library. It provides a simple and efficient way to retrieve and display images, making it an ideal solution for apps that require photo gallery functionality.

## When to Use

The r_album package is perfect for apps that need to:

* Access and display photos from the device's gallery
* Allow users to select and upload photos
* Manage and edit photos within the app

## Features

* Platform-specific implementation for Android and iOS
* Efficient image loading and caching
* Support for various image formats
* Ability to request permissions and handle errors

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up r_album
---------------------

To use the r_album package, follow these steps:

### 1. Add the Package to Your Project

Add the r_album package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  r_album: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### 2. Import the Package

Import the r_album package in your Dart file:
```dart
import 'package:r_album/r_album.dart';
```
### 3. Request Permissions

Request the necessary permissions to access the device's photo library:
```dart
import 'package:r_album/r_album.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  void initState() {
    super.initState();
    requestPermissions();
  }

  Future<void> requestPermissions() async {
    await RAlbum.requestPermissions();
  }
}
```
### 4. Load and Display Images

Use the `RAlbum` class to load and display images:
```dart
import 'package:r_album/r_album.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  List<Asset> _images = [];

  @override
  void initState() {
    super.initState();
    loadImages();
  }

  Future<void> loadImages() async {
    final assets = await RAlbum.getAssets();
    setState(() {
      _images = assets;
    });
  }

  @override
  Widget build(BuildContext context) {
    return GridView.builder(
      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 3,
      ),
      itemCount: _images.length,
      itemBuilder: (context, index) {
        return Image.asset(
          _images[index].path,
          fit: BoxFit.cover,
        );
      },
    );
  }
}
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:r_album/r_album.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'r_album Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  List<Asset> _images = [];

  // Request permissions when the app starts
  @override
  void initState() {
    super.initState();
    requestPermissions();
  }

  // Request the necessary permissions to access the device's photo library
  Future<void> requestPermissions() async {
    await RAlbum.requestPermissions();
    loadImages();
  }

  // Load images from the device's photo library
  Future<void> loadImages() async {
    final assets = await RAlbum.getAssets();
    setState(() {
      _images = assets;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('r_album Demo'),
      ),
      body: GridView.builder(
        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 3,
        ),
        itemCount: _images.length,
        itemBuilder: (context, index) {
          return Image.asset(
            _images[index].path,
            fit: BoxFit.cover,
          );
        },
      ),
    );
  }
}

// The app starts by requesting the necessary permissions to access the device's photo library.
// Once the permissions are granted, the app loads the images from the device's photo library.
// The images are then displayed in a grid view.
// The user can view the images by scrolling through the grid view.
```

// The app's flow is as follows:
// 1. The user opens the app.
// 2. The app requests the necessary permissions to access the device's photo library.
// 3. Once the permissions are granted, the app loads the images from the device's photo library.
// 4. The images are then displayed in a grid view.
// 5. The user can view the images by scrolling through the grid view.

<-- END_MAIN -->