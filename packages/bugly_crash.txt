<-- START_DESCRIPTION -->

# Bugly Crash Flutter Package
================================

The Bugly Crash Flutter package is a powerful tool for monitoring and analyzing crashes in Flutter applications. It provides a comprehensive solution for crash reporting, allowing developers to quickly identify and fix issues that affect the stability and performance of their apps.

## When to Use This Package
---------------------------

The Bugly Crash Flutter package is ideal for use in production environments where app stability and performance are critical. It is particularly useful for apps that have a large user base or handle sensitive data, as it provides a reliable and secure way to monitor and analyze crashes.

## Features
------------

The Bugly Crash Flutter package offers a range of features, including:

*   Crash reporting: The package provides detailed reports on crashes, including information on the cause of the crash, the device and operating system used, and the app version.
*   Real-time monitoring: The package allows developers to monitor crashes in real-time, enabling them to quickly identify and fix issues.
*   Customizable reporting: The package provides options for customizing crash reports, including the ability to add custom data and set reporting thresholds.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Bugly Crash Flutter Package
=============================================================

## Step 1: Add the Package to Your Flutter Project
------------------------------------------------

To use the Bugly Crash Flutter package, you need to add it to your Flutter project. You can do this by adding the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  bugly_crash: ^1.0.0
```

## Step 2: Import the Package
---------------------------

After adding the package to your project, you need to import it in your Dart file. You can do this by adding the following import statement:

```dart
import 'package:bugly_crash/bugly_crash.dart';
```

## Step 3: Initialize the Package
-------------------------------

To use the package, you need to initialize it with your Bugly app ID. You can do this by calling the `init` method:

```dart
BuglyCrash.init(
  androidAppId: 'your_android_app_id',
  iosAppId: 'your_ios_app_id',
);
```

## Step 4: Report Crashes
----------------------

To report crashes, you can call the `reportCrash` method:

```dart
BuglyCrash.reportCrash(
  error: error,
  stackTrace: stackTrace,
);
```

## Platform-Specific Details
---------------------------

### Android

To use the Bugly Crash Flutter package on Android, you need to add the following configuration to your `AndroidManifest.xml` file:

```xml
<application>
  <meta-data
    android:name="com.tencent.bugly.crashreport.appid"
    android:value="your_android_app_id" />
</application>
```

### iOS

To use the Bugly Crash Flutter package on iOS, you need to add the following configuration to your `Info.plist` file:

```xml
<key>BuglyAppId</key>
<string>your_ios_app_id</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:bugly_crash/bugly_crash.dart';

void main() {
  // Initialize the Bugly Crash Flutter package
  BuglyCrash.init(
    androidAppId: 'your_android_app_id',
    iosAppId: 'your_ios_app_id',
  );

  // Run the app
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Bugly Crash Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Bugly Crash Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Simulate a crash
            throw Exception('Simulated crash');
          },
          child: Text('Simulate Crash'),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app initializes the Bugly Crash Flutter package with the app ID.
// 2. The app runs and displays a button to simulate a crash.
// 3. When the button is pressed, the app throws an exception to simulate a crash.
// 4. The Bugly Crash Flutter package catches the exception and reports the crash.
// 5. The crash report is sent to the Bugly dashboard for analysis.

// Summary:
// The Bugly Crash Flutter package provides a comprehensive solution for crash reporting in Flutter apps.
// It allows developers to quickly identify and fix issues that affect the stability and performance of their apps.
// By initializing the package with the app ID and reporting crashes, developers can ensure that their apps are stable and perform well.
```

<-- END_MAIN -->