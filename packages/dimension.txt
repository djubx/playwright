<-- START_DESCRIPTION -->

Dimension Flutter Package
==========================

The Dimension Flutter package is a powerful tool for managing screen sizes and orientations in Flutter applications. It provides a simple and efficient way to handle different screen sizes, orientations, and aspect ratios, making it an essential package for any Flutter developer.

When to Use
------------

The Dimension package is particularly useful when:

* You need to handle different screen sizes and orientations in your Flutter application.
* You want to ensure that your app's UI is responsive and adaptable to different screen sizes and orientations.
* You need to handle aspect ratios and screen resolutions in your app.

Features
--------

The Dimension package provides the following features:

* Screen size and orientation management
* Aspect ratio management
* Screen resolution management
* Responsive UI management

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
----------------

To use the Dimension package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  dimension: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:dimension/dimension.dart';
```
### Step 3: Initialize the Package

Initialize the package in your `main` function:
```dart
void main() {
  Dimension.init();
  runApp(MyApp());
}
```
### Step 4: Use the Package

Use the package to manage screen sizes and orientations:
```dart
class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(
          'Screen Size: ${Dimension.screenSize.width} x ${Dimension.screenSize.height}',
        ),
      ),
    );
  }
}
```
Platform-Specific Details
-------------------------

### Android

To handle screen sizes and orientations on Android, you need to add the following code to your `AndroidManifest.xml` file:
```xml
<application
  ...
  android:configChanges="orientation|screenSize"
  ...
>
```
### iOS

To handle screen sizes and orientations on iOS, you need to add the following code to your `Info.plist` file:
```xml
<key>UISupportedInterfaceOrientations</key>
<array>
  <string>UIInterfaceOrientationPortrait</string>
  <string>UIInterfaceOrientationLandscapeLeft</string>
  <string>UIInterfaceOrientationLandscapeRight</string>
</array>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:dimension/dimension.dart';

void main() {
  Dimension.init();
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Get the current screen size
    Size screenSize = Dimension.screenSize;

    // Get the current screen orientation
    Orientation orientation = Dimension.orientation;

    // Get the current aspect ratio
    double aspectRatio = Dimension.aspectRatio;

    // Get the current screen resolution
    Resolution resolution = Dimension.resolution;

    return Scaffold(
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Screen Size: ${screenSize.width} x ${screenSize.height}',
            ),
            Text(
              'Screen Orientation: $orientation',
            ),
            Text(
              'Aspect Ratio: $aspectRatio',
            ),
            Text(
              'Screen Resolution: ${resolution.width} x ${resolution.height}',
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The Dimension package is initialized in the main function.
// 2. The RealFlutter widget is created and returned as the root widget.
// 3. The RealFlutter widget gets the current screen size, orientation, aspect ratio, and resolution using the Dimension package.
// 4. The RealFlutter widget displays the current screen size, orientation, aspect ratio, and resolution on the screen.
// 5. The user can rotate the screen to change the screen orientation, and the RealFlutter widget will update the display accordingly.
```

// In summary, the code flows as follows:
// The user opens the app, and the Dimension package is initialized.
// The RealFlutter widget is created and displayed on the screen.
// The RealFlutter widget gets the current screen size, orientation, aspect ratio, and resolution and displays them on the screen.
// The user can rotate the screen to change the screen orientation, and the RealFlutter widget will update the display accordingly.

<-- END_MAIN -->