```markdown
<-- START_DESCRIPTION -->

# Eva Icons Flutter Package: A Comprehensive Guide

The `eva_icons_flutter` package is a versatile and easy-to-use icon library for Flutter applications. It provides a wide range of beautifully designed icons that can be seamlessly integrated into your Flutter projects. This package is particularly useful when you need a consistent and modern icon set that enhances the visual appeal of your app.

## When to Use Eva Icons

- **Consistent Design**: When you need a cohesive set of icons that match a modern design aesthetic.
- **Ease of Use**: If you want to quickly add icons without designing them from scratch.
- **Customization**: When you require icons that can be easily customized in terms of size, color, and style.

## Features

- **Wide Range of Icons**: Includes a comprehensive set of icons suitable for various applications.
- **Customizable**: Icons can be easily customized to fit the design needs of your application.
- **Lightweight**: The package is optimized for performance, ensuring that it does not bloat your application.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using Eva Icons in Flutter

In this section, we will walk through the process of setting up the `eva_icons_flutter` package in a Flutter project and demonstrate how to use it effectively.

## Setup Process

1. **Add Dependency**: Open your `pubspec.yaml` file and add the `eva_icons_flutter` package.

   ```yaml
   dependencies:
     flutter:
       sdk: flutter
     eva_icons_flutter: ^2.0.0
   ```

2. **Install Packages**: Run the following command in your terminal to install the new package.

   ```bash
   flutter pub get
   ```

3. **Import the Package**: In your Dart file, import the package to start using the icons.

   ```dart
   import 'package:eva_icons_flutter/eva_icons_flutter.dart';
   ```

## Platform-Specific Details

### Android

- Ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21 to support all features of Flutter.

### iOS

- No additional setup is required for iOS. Ensure your deployment target is set to iOS 9.0 or higher in your `ios/Podfile`.

## Using Eva Icons

To use an icon from the package, simply use the `EvaIcons` class followed by the icon name. You can customize the icon's size and color as needed.

```dart
Icon(
  EvaIcons.heart,
  color: Colors.red,
  size: 30.0,
)
```

<-- END_TUTORIAL -->

<-- MAIN -->

# Complete Example: Flutter Application Using Eva Icons

Below is a complete Flutter application demonstrating the use of the `eva_icons_flutter` package. This example showcases how to integrate and customize icons within a simple app.

```dart
import 'package:flutter/material.dart';
import 'package:eva_icons_flutter/eva_icons_flutter.dart';

// Main entry point of the application
void main() {
  runApp(RealFlutter());
}

// RealFlutter is the main class of the application
class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Eva Icons Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: IconDemoPage(),
    );
  }
}

// IconDemoPage is a stateless widget that displays a list of icons
class IconDemoPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Eva Icons Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Display a heart icon with red color
            Icon(
              EvaIcons.heart,
              color: Colors.red,
              size: 50.0,
            ),
            SizedBox(height: 20),
            // Display a star icon with yellow color
            Icon(
              EvaIcons.star,
              color: Colors.yellow,
              size: 50.0,
            ),
            SizedBox(height: 20),
            // Display a person icon with blue color
            Icon(
              EvaIcons.person,
              color: Colors.blue,
              size: 50.0,
            ),
          ],
        ),
      ),
    );
  }
}
```

// Application Flow Explanation
// 1. The `main` function is the entry point of the application, which calls `runApp` with `RealFlutter`.
// 2. `RealFlutter` is a stateless widget that sets up the MaterialApp with a title and theme.
// 3. The home of the MaterialApp is set to `IconDemoPage`, which is another stateless widget.
// 4. `IconDemoPage` builds a Scaffold with an AppBar and a centered Column in the body.
// 5. The Column contains three Icon widgets, each displaying a different icon from the `eva_icons_flutter` package.
// 6. Each icon is customized with a specific color and size, demonstrating the package's flexibility.

<-- END_MAIN -->
```