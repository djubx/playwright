```markdown
<!-- START_DESCRIPTION -->
# Zego UIKit Prebuilt Live Audio Room Flutter Package

The `zego_uikit_prebuilt_live_audio_room` Flutter package is a powerful tool designed for developers looking to integrate live audio room functionalities into their applications. This package leverages Zego's real-time audio and video communication capabilities, allowing users to create engaging audio experiences in a seamless manner.

## When to Use This Package

This package is particularly useful in scenarios such as:
- **Online Education**: Facilitating live audio classes where instructors can interact with students in real-time.
- **Virtual Events**: Hosting webinars or conferences where speakers can communicate with attendees.
- **Gaming**: Enabling voice chat features in multiplayer games to enhance player interaction.

## Key Features

- **Prebuilt UI**: The package provides a ready-to-use UI for audio rooms, which can be customized to fit the application's design.
- **Real-time Communication**: Utilizes Zego's robust SDK for low-latency audio communication.
- **Cross-Platform Support**: Works seamlessly on both Android and iOS devices.
- **Scalability**: Supports a large number of participants in a single audio room.

With these features, developers can quickly implement live audio functionalities without needing to build everything from scratch.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the Zego UIKit Prebuilt Live Audio Room

In this tutorial, we will walk through the setup process for the `zego_uikit_prebuilt_live_audio_room` package and demonstrate how to use it in a Flutter application.

## Step 1: Add Dependency

To get started, add the package to your `pubspec.yaml` file:

```yaml
dependencies:
  zego_uikit_prebuilt_live_audio_room: ^latest_version
```

Make sure to replace `latest_version` with the most recent version available on [pub.dev](https://pub.dev/packages/zego_uikit_prebuilt_live_audio_room).

## Step 2: Platform-Specific Configuration

### Android Configuration

1. **Update AndroidManifest.xml**: Add the necessary permissions in your `AndroidManifest.xml` file located at `android/app/src/main/AndroidManifest.xml`:

```xml
<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.RECORD_AUDIO"/>
```

2. **Minimum SDK Version**: Ensure your `minSdkVersion` is set to at least 21 in `android/app/build.gradle`:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
    }
}
```

### iOS Configuration

1. **Update Info.plist**: Add the following keys to your `Info.plist` file located at `ios/Runner/Info.plist` to request microphone access:

```xml
<key>NSMicrophoneUsageDescription</key>
<string>We need access to your microphone for audio communication.</string>
```

2. **Enable Background Modes**: If you want to support background audio, enable the "Audio, AirPlay, and Picture in Picture" background mode in your Xcode project settings.

## Step 3: Initialize the SDK

Before using the package, you need to initialize the Zego SDK. This is typically done in the `main()` function of your Flutter app.

```dart
import 'package:flutter/material.dart';
import 'package:zego_uikit_prebuilt_live_audio_room/zego_uikit_prebuilt_live_audio_room.dart';

void main() {
  // Initialize the Zego SDK with your App ID and App Sign
  ZegoUIKitPrebuiltLiveAudioRoom.init(appID: YOUR_APP_ID, appSign: YOUR_APP_SIGN);
  runApp(MyApp());
}
```

## Step 4: Create the Audio Room

You can create an audio room by using the `ZegoUIKitPrebuiltLiveAudioRoom` widget. Hereâ€™s a simple example:

```dart
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: ZegoUIKitPrebuiltLiveAudioRoom(
        appID: YOUR_APP_ID,
        appSign: YOUR_APP_SIGN,
        roomID: "test_room",
        userID: "user_1",
        userName: "User 1",
      ),
    );
  }
}
```

## Step 5: Run Your Application

Now you can run your application on an emulator or a physical device. You should see the prebuilt audio room UI, allowing you to join and interact in the audio room.

With these steps, you have successfully set up and used the `zego_uikit_prebuilt_live_audio_room` package in your Flutter application.
<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using Zego UIKit Prebuilt Live Audio Room

```dart
import 'package:flutter/material.dart';
import 'package:zego_uikit_prebuilt_live_audio_room/zego_uikit_prebuilt_live_audio_room.dart';

void main() {
  // Initialize the Zego SDK with your App ID and App Sign
  ZegoUIKitPrebuiltLiveAudioRoom.init(appID: YOUR_APP_ID, appSign: YOUR_APP_SIGN);
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Live Audio Room',
      home: AudioRoomScreen(),
    );
  }
}

class AudioRoomScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Live Audio Room'),
      ),
      body: ZegoUIKitPrebuiltLiveAudioRoom(
        appID: YOUR_APP_ID,
        appSign: YOUR_APP_SIGN,
        roomID: "test_room",
        userID: "user_1",
        userName: "User 1",
        onLeaveRoom: () {
          // Handle the event when the user leaves the room
          Navigator.pop(context);
        },
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function initializes the Zego SDK with the provided App ID and App Sign.
// 2. The RealFlutter class sets up the MaterialApp with a title and home screen.
// 3. The AudioRoomScreen class builds the UI for the audio room, including an AppBar and the Zego audio room widget.
// 4. The ZegoUIKitPrebuiltLiveAudioRoom widget is configured with necessary parameters like appID, appSign, roomID, userID, and userName.
// 5. The onLeaveRoom callback is defined to handle the event when a user leaves the audio room, which navigates back to the previous screen.
```
<!-- END_MAIN -->
```

This structured blog provides a comprehensive overview of the `zego_uikit_prebuilt_live_audio_room` package, guiding users through its features, setup, and implementation in a Flutter application. Each section is clearly marked for easy navigation and understanding.