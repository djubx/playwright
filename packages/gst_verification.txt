```markdown
<!-- START_DESCRIPTION -->
# Overview of the gst_verification Flutter Package

The `gst_verification` package is a powerful tool designed for Flutter developers who need to verify Goods and Services Tax (GST) numbers in their applications. This package simplifies the process of validating GST numbers, ensuring that users can quickly and accurately check the legitimacy of GST registrations.

## When to Use This Package
- **E-commerce Applications**: Validate GST numbers during the checkout process.
- **Accounting Software**: Ensure that GST numbers entered by users are valid for invoicing.
- **Business Applications**: Help businesses verify their partners' GST numbers for compliance.

## Key Features
- **GST Number Validation**: Quickly checks if a GST number is valid.
- **Error Handling**: Provides clear error messages for invalid inputs.
- **Cross-Platform Support**: Works seamlessly on both Android and iOS devices.

This package is particularly useful for businesses operating in India, where GST compliance is crucial for legal and financial operations.

<!-- END_DESCRIPTION -->
```

```markdown
<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using gst_verification

## Installation
To add the `gst_verification` package to your Flutter project, include it in your `pubspec.yaml` file:

```yaml
dependencies:
  gst_verification: ^1.0.0
```

Run `flutter pub get` to install the package.

## Platform-Specific Configuration

### Android
Ensure that your `minSdkVersion` is set to at least 21 in your `android/app/build.gradle` file:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
    }
}
```

### iOS
For iOS, ensure that you have the correct permissions set in your `Info.plist` if you are using any network features. Typically, no special permissions are required for this package.

## Using the Package
To use the `gst_verification` package, you can follow these steps:

1. Import the package in your Dart file:
   ```dart
   import 'package:gst_verification/gst_verification.dart';
   ```

2. Create an instance of the `RealFlutter` class and use its methods to validate GST numbers.

Hereâ€™s a simple example of how to implement GST verification in your app.

<!-- END_TUTORIAL -->
```

```markdown
<!-- START_MAIN -->
# Complete Example of gst_verification in a Flutter App

```dart
import 'package:flutter/material.dart';
import 'package:gst_verification/gst_verification.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'GST Verification',
      home: GSTVerificationScreen(),
    );
  }
}

class GSTVerificationScreen extends StatefulWidget {
  @override
  _GSTVerificationScreenState createState() => _GSTVerificationScreenState();
}

class _GSTVerificationScreenState extends State<GSTVerificationScreen> {
  final TextEditingController _controller = TextEditingController();
  String _result = '';

  // Function to verify GST number
  void _verifyGST() async {
    String gstNumber = _controller.text;
    // Call the verify method from gst_verification package
    bool isValid = await GSTVerification.verifyGST(gstNumber);
    
    // Update the result based on the verification
    setState(() {
      _result = isValid ? 'Valid GST Number' : 'Invalid GST Number';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('GST Verification'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _controller,
              decoration: InputDecoration(
                labelText: 'Enter GST Number',
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _verifyGST,
              child: Text('Verify GST'),
            ),
            SizedBox(height: 20),
            Text(
              _result,
              style: TextStyle(fontSize: 20, color: Colors.red),
            ),
          ],
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The app starts with the main function, which runs the RealFlutter widget.
// 2. RealFlutter builds a MaterialApp with a title and a home screen (GSTVerificationScreen).
// 3. GSTVerificationScreen is a stateful widget that manages the state of the GST verification process.
// 4. A TextEditingController is used to capture user input for the GST number.
// 5. When the user presses the "Verify GST" button, the _verifyGST function is called.
// 6. This function retrieves the GST number from the text field and calls the verifyGST method from the gst_verification package.
// 7. Based on the result of the verification, the state is updated to show whether the GST number is valid or invalid.
// 8. The result is displayed on the screen, providing immediate feedback to the user.

```
<!-- END_MAIN -->
``` 

This structured approach provides a comprehensive overview of the `gst_verification` package, guiding developers through its features, setup, and practical implementation in a Flutter application.