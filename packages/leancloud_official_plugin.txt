<-- START_DESCRIPTION -->

# LeanCloud Official Plugin for Flutter
=====================================

The `leancloud_official_plugin` is a Flutter package that provides a set of APIs for interacting with LeanCloud, a popular backend-as-a-service (BaaS) platform. This plugin allows developers to easily integrate LeanCloud's features into their Flutter applications.

## When to Use This Plugin
-------------------------

This plugin is ideal for developers who want to use LeanCloud as their backend service for their Flutter applications. It provides a simple and convenient way to interact with LeanCloud's APIs, allowing developers to focus on building their app's UI and business logic.

## Features
------------

The `leancloud_official_plugin` provides the following features:

*   User authentication and management
*   Data storage and retrieval
*   File storage and retrieval
*   Push notifications
*   Real-time messaging

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Plugin
----------------------

To use the `leancloud_official_plugin` in your Flutter project, follow these steps:

### Step 1: Add the Plugin to Your `pubspec.yaml` File

```yml
dependencies:
  leancloud_official_plugin: ^1.0.0
```

### Step 2: Run `flutter pub get` to Get the Plugin

```bash
flutter pub get
```

### Step 3: Import the Plugin in Your Dart File

```dart
import 'package:leancloud_official_plugin/leancloud_official_plugin.dart';
```

### Step 4: Initialize the Plugin

```dart
void main() {
  WidgetsFlutterBinding.ensureInitialized();
  LeanCloud.initialize(
    appId: 'your_app_id',
    appKey: 'your_app_key',
    server: 'https://your_server_url.com',
  );
  runApp(MyApp());
}
```

### Platform-Specific Details

#### Android

*   Add the following code to your `AndroidManifest.xml` file:

    ```xml
<application
    ...
    android:name="com.leancloud.LeanCloudApplication"
    ...
>
```

*   Add the following code to your `build.gradle` file:

    ```groovy
dependencies {
    implementation 'com.leancloud:leancloud-sdk:1.0.0'
}
```

#### iOS

*   Add the following code to your `Info.plist` file:

    ```xml
<key>LeanCloudAppId</key>
<string>your_app_id</string>
<key>LeanCloudAppKey</key>
<string>your_app_key</string>
<key>LeanCloudServer</key>
<string>https://your_server_url.com</string>
```

### Required Configurations and Optimizations

*   Make sure to replace `your_app_id`, `your_app_key`, and `https://your_server_url.com` with your actual LeanCloud app ID, app key, and server URL.
*   Make sure to handle errors and exceptions properly when using the plugin's APIs.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:leancloud_official_plugin/leancloud_official_plugin.dart';

void main() {
  // Initialize the plugin
  WidgetsFlutterBinding.ensureInitialized();
  LeanCloud.initialize(
    appId: 'your_app_id',
    appKey: 'your_app_key',
    server: 'https://your_server_url.com',
  );

  // Run the app
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'LeanCloud Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // Create a LeanCloud user
  void _createUser() async {
    try {
      // Create a new user
      LCUser user = await LCUser.create();
      user.username = 'testuser';
      user.password = 'testpassword';
      await user.save();

      // Print the user's ID
      print('User ID: ${user.objectId}');
    } catch (e) {
      print('Error creating user: $e');
    }
  }

  // Login to LeanCloud
  void _login() async {
    try {
      // Login to LeanCloud
      LCUser user = await LCUser.login('testuser', 'testpassword');

      // Print the user's ID
      print('User ID: ${user.objectId}');
    } catch (e) {
      print('Error logging in: $e');
    }
  }

  // Save data to LeanCloud
  void _saveData() async {
    try {
      // Create a new object
      LCObject object = await LCObject.create('TestObject');
      object['testKey'] = 'testValue';
      await object.save();

      // Print the object's ID
      print('Object ID: ${object.objectId}');
    } catch (e) {
      print('Error saving data: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('LeanCloud Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _createUser,
              child: Text('Create User'),
            ),
            ElevatedButton(
              onPressed: _login,
              child: Text('Login'),
            ),
            ElevatedButton(
              onPressed: _saveData,
              child: Text('Save Data'),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by initializing the LeanCloud plugin with the app ID, app key, and server URL.
// The plugin is then used to create a new user, login to LeanCloud, and save data to LeanCloud.
// The app uses a simple UI with three buttons to demonstrate the plugin's functionality.
// Each button press triggers a different action, such as creating a new user or saving data to LeanCloud.
// The app prints the user's ID or object ID to the console to demonstrate the plugin's functionality.
```

<-- END_MAIN -->