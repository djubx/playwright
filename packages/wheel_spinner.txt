<-- START_DESCRIPTION -->

# Wheel Spinner Package Overview
=====================================

The `wheel_spinner` Flutter package is a customizable wheel spinner control that allows users to select values from a circular list. It's perfect for applications that require a fun and interactive way to pick values, such as games, quizzes, or even a fortune wheel.

### Key Features:

* Customizable wheel design and layout
* Support for multiple wheel sections
* Animated wheel rotation
* Value selection callback

### When to Use:

* When you need a fun and interactive way to select values
* In games or quizzes that require a wheel-based selection mechanism
* In applications that require a unique and engaging user interface

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the Wheel Spinner Package
=============================================

### Step 1: Add the Package to Your Project

Add the `wheel_spinner` package to your `pubspec.yaml` file:

```yml
dependencies:
  wheel_spinner: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the `wheel_spinner` package in your Dart file:

```dart
import 'package:wheel_spinner/wheel_spinner.dart';
```

### Step 3: Create a Wheel Spinner

Create a `WheelSpinner` widget and customize its properties:

```dart
WheelSpinner(
  sections: 8,
  sectionWidth: 30,
  sectionHeight: 50,
  onValueChanged: (value) {
    print('Selected value: $value');
  },
)
```

### Platform-Specific Details:

* On Android, make sure to add the `android.permission.VIBRATE` permission to your `AndroidManifest.xml` file if you want to enable vibration when the wheel is spinning.
* On iOS, you need to add the `NSMotionUsageDescription` key to your `Info.plist` file to enable motion effects.

### Optimizations:

* To improve performance, you can reduce the number of wheel sections or decrease the animation duration.
* To customize the wheel design, you can use the `sectionBuilder` property to create your own section widgets.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:wheel_spinner/wheel_spinner.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  int _selectedValue = 0;

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Wheel Spinner Demo'),
        ),
        body: Center(
          child: WheelSpinner(
            sections: 8,
            sectionWidth: 30,
            sectionHeight: 50,
            onValueChanged: (value) {
              setState(() {
                _selectedValue = value;
              });
            },
          ),
        ),
        bottomNavigationBar: BottomAppBar(
          child: Text('Selected value: $_selectedValue'),
        ),
      ),
    );
  }
}

// The application flow:
// 1. The user runs the app and sees the wheel spinner on the screen.
// 2. The user spins the wheel by dragging their finger on the screen.
// 3. When the wheel stops spinning, the `onValueChanged` callback is called with the selected value.
// 4. The selected value is updated in the app state and displayed on the screen.
// 5. The user can spin the wheel again to select a new value.

// Final summary:
// The wheel spinner package provides a fun and interactive way to select values in a Flutter app.
// The package is customizable and easy to use, making it perfect for a variety of applications.
```

<-- END_MAIN -->