<-- START_DESCRIPTION -->

Activity Recognition Flutter Package
=====================================

The `activity_recognition_flutter` package is a Flutter plugin that allows you to recognize the user's current activity, such as walking, running, or standing still. This package uses the device's accelerometer and gyroscope sensors to detect the user's activity.

When to Use This Package
------------------------

This package is useful in various scenarios, such as:

*   Fitness apps: to track the user's physical activity and provide feedback
*   Health apps: to monitor the user's daily activity and provide recommendations
*   Games: to enhance the gaming experience by incorporating physical activity

Features
--------

*   Recognizes various activities, such as walking, running, standing still, and more
*   Provides an activity confidence level, indicating the accuracy of the recognized activity
*   Supports both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `activity_recognition_flutter` package, follow these steps:

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  activity_recognition_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:activity_recognition_flutter/activity_recognition_flutter.dart';
```

### Step 3: Request Permissions

Request the necessary permissions to access the device's sensors:

```dart
await ActivityRecognitionFlutter.requestPermission();
```

### Step 4: Start Activity Recognition

Start the activity recognition service:

```dart
await ActivityRecognitionFlutter.startActivityRecognition();
```

### Step 5: Get Recognized Activities

Get the recognized activities and their confidence levels:

```dart
ActivityRecognitionFlutter.getActivityRecognitionStream().listen((activity) {
  print('Recognized activity: ${activity.type}');
  print('Confidence level: ${activity.confidence}');
});
```

Platform-Specific Details
-------------------------

### Android

*   Add the following permission to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" />
```

*   Create a new file called `activity_recognition.xml` in the `res/xml` directory:

    ```xml
<?xml version="1.0" encoding="utf-8"?>
<activity-recognition android:enabled="true" />
```

### iOS

*   Add the following permission to your `Info.plist` file:

    ```xml
<key>NSMotionUsageDescription</key>
<string>This app needs access to motion data to recognize activities.</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:activity_recognition_flutter/activity_recognition_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  String _recognizedActivity = 'Unknown';
  int _confidenceLevel = 0;

  @override
  void initState() {
    super.initState();
    _requestPermission();
  }

  Future<void> _requestPermission() async {
    // Request permission to access activity recognition
    await ActivityRecognitionFlutter.requestPermission();

    // Start activity recognition
    await ActivityRecognitionFlutter.startActivityRecognition();

    // Get recognized activities
    ActivityRecognitionFlutter.getActivityRecognitionStream().listen((activity) {
      setState(() {
        _recognizedActivity = activity.type;
        _confidenceLevel = activity.confidence;
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Activity Recognition Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              Text('Recognized activity: $_recognizedActivity'),
              Text('Confidence level: $_confidenceLevel'),
            ],
          ),
        ),
      ),
    );
  }
}

// The app starts by requesting permission to access activity recognition.
// Once permission is granted, it starts the activity recognition service.
// The app then listens for recognized activities and updates the UI with the recognized activity and confidence level.
// The recognized activity and confidence level are displayed on the screen.
// The app continues to listen for recognized activities and update the UI in real-time.
```

<-- END_MAIN -->