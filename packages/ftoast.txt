<-- START_DESCRIPTION -->

# ftoast Flutter Package: A Detailed Overview
=============================================

The `ftoast` Flutter package is a popular library for displaying toast notifications in Flutter applications. It provides a simple and customizable way to show toast messages to users.

### When to Use `ftoast`

You can use `ftoast` in various scenarios, such as:

* Displaying success or error messages after a user action
* Showing a welcome message or a tutorial hint
* Providing feedback to users after a long-running operation

### Features of `ftoast`

Some key features of `ftoast` include:

* Customizable toast messages with text, icons, and colors
* Support for multiple toast types (e.g., success, error, warning)
* Configurable toast duration and animation
* Platform-specific optimizations for Android and iOS

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using `ftoast`
=============================

To use `ftoast` in your Flutter project, follow these steps:

### Step 1: Add `ftoast` to Your `pubspec.yaml` File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  ftoast: ^latest_version
```
Replace `latest_version` with the latest version of `ftoast` available on pub.dev.

### Step 2: Import `ftoast` in Your Dart File

Import `ftoast` in your Dart file:
```dart
import 'package:ftoast/ftoast.dart';
```
### Step 3: Initialize `ftoast`

Initialize `ftoast` in your `main` function or in a separate initialization function:
```dart
void main() {
  FToast.init();
  runApp(MyApp());
}
```
### Step 4: Show a Toast Message

Show a toast message using the `showToast` function:
```dart
FToast.showToast(
  msg: 'Hello, World!',
  toastLength: Toast.LENGTH_SHORT,
  gravity: ToastGravity.CENTER,
  timeInSecForIosWeb: 1,
  backgroundColor: Colors.red,
  textColor: Colors.white,
  fontSize: 16.0,
);
```
### Platform-Specific Configurations

For Android, you can customize the toast message by using the `ToastAndroid` class:
```dart
import 'package:ftoast/toast_android.dart';

ToastAndroid.show(
  'Hello, World!',
  ToastAndroid.LENGTH_SHORT,
  ToastAndroid.GRAVITY_CENTER,
  Colors.red,
  Colors.white,
  16.0,
);
```
For iOS, you can customize the toast message by using the `ToastIos` class:
```dart
import 'package:ftoast/toast_ios.dart';

ToastIos.show(
  'Hello, World!',
  ToastIos.LENGTH_SHORT,
  ToastIos.GRAVITY_CENTER,
  Colors.red,
  Colors.white,
  16.0,
);
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:ftoast/ftoast.dart';

void main() {
  FToast.init();
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'ftoast Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('ftoast Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: () {
                // Show a success toast message
                FToast.showToast(
                  msg: 'Success!',
                  toastLength: Toast.LENGTH_SHORT,
                  gravity: ToastGravity.CENTER,
                  timeInSecForIosWeb: 1,
                  backgroundColor: Colors.green,
                  textColor: Colors.white,
                  fontSize: 16.0,
                );
              },
              child: Text('Success Toast'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Show an error toast message
                FToast.showToast(
                  msg: 'Error!',
                  toastLength: Toast.LENGTH_SHORT,
                  gravity: ToastGravity.CENTER,
                  timeInSecForIosWeb: 1,
                  backgroundColor: Colors.red,
                  textColor: Colors.white,
                  fontSize: 16.0,
                );
              },
              child: Text('Error Toast'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks on the "Success Toast" button.
// 2. The `FToast.showToast` function is called with the success message and configuration.
// 3. The toast message is displayed on the screen for a short duration.
// 4. The user clicks on the "Error Toast" button.
// 5. The `FToast.showToast` function is called with the error message and configuration.
// 6. The toast message is displayed on the screen for a short duration.

// In summary, this code demonstrates how to use the `ftoast` package to display toast messages in a Flutter application.
```

<-- END_MAIN -->