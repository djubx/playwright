<-- START_DESCRIPTION -->

# Overview of the tex_text Flutter Package
=====================================================

The `tex_text` Flutter package is a powerful tool for rendering TeX equations in Flutter applications. It provides a simple and efficient way to display complex mathematical equations, making it ideal for educational, scientific, and technical apps.

### When to Use This Package

* Displaying mathematical equations in a Flutter app
* Creating educational apps that require complex mathematical expressions
* Rendering TeX equations in a scientific or technical context

### Features

* Renders TeX equations using the KaTeX library
* Supports a wide range of mathematical expressions and symbols
* Customizable font sizes and colors
* Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->


<-- START_TUTORIAL -->

# Setting Up and Using the tex_text Package
=============================================

### Step 1: Add the Package to Your Flutter Project

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  tex_text: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:tex_text/tex_text.dart';
```
### Step 3: Use the `TeXText` Widget

Use the `TeXText` widget to render a TeX equation:
```dart
TeXText(
  '\\frac{x^2 + y^2}{x + y} = \\frac{(x + y)^2 - 2xy}{x + y}',
  style: TextStyle(fontSize: 24),
)
```
### Platform-Specific Details

* Android: No additional setup required.
* iOS: Add the following line to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
This allows the app to load the KaTeX library from the internet.

### Optimizations

* Use a smaller font size to improve performance.
* Use a caching mechanism to store frequently used equations.

<-- END_TUTORIAL -->


<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:tex_text/tex_text.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TeX Text Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('TeX Text Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Render a simple TeX equation
              TeXText(
                '\\frac{x^2 + y^2}{x + y} = \\frac{(x + y)^2 - 2xy}{x + y}',
                style: TextStyle(fontSize: 24),
              ),
              SizedBox(height: 20),
              // Render a more complex TeX equation
              TeXText(
                '\\int_{0}^{\\infty} e^{-x^2} dx = \\frac{\\sqrt{\\pi}}{2}',
                style: TextStyle(fontSize: 24),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the RealFlutter widget.
// The RealFlutter widget builds a MaterialApp with a Scaffold containing an AppBar and a Center widget.
// The Center widget contains a Column with two TeXText widgets, each rendering a different TeX equation.
// The TeXText widgets use the KaTeX library to render the equations, and the style property is used to set the font size.
// The app uses a caching mechanism to store frequently used equations, and the NSAppTransportSecurity key is set in the Info.plist file to allow the app to load the KaTeX library from the internet.
```

<-- END_MAIN -->