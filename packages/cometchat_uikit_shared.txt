```markdown
<!-- START_DESCRIPTION -->
# CometChat UIKit Shared Flutter Package

The **cometchat_uikit_shared** package is a powerful toolkit designed for Flutter developers who want to integrate chat functionalities into their applications seamlessly. This package is part of the CometChat suite, which provides a comprehensive set of features for building real-time chat applications. 

## When to Use This Package
You should consider using the **cometchat_uikit_shared** package when:
- You need to implement chat features in your Flutter application quickly.
- You want to leverage pre-built UI components for chat functionalities.
- You are looking for a solution that supports both Android and iOS platforms with minimal configuration.

## Key Features
- **Pre-built UI Components**: The package offers a variety of customizable UI components for chat interfaces, including message lists, input fields, and user profiles.
- **Real-time Messaging**: It supports real-time messaging capabilities, allowing users to send and receive messages instantly.
- **User Management**: The package includes features for managing users, such as user presence and status updates.
- **Media Sharing**: Users can share images, videos, and other media types within the chat.
- **Customizable Themes**: You can easily customize the look and feel of the chat interface to match your app's branding.

Overall, the **cometchat_uikit_shared** package is an excellent choice for developers looking to add robust chat functionalities to their Flutter applications without starting from scratch.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up CometChat UIKit Shared

In this tutorial, we will walk through the setup process for the **cometchat_uikit_shared** package and demonstrate how to use it in a Flutter application.

## Step 1: Add Dependency
To get started, add the package to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  cometchat_uikit_shared: ^latest_version
```

Make sure to replace `latest_version` with the most recent version available on [pub.dev](https://pub.dev/packages/cometchat_uikit_shared).

## Step 2: Platform-Specific Configuration

### Android Configuration
1. Open `android/app/build.gradle` and ensure you have the following configurations:
   ```groovy
   android {
       ...
       defaultConfig {
           ...
           minSdkVersion 21 // Ensure this is set to at least 21
       }
   }
   ```

2. Add internet permissions in `AndroidManifest.xml`:
   ```xml
   <uses-permission android:name="android.permission.INTERNET"/>
   ```

### iOS Configuration
1. Open `ios/Runner/Info.plist` and add the following:
   ```xml
   <key>NSAppTransportSecurity</key>
   <dict>
       <key>NSAllowsArbitraryLoads</key>
       <true/>
   </dict>
   ```

2. Ensure your iOS deployment target is set to at least 10.0 in `ios/Podfile`:
   ```ruby
   platform :ios, '10.0'
   ```

## Step 3: Initialize CometChat
In your main application file, initialize CometChat with your app credentials. You can obtain these credentials from the CometChat dashboard.

```dart
import 'package:flutter/material.dart';
import 'package:cometchat_uikit_shared/cometchat_uikit_shared.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'CometChat Example',
      home: ChatScreen(),
    );
  }
}
```

## Step 4: Create a Chat Screen
Create a chat screen that utilizes the CometChat UI components.

```dart
class ChatScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Chat')),
      body: CometChatUI(
        appId: 'YOUR_APP_ID',
        region: 'YOUR_REGION',
        user: User(uid: 'USER_ID'),
      ),
    );
  }
}
```

Replace `YOUR_APP_ID`, `YOUR_REGION`, and `USER_ID` with your actual CometChat credentials.

Now, you have successfully set up the **cometchat_uikit_shared** package in your Flutter application!

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of CometChat UIKit Shared

```dart
import 'package:flutter/material.dart';
import 'package:cometchat_uikit_shared/cometchat_uikit_shared.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'CometChat Example',
      home: ChatScreen(),
    );
  }
}

class ChatScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Chat')),
      body: CometChatUI(
        appId: 'YOUR_APP_ID', // Replace with your CometChat App ID
        region: 'YOUR_REGION', // Replace with your CometChat Region
        user: User(uid: 'USER_ID'), // Replace with the user ID
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The main function starts the Flutter application by calling runApp() with MyApp.
// 2. MyApp is a StatelessWidget that builds a MaterialApp with a title and a home property set to ChatScreen.
// 3. ChatScreen is a StatelessWidget that creates a Scaffold with an AppBar and a body.
// 4. The body of the Scaffold contains the CometChatUI widget, which is responsible for rendering the chat interface.
// 5. The CometChatUI widget is initialized with the app ID, region, and user ID, allowing it to connect to the CometChat service and display the chat interface.
```

## Summary
In this example, we demonstrated how to set up and use the **cometchat_uikit_shared** package in a Flutter application. The application initializes the CometChat service and displays a chat interface using pre-built UI components. By following the steps outlined in the tutorial, you can easily integrate chat functionalities into your own Flutter applications.
<!-- END_MAIN -->
```