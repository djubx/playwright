<-- START_DESCRIPTION -->

**Search Highlight Text Flutter Package**
=====================================

The `search_highlight_text` Flutter package is a powerful tool for highlighting search results in text. It provides a simple and efficient way to highlight search queries in a given text, making it ideal for search bars, text editors, and other applications where search functionality is essential.

**When to Use This Package**
---------------------------

This package is perfect for any Flutter application that requires search functionality, such as:

* Search bars
* Text editors
* Chat applications
* Document viewers

**Features**
------------

* Highlights search queries in a given text
* Supports multiple search queries
* Customizable highlight color and style
* Works with both single-line and multi-line text

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setup and Usage**
-------------------

To use the `search_highlight_text` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  search_highlight_text: ^1.0.0
```
2. Import the package in your Dart file:
```dart
import 'package:search_highlight_text/search_highlight_text.dart';
```
3. Create a `SearchHighlightText` widget and pass in the text to be searched and the search query:
```dart
SearchHighlightText(
  text: 'This is a sample text',
  query: 'sample',
)
```
4. Customize the highlight color and style as needed:
```dart
SearchHighlightText(
  text: 'This is a sample text',
  query: 'sample',
  highlightColor: Colors.red,
  highlightStyle: TextStyle(fontSize: 20),
)
```
**Platform-Specific Details**
---------------------------

* Android: No additional setup required.
* iOS: No additional setup required.

**Configurations and Optimizations**
-----------------------------------

* For optimal performance, use a `TextEditingController` to manage the text and search query.
* Use a `StatefulWidget` to update the search query and text in real-time.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:search_highlight_text/search_highlight_text.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Search Highlight Text Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final TextEditingController _textController = TextEditingController();
  final TextEditingController _searchController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Search Highlight Text Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          children: [
            TextField(
              controller: _textController,
              decoration: InputDecoration(
                labelText: 'Text',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 20),
            TextField(
              controller: _searchController,
              decoration: InputDecoration(
                labelText: 'Search',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 20),
            SearchHighlightText(
              text: _textController.text,
              query: _searchController.text,
              highlightColor: Colors.red,
              highlightStyle: TextStyle(fontSize: 20),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters text into the text field.
// 2. The user enters a search query into the search field.
// 3. The SearchHighlightText widget is updated with the new text and search query.
// 4. The SearchHighlightText widget highlights the search query in the text.
// 5. The highlighted text is displayed to the user.

// In summary, the code flows as follows:
// The user interacts with the text and search fields, which updates the SearchHighlightText widget.
// The SearchHighlightText widget then highlights the search query in the text and displays it to the user.

```

<-- END_MAIN -->