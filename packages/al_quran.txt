<-- START_DESCRIPTION -->

# al_quran Flutter Package
The al_quran Flutter package is a comprehensive library for accessing and displaying Quranic data in Flutter applications. It provides a wide range of features, including Quranic text, translations, and recitations.

## Key Features

*   Access to Quranic text in Arabic and various translations
*   Support for multiple recitations and playback controls
*   Customizable display options for text and recitation playback
*   Offline support for Quranic data

## Use Cases

*   Building a Quranic study app with Arabic text and translations
*   Creating a prayer app with Quranic recitations and playback controls
*   Developing an Islamic education app with interactive Quranic lessons

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the al_quran Package

To use the al_quran package in your Flutter project, follow these steps:

1.  Add the package to your `pubspec.yaml` file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  al_quran: ^1.0.0
```

2.  Run `flutter pub get` to install the package.

## Platform-Specific Configurations

### Android

*   Add the following permissions to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```

### iOS

*   Add the following lines to your `Info.plist` file:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
```

## Using the Package

To use the package, import it in your Dart file:

```dart
import 'package:al_quran/al_quran.dart';
```

You can then access Quranic data using the `AlQuran` class:

```dart
AlQuran quran = AlQuran();
String arabicText = quran.getArabicText(1, 1);
String translation = quran.getTranslation(1, 1, 'en');
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:al_quran/al_quran.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Al Quran Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  AlQuran quran = AlQuran();
  String _arabicText = '';
  String _translation = '';

  void _loadQuranData() async {
    // Load Arabic text and translation for the first verse of the first surah
    String arabicText = quran.getArabicText(1, 1);
    String translation = quran.getTranslation(1, 1, 'en');

    setState(() {
      _arabicText = arabicText;
      _translation = translation;
    });
  }

  @override
  void initState() {
    super.initState();
    _loadQuranData();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Al Quran Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              _arabicText,
              style: TextStyle(fontSize: 24),
            ),
            Text(
              _translation,
              style: TextStyle(fontSize: 18),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and loads the Quranic data for the first verse of the first surah.
// 2. The Arabic text and translation are displayed on the screen.
// 3. The user can interact with the app by navigating to different surahs and verses.
// 4. The app updates the display with the new Quranic data.

// Summary:
// This code demonstrates how to use the al_quran package to load and display Quranic data in a Flutter app.
// It shows how to import the package, load the data, and display it on the screen.
// The app flow is explained in the comments above.
```

<-- END_MAIN -->