<-- START_DESCRIPTION -->

# CNIC Scanner Flutter Package
================================

The `cnic_scanner` Flutter package provides a simple and efficient way to scan and extract data from Computerized National Identity Cards (CNICs) in Pakistan. This package is ideal for applications that require user identification and verification, such as e-commerce platforms, financial services, and government institutions.

## Features

*   Scans CNICs using the device's camera
*   Extracts relevant data, including name, father's name, date of birth, and CNIC number
*   Supports both Android and iOS platforms
*   Provides a customizable UI for seamless integration with existing applications

## When to Use

This package is suitable for any application that requires user identification and verification, particularly in industries where Know Your Customer (KYC) regulations are applicable. Examples include:

*   E-commerce platforms
*   Financial services (e.g., banking, insurance)
*   Government institutions
*   Healthcare services

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the CNIC Scanner Package
=====================================================

## Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  cnic_scanner: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:cnic_scanner/cnic_scanner.dart';
```

## Step 3: Create a CNIC Scanner Instance

Create an instance of the `CNICScanner` class:

```dart
CNICScanner _scanner = CNICScanner();
```

## Step 4: Scan a CNIC

Call the `scan` method to initiate the scanning process:

```dart
_scanner.scan().then((data) {
  // Process the extracted data
  print(data);
}).catchError((error) {
  // Handle any errors that occur during scanning
  print(error);
});
```

## Platform-Specific Details

### Android

*   Add the following permissions to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.CAMERA" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```

*   If you're targeting Android 10 (API level 29) or later, add the following code to your `AndroidManifest.xml` file:

    ```xml
<application
  ...
  android:requestLegacyExternalStorage="true"
  ...>
```

### iOS

*   Add the following lines to your `Info.plist` file:

    ```xml
<key>NSCameraUsageDescription</key>
<string>This app needs camera access to scan CNICs</string>
<key>NSPhotoLibraryAddUsageDescription</key>
<string>This app needs photo library access to store scanned CNICs</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:cnic_scanner/cnic_scanner.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'CNIC Scanner Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  CNICScanner _scanner = CNICScanner();
  String _extractedData = '';

  // Step 1: Create a button to initiate the scanning process
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('CNIC Scanner Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: () {
                // Step 2: Call the scan method to initiate the scanning process
                _scanner.scan().then((data) {
                  // Step 3: Process the extracted data
                  setState(() {
                    _extractedData = data;
                  });
                }).catchError((error) {
                  // Step 4: Handle any errors that occur during scanning
                  print(error);
                });
              },
              child: Text('Scan CNIC'),
            ),
            Text(_extractedData),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Scan CNIC" button.
// 2. The scan method is called, which initiates the scanning process.
// 3. The user is prompted to take a photo of their CNIC.
// 4. The photo is processed, and the relevant data is extracted.
// 5. The extracted data is displayed on the screen.
// 6. If any errors occur during the scanning process, they are handled and printed to the console.

```

<-- END_MAIN -->