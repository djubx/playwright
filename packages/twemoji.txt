<-- START_DESCRIPTION -->

# Brazilian Locations Flutter Package
=====================================

The `brazilian_locations` Flutter package provides a simple and efficient way to work with Brazilian locations, including states and cities. This package is ideal for developers who need to create applications that require location-based data in Brazil.

### Features

*   Provides a list of all Brazilian states and cities
*   Allows you to retrieve states and cities by name or ID
*   Includes a utility function to format location names

### When to Use

This package is useful when you need to:

*   Create a dropdown list of Brazilian states or cities
*   Validate user input for Brazilian locations
*   Format location names for display purposes

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Brazilian Locations Package
=============================================

### Step 1: Add the Package to Your Project

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  brazilian_locations: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:brazilian_locations/brazilian_locations.dart';
```

### Step 3: Use the Package

You can now use the package to retrieve states and cities:

```dart
void main() {
  // Get all states
  List<State> states = BrazilianLocations.getStates();
  
  // Get all cities for a state
  List<City> cities = BrazilianLocations.getCities(stateId: 1);
  
  // Get a state by name
  State state = BrazilianLocations.getStateByName('São Paulo');
  
  // Get a city by name
  City city = BrazilianLocations.getCityByName('São Paulo', stateId: 1);
  
  // Format a location name
  String formattedLocation = BrazilianLocations.formatLocationName('SÃO PAULO');
}
```

### Platform-Specific Details

This package works on both Android and iOS platforms. No additional configuration is required.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:brazilian_locations/brazilian_locations.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Get all states
  List<State> states = BrazilianLocations.getStates();
  
  // Initialize selected state and city
  State selectedState;
  City selectedCity;
  
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Brazilian Locations Example'),
        ),
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            children: [
              // Dropdown list of states
              DropdownButtonFormField(
                decoration: InputDecoration(labelText: 'Select State'),
                items: states.map((state) {
                  return DropdownMenuItem(
                    child: Text(state.name),
                    value: state,
                  );
                }).toList(),
                onChanged: (value) {
                  setState(() {
                    selectedState = value;
                    // Get cities for selected state
                    List<City> cities = BrazilianLocations.getCities(stateId: selectedState.id);
                    // Update selected city
                    selectedCity = cities.first;
                  });
                },
              ),
              SizedBox(height: 16),
              // Dropdown list of cities
              DropdownButtonFormField(
                decoration: InputDecoration(labelText: 'Select City'),
                items: selectedState != null
                    ? BrazilianLocations.getCities(stateId: selectedState.id).map((city) {
                        return DropdownMenuItem(
                          child: Text(city.name),
                          value: city,
                        );
                      }).toList()
                    : [],
                onChanged: (value) {
                  setState(() {
                    selectedCity = value;
                  });
                },
              ),
              SizedBox(height: 16),
              // Display selected location
              Text(
                selectedCity != null
                    ? BrazilianLocations.formatLocationName(selectedCity.name)
                    : '',
                style: TextStyle(fontSize: 24),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user selects a state from the dropdown list.
// 2. The selected state is used to retrieve a list of cities.
// 3. The user selects a city from the dropdown list.
// 4. The selected city is displayed on the screen.
// 5. The city name is formatted using the BrazilianLocations.formatLocationName function.

// This example demonstrates how to use the Brazilian Locations package to create a simple application that allows users to select a state and city, and then displays the selected location.

```

<-- END_MAIN -->