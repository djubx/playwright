<-- START_DESCRIPTION -->

# relateddigital_flutter Package Overview
The relateddigital_flutter package is a Flutter plugin that enables you to integrate Related Digital's services into your Flutter application. Related Digital is a digital marketing platform that provides services such as push notifications, in-app messaging, and analytics.

## When to Use This Package
You can use this package when you want to leverage Related Digital's services in your Flutter application. For example, you can use this package to:

* Send targeted push notifications to your users
* Display in-app messages to your users
* Track user behavior and analytics

## Features
The relateddigital_flutter package provides the following features:

* Push notification support
* In-app messaging support
* Analytics support

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the relateddigital_flutter Package
To set up the relateddigital_flutter package, follow these steps:

### Step 1: Add the Package to Your pubspec.yaml File
Add the following line to your pubspec.yaml file:
```yml
dependencies:
  relateddigital_flutter: ^1.0.0
```
### Step 2: Import the Package
Import the package in your Dart file:
```dart
import 'package:relateddigital_flutter/relateddigital_flutter.dart';
```
### Step 3: Initialize the Package
Initialize the package in your main function:
```dart
void main() {
  runApp(MyApp());
  RelatedDigitalFlutter.init('YOUR_API_KEY', 'YOUR_API_SECRET');
}
```
Replace `YOUR_API_KEY` and `YOUR_API_SECRET` with your actual API key and secret.

### Platform-Specific Details
For Android, add the following lines to your AndroidManifest.xml file:
```xml
<application>
  ...
  <meta-data
    android:name="relateddigital.api_key"
    android:value="YOUR_API_KEY" />
  <meta-data
    android:name="relateddigital.api_secret"
    android:value="YOUR_API_SECRET" />
</application>
```
For iOS, add the following lines to your Info.plist file:
```xml
<key>RelatedDigitalApiKey</key>
<string>YOUR_API_KEY</string>
<key>RelatedDigitalApiSecret</key>
<string>YOUR_API_SECRET</string>
```
### Required Configurations
You need to configure the package to use your Related Digital account. You can do this by calling the `setAccount` method:
```dart
RelatedDigitalFlutter.setAccount('YOUR_ACCOUNT_ID');
```
Replace `YOUR_ACCOUNT_ID` with your actual account ID.

### Optimizations
You can optimize the package by setting the log level:
```dart
RelatedDigitalFlutter.setLogLevel(LogLevel.debug);
```
This will set the log level to debug.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:relateddigital_flutter/relateddigital_flutter.dart';

void main() {
  runApp(MyApp());
  RelatedDigitalFlutter.init('YOUR_API_KEY', 'YOUR_API_SECRET');
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Related Digital Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  void initState() {
    super.initState();
    RelatedDigitalFlutter.setAccount('YOUR_ACCOUNT_ID');
    RelatedDigitalFlutter.setLogLevel(LogLevel.debug);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Related Digital Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.display1,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: Icon(Icons.add),
      ),
    );
  }

  void _incrementCounter() {
    setState(() {
      _counter++;
    });
    RelatedDigitalFlutter.trackEvent('button_clicked');
  }
}

// Application flow:
// 1. The app initializes the RelatedDigitalFlutter package with the API key and secret.
// 2. The app sets the account ID and log level.
// 3. The app displays a button that increments a counter when clicked.
// 4. When the button is clicked, the app tracks an event using the RelatedDigitalFlutter package.
// 5. The app displays the counter value on the screen.
```

// Final summary:
// The code initializes the RelatedDigitalFlutter package and sets the account ID and log level.
// It then displays a button that increments a counter when clicked and tracks an event using the RelatedDigitalFlutter package.
// The counter value is displayed on the screen.

<-- END_MAIN -->