```markdown
<!-- START_DESCRIPTION -->
# gma_mediation_pangle Flutter Package

The `gma_mediation_pangle` Flutter package is designed to facilitate the integration of Pangle's ad mediation platform into Flutter applications. This package allows developers to manage ad placements efficiently, ensuring that they can maximize their ad revenue through a seamless integration process.

## When to Use This Package

You should consider using the `gma_mediation_pangle` package when:
- You want to implement ad mediation in your Flutter app to optimize ad revenue.
- You are targeting markets where Pangle is a popular ad network, particularly in Asia.
- You need a straightforward way to manage multiple ad networks through a single interface.

## Features

- **Cross-Platform Support**: Works on both Android and iOS, allowing for a unified codebase.
- **Easy Integration**: Simplifies the process of integrating Pangle ads into your Flutter application.
- **Ad Mediation**: Supports multiple ad networks, enabling you to maximize fill rates and revenue.
- **Event Handling**: Provides callbacks for ad events, allowing you to respond to ad loading, display, and errors.

By leveraging this package, developers can focus on building their applications while ensuring that they have a robust ad monetization strategy in place.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up gma_mediation_pangle

In this tutorial, we will walk through the setup process for the `gma_mediation_pangle` package and demonstrate how to use it in your Flutter application.

## Step 1: Add Dependency

First, add the `gma_mediation_pangle` package to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  gma_mediation_pangle: ^latest_version
```

Make sure to replace `latest_version` with the most recent version of the package.

## Step 2: Platform-Specific Configuration

### Android Configuration

1. **Update AndroidManifest.xml**: Add the necessary permissions and metadata in your `android/app/src/main/AndroidManifest.xml` file:

```xml
<manifest>
    <application>
        <!-- Add this inside the <application> tag -->
        <meta-data
            android:name="com.pangle.sdk.appid"
            android:value="YOUR_PANGLE_APP_ID" />
    </application>
</manifest>
```

2. **Gradle Configuration**: Ensure that your `android/build.gradle` file includes the required repositories:

```groovy
allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.pangle.cn' }
    }
}
```

### iOS Configuration

1. **Update Info.plist**: Add the necessary keys to your `ios/Runner/Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
<key>PangleAppID</key>
<string>YOUR_PANGLE_APP_ID</string>
```

2. **CocoaPods**: Ensure you have the latest version of CocoaPods installed and run:

```bash
cd ios
pod install
```

## Step 3: Initialize the Package

In your main Dart file, initialize the `gma_mediation_pangle` package:

```dart
import 'package:flutter/material.dart';
import 'package:gma_mediation_pangle/gma_mediation_pangle.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Pangle Mediation Demo',
      home: AdScreen(),
    );
  }
}
```

## Step 4: Implementing Ads

Create a new widget to handle ad loading and displaying:

```dart
class AdScreen extends StatefulWidget {
  @override
  _AdScreenState createState() => _AdScreenState();
}

class _AdScreenState extends State<AdScreen> {
  late GmaMediationPangle _pangle;

  @override
  void initState() {
    super.initState();
    _pangle = GmaMediationPangle();
    _pangle.initialize();
    _loadAd();
  }

  void _loadAd() {
    _pangle.loadAd(
      adUnitId: 'YOUR_AD_UNIT_ID',
      onAdLoaded: () {
        print('Ad loaded successfully');
      },
      onAdFailedToLoad: (error) {
        print('Ad failed to load: $error');
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Pangle Ad Example')),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            _pangle.showAd();
          },
          child: Text('Show Ad'),
        ),
      ),
    );
  }
}
```

This code initializes the Pangle mediation, loads an ad, and provides a button to display the ad when pressed.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of gma_mediation_pangle

```dart
import 'package:flutter/material.dart';
import 'package:gma_mediation_pangle/gma_mediation_pangle.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Pangle Mediation Demo',
      home: AdScreen(),
    );
  }
}

class AdScreen extends StatefulWidget {
  @override
  _AdScreenState createState() => _AdScreenState();
}

class _AdScreenState extends State<AdScreen> {
  late GmaMediationPangle _pangle;

  @override
  void initState() {
    super.initState();
    // Initialize the Pangle mediation instance
    _pangle = GmaMediationPangle();
    _pangle.initialize();
    // Load an ad when the screen is initialized
    _loadAd();
  }

  void _loadAd() {
    // Load an ad with the specified ad unit ID
    _pangle.loadAd(
      adUnitId: 'YOUR_AD_UNIT_ID',
      onAdLoaded: () {
        // Callback when the ad is successfully loaded
        print('Ad loaded successfully');
      },
      onAdFailedToLoad: (error) {
        // Callback when the ad fails to load
        print('Ad failed to load: $error');
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Pangle Ad Example')),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Show the loaded ad when the button is pressed
            _pangle.showAd();
          },
          child: Text('Show Ad'),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The app starts with the main function, which runs the MyApp widget.
// 2. MyApp builds a MaterialApp with AdScreen as the home widget.
// 3. In AdScreen, the Pangle mediation instance is initialized in initState.
// 4. An ad is loaded using the _loadAd method, which specifies the ad unit ID.
// 5. When the ad is successfully loaded, a message is printed to the console.
// 6. The user can press the "Show Ad" button to display the loaded ad.
// 7. If the ad fails to load, an error message is printed to the console.
```
<!-- END_MAIN -->
```

This structured blog provides a comprehensive overview of the `gma_mediation_pangle` package, including its features, setup instructions, and a complete example with detailed comments explaining the application flow.