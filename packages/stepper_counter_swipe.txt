<-- START_DESCRIPTION -->

# Stepper Counter Swipe Flutter Package
=====================================

The `stepper_counter_swipe` Flutter package provides a customizable stepper widget that allows users to increment or decrement a counter by swiping left or right. This package is ideal for applications that require a user-friendly and interactive way to adjust quantities, such as shopping carts or inventory management systems.

## Features

* Customizable stepper widget with swipe gestures
* Increment and decrement counter values
* Optional minimum and maximum value constraints
* Support for custom themes and styles

## When to Use

Use the `stepper_counter_swipe` package when you need a user-friendly and interactive way to adjust quantities in your Flutter application. This package is particularly useful in e-commerce, inventory management, and other applications where users need to quickly and easily adjust quantities.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Stepper Counter Swipe Package
===========================================================

## Step 1: Add the Package to Your Flutter Project

Add the `stepper_counter_swipe` package to your Flutter project by adding the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  stepper_counter_swipe: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the `stepper_counter_swipe` package in your Dart file:
```dart
import 'package:stepper_counter_swipe/stepper_counter_swipe.dart';
```
## Step 3: Create a Stepper Widget

Create a `StepperCounterSwipe` widget and customize its properties as needed:
```dart
StepperCounterSwipe(
  initialValue: 10,
  minValue: 0,
  maxValue: 100,
  stepValue: 1,
  onChanged: (value) {
    print('Counter value: $value');
  },
)
```
## Platform-Specific Details

The `stepper_counter_swipe` package works on both Android and iOS platforms. However, you may need to adjust the swipe gesture sensitivity and animation duration to suit your application's specific needs.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:stepper_counter_swipe/stepper_counter_swipe.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Stepper Counter Swipe Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counterValue = 10;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Stepper Counter Swipe Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Counter Value: $_counterValue',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            StepperCounterSwipe(
              initialValue: _counterValue,
              minValue: 0,
              maxValue: 100,
              stepValue: 1,
              onChanged: (value) {
                setState(() {
                  _counterValue = value;
                });
              },
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user launches the app and sees the initial counter value (10) displayed on the screen.
// 2. The user swipes left or right on the stepper widget to increment or decrement the counter value.
// 3. The `onChanged` callback is triggered whenever the counter value changes, updating the `_counterValue` state variable.
// 4. The updated counter value is displayed on the screen.
// 5. The user can continue swiping left or right to adjust the counter value within the specified range (0-100).

// Final summary:
// The `stepper_counter_swipe` package provides a customizable stepper widget that allows users to increment or decrement a counter value by swiping left or right. This demo app showcases the package's features and provides a simple example of how to use it in a Flutter application.
```

<-- END_MAIN -->