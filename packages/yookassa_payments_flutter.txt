<-- START_DESCRIPTION -->

# Yookassa Payments Flutter Package
=====================================

The `yookassa_payments_flutter` package is a Flutter plugin that allows you to integrate Yookassa payment gateway into your Flutter application. Yookassa is a popular payment gateway in Russia and other European countries.

## When to Use This Package
---------------------------

You can use this package when you need to accept payments from users in your Flutter application. This package supports various payment methods, including credit cards, online banking, and e-wallets.

## Features
------------

*   Supports multiple payment methods
*   Easy to integrate with your Flutter application
*   Secure payment processing
*   Supports both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Package
=============================================

## Step 1: Add the Package to Your Flutter Project
------------------------------------------------

To add the `yookassa_payments_flutter` package to your Flutter project, you need to add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  yookassa_payments_flutter: ^1.0.0
```

Then, run `flutter pub get` in your terminal to get the package.

## Step 2: Import the Package
---------------------------

To use the package, you need to import it in your Dart file:

```dart
import 'package:yookassa_payments_flutter/yookassa_payments_flutter.dart';
```

## Step 3: Initialize the Package
-------------------------------

To initialize the package, you need to call the `init` method and pass your Yookassa API key:

```dart
YookassaPaymentsFlutter.init(apiKey: 'YOUR_API_KEY');
```

## Step 4: Create a Payment Token
------------------------------

To create a payment token, you need to call the `createPaymentToken` method and pass the payment amount and currency:

```dart
YookassaPaymentsFlutter.createPaymentToken(
  amount: 100.0,
  currency: 'RUB',
).then((paymentToken) {
  // Use the payment token to charge the user's card
});
```

## Platform-Specific Details
---------------------------

### Android

To use the package on Android, you need to add the following code to your `AndroidManifest.xml` file:

```xml
<uses-permission android:name="android.permission.INTERNET" />
```

### iOS

To use the package on iOS, you need to add the following code to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:yookassa_payments_flutter/yookassa_payments_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Yookassa Payments Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  void initState() {
    super.initState();
    YookassaPaymentsFlutter.init(apiKey: 'YOUR_API_KEY');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: _scaffoldKey,
      appBar: AppBar(
        title: Text('Yookassa Payments Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Click the button to create a payment token',
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _createPaymentToken,
              child: Text('Create Payment Token'),
            ),
          ],
        ),
      ),
    );
  }

  void _createPaymentToken() {
    YookassaPaymentsFlutter.createPaymentToken(
      amount: 100.0,
      currency: 'RUB',
    ).then((paymentToken) {
      // Use the payment token to charge the user's card
      _scaffoldKey.currentState.showSnackBar(
        SnackBar(content: Text('Payment token created: $paymentToken')),
      );
    }).catchError((error) {
      _scaffoldKey.currentState.showSnackBar(
        SnackBar(content: Text('Error creating payment token: $error')),
      );
    });
  }
}

// The application flow is as follows:
// 1. The user clicks the "Create Payment Token" button.
// 2. The _createPaymentToken method is called, which creates a payment token using the YookassaPaymentsFlutter.createPaymentToken method.
// 3. The payment token is then used to charge the user's card.
// 4. If the payment token is created successfully, a snack bar is shown with the payment token.
// 5. If an error occurs while creating the payment token, a snack bar is shown with the error message.

// Summary: This code demonstrates how to use the YookassaPaymentsFlutter package to create a payment token and charge a user's card.
```

<-- END_MAIN -->