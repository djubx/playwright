<-- START_DESCRIPTION -->

# Video Thumbnail Slider Package
The `video_thumbnail_slider` package is a Flutter library that allows you to create a thumbnail slider for videos. It provides a customizable and easy-to-use widget that can be integrated into your Flutter app.

## When to Use
This package is useful when you want to display a video and allow users to navigate through it using a thumbnail slider. It's commonly used in video editing apps, video players, and social media platforms.

## Features
The `video_thumbnail_slider` package offers the following features:

* Customizable thumbnail size and spacing
* Support for various video formats
* Smooth and efficient scrolling
* Optional video playback controls

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
To use the `video_thumbnail_slider` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File
Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  video_thumbnail_slider: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package
Import the package in your Dart file:
```dart
import 'package:video_thumbnail_slider/video_thumbnail_slider.dart';
```
### Step 3: Create a Video Thumbnail Slider
Create a `VideoThumbnailSlider` widget and pass the video file path or URL to the `video` property:
```dart
VideoThumbnailSlider(
  video: 'assets/video.mp4',
  thumbnailSize: 100,
  spacing: 10,
)
```
### Platform-Specific Details
For Android, make sure to add the following line to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
```
For iOS, add the following line to your `Info.plist` file:
```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library to display video thumbnails.</string>
```
### Optimizations
To improve performance, you can reduce the thumbnail size or increase the spacing between thumbnails.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:video_thumbnail_slider/video_thumbnail_slider.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Step 1: Create a video file path or URL
  String videoPath = 'assets/video.mp4';

  // Step 2: Create a VideoThumbnailSlider widget
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Video Thumbnail Slider Demo'),
        ),
        body: Center(
          child: VideoThumbnailSlider(
            // Step 3: Pass the video file path or URL to the video property
            video: videoPath,
            // Step 4: Customize the thumbnail size and spacing
            thumbnailSize: 150,
            spacing: 20,
          ),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and creates a RealFlutter widget.
// 2. The RealFlutter widget creates a VideoThumbnailSlider widget and passes the video file path or URL to the video property.
// 3. The VideoThumbnailSlider widget displays a thumbnail slider for the video.
// 4. The user can navigate through the video by scrolling the thumbnail slider.
// 5. The VideoThumbnailSlider widget updates the video playback position based on the user's scroll position.
```

// Final summary:
// The code flows by creating a RealFlutter widget, which creates a VideoThumbnailSlider widget and passes the video file path or URL to the video property. The VideoThumbnailSlider widget displays a thumbnail slider for the video and updates the video playback position based on the user's scroll position.

<-- END_MAIN -->