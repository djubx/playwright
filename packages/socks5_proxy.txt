<-- START_DESCRIPTION -->

# Socks5 Proxy Flutter Package
================================

The `socks5_proxy` Flutter package provides a simple and efficient way to establish a SOCKS5 proxy connection in your Flutter application. This package is useful when you need to route your app's network traffic through a proxy server, such as in cases where you want to bypass geo-restrictions, hide your IP address, or access content that is blocked in your region.

## Features

*   Establishes a SOCKS5 proxy connection
*   Supports both Android and iOS platforms
*   Easy to use and integrate into your Flutter app

## When to Use

You can use this package in scenarios where you need to:

*   Bypass geo-restrictions and access content that is not available in your region
*   Hide your IP address and maintain anonymity while browsing the internet
*   Access content that is blocked in your region due to censorship or other restrictions

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Socks5 Proxy Package
=====================================================

## Step 1: Add the Package to Your Pubspec.yaml File

To use the `socks5_proxy` package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` file and add the following line under the `dependencies` section:

```yml
dependencies:
  socks5_proxy: ^1.0.0
```

## Step 2: Import the Package in Your Dart File

After adding the package to your `pubspec.yaml` file, you need to import it in your Dart file. Add the following line at the top of your Dart file:

```dart
import 'package:socks5_proxy/socks5_proxy.dart';
```

## Step 3: Create a Socks5 Proxy Instance

To establish a SOCKS5 proxy connection, you need to create a `Socks5Proxy` instance. You can do this by calling the `Socks5Proxy` constructor and passing in the proxy server's host and port:

```dart
Socks5Proxy _proxy = Socks5Proxy(
  host: 'your-proxy-server.com',
  port: 1080,
);
```

## Step 4: Establish the Proxy Connection

To establish the proxy connection, you need to call the `_proxy.connect()` method. This method returns a `Future` that completes when the connection is established:

```dart
_proxy.connect().then((_) {
  // Proxy connection established
}).catchError((error) {
  // Handle error
});
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:socks5_proxy/socks5_proxy.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Socks5 Proxy Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Socks5Proxy _proxy;

  @override
  void initState() {
    super.initState();
    _proxy = Socks5Proxy(
      host: 'your-proxy-server.com',
      port: 1080,
    );
  }

  void _establishProxyConnection() {
    _proxy.connect().then((_) {
      // Proxy connection established
      print('Proxy connection established');
      // You can now use the proxy connection to make HTTP requests
      // For example, you can use the http package to make a GET request
      // http.get('https://www.example.com').then((response) {
      //   print(response.body);
      // });
    }).catchError((error) {
      // Handle error
      print('Error establishing proxy connection: $error');
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Socks5 Proxy Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _establishProxyConnection,
          child: Text('Establish Proxy Connection'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a button to establish the proxy connection.
// 2. When the user clicks the button, the _establishProxyConnection method is called.
// 3. The _establishProxyConnection method creates a Socks5Proxy instance and calls the connect method to establish the proxy connection.
// 4. If the proxy connection is established successfully, the method prints a success message to the console.
// 5. If there is an error establishing the proxy connection, the method prints an error message to the console.
// 6. Once the proxy connection is established, the app can use the proxy connection to make HTTP requests.

// Note: You should replace 'your-proxy-server.com' with the actual host of your proxy server, and 1080 with the actual port of your proxy server.

```

<-- END_MAIN -->