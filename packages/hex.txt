<-- START_DESCRIPTION -->

Hex Package in Flutter
=====================

The `hex` package in Flutter is a utility library that provides an easy-to-use API for converting between hexadecimal strings and colors. It is a popular package among Flutter developers, with over 100,000 downloads on pub.dev.

When to Use
------------

The `hex` package is useful when you need to work with colors in your Flutter app, especially when dealing with design assets or APIs that provide color values in hexadecimal format. Here are some examples of when you might use this package:

* Converting a hexadecimal color string from a design asset to a `Color` object in Flutter.
* Sending a color value from your app to a server or API that expects a hexadecimal string.
* Storing color values in a database or file and needing to convert them to and from hexadecimal strings.

Features
--------

The `hex` package provides the following features:

* Conversion from hexadecimal strings to `Color` objects using the `Color.fromHex()` method.
* Conversion from `Color` objects to hexadecimal strings using the `Color.toHex()` method.
* Support for both RGB and ARGB color formats.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `hex` package in your Flutter app, follow these steps:

1. Add the `hex` package to your `pubspec.yaml` file:
```yml
dependencies:
  hex: ^0.2.0
```
2. Run `flutter pub get` to install the package.
3. Import the `hex` package in your Dart file:
```dart
import 'package:hex/hex.dart';
```
4. Use the `Color.fromHex()` method to convert a hexadecimal string to a `Color` object:
```dart
Color color = Color.fromHex('#FF0000');
```
5. Use the `Color.toHex()` method to convert a `Color` object to a hexadecimal string:
```dart
String hexString = color.toHex();
```

Platform-Specific Details
-------------------------

The `hex` package works on both Android and iOS platforms. However, there are some platform-specific details to be aware of:

* On Android, the `Color` class is part of the Android SDK, so you don't need to import any additional packages.
* On iOS, the `Color` class is part of the Flutter framework, so you need to import the `flutter/material.dart` package.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:hex/hex.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Hex Package Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  Color _color = Colors.white;

  void _changeColor() {
    // Convert a hexadecimal string to a Color object
    Color newColor = Color.fromHex('#${_randomHex()}');
    setState(() {
      _color = newColor;
    });
  }

  String _randomHex() {
    // Generate a random hexadecimal string
    return (Random().nextInt(16777215) + 16777216).toRadixString(16).substring(1);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Hex Package Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Color:',
              style: TextStyle(fontSize: 24),
            ),
            Text(
              _color.toHex(), // Convert the Color object to a hexadecimal string
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _changeColor,
              child: Text('Change Color'),
            ),
          ],
        ),
      ),
    );
  }
}
```

// This code demonstrates the use of the `hex` package in a Flutter app.
// The app displays a color and its corresponding hexadecimal string.
// When the user clicks the "Change Color" button, the app generates a new random color and updates the display.
// The `Color.fromHex()` method is used to convert a hexadecimal string to a `Color` object.
// The `Color.toHex()` method is used to convert a `Color` object to a hexadecimal string.

// The app uses a `StatefulWidget` to manage the state of the color.
// The `_changeColor()` function generates a new random color and updates the state.
// The `_randomHex()` function generates a random hexadecimal string.

// The app uses a `MaterialApp` and a `Scaffold` to provide a basic layout.
// The `AppBar` displays the title of the app.
// The `Center` widget is used to center the content of the app.
// The `Column` widget is used to display the color and its hexadecimal string.
// The `ElevatedButton` widget is used to provide a button to change the color.

<-- END_MAIN -->