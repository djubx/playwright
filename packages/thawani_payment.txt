```markdown
<!-- START_DESCRIPTION -->
# Thawani Payment Flutter Package

The **thawani_payment** Flutter package is designed to facilitate seamless payment processing in Flutter applications. It provides a straightforward way to integrate Thawani's payment gateway, allowing developers to accept payments from users efficiently. This package is particularly useful for e-commerce applications, service-based apps, or any platform that requires payment processing.

## When to Use This Package
- **E-commerce Applications**: If you're building an online store and need to handle transactions securely.
- **Service-Based Apps**: For applications that offer services and require upfront payments.
- **Subscription Services**: If your app operates on a subscription model, this package can help manage recurring payments.

## Features
- **Easy Integration**: Simple setup process to get started with payment processing.
- **Multiple Payment Methods**: Supports various payment methods, enhancing user experience.
- **Secure Transactions**: Ensures that all transactions are processed securely.
- **Customizable UI**: Allows developers to customize the payment interface to match their app's design.

Overall, the thawani_payment package is a robust solution for developers looking to implement payment processing in their Flutter applications.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up Thawani Payment in Flutter

## Step 1: Adding the Package to Your Project
To get started, you need to add the `thawani_payment` package to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  thawani_payment: ^latest_version
```

Make sure to replace `^latest_version` with the latest version available on [pub.dev](https://pub.dev/packages/thawani_payment).

## Step 2: Platform-Specific Configuration

### Android Configuration
1. Open your `AndroidManifest.xml` file located at `android/app/src/main/AndroidManifest.xml`.
2. Add the following permissions and metadata:

```xml
<uses-permission android:name="android.permission.INTERNET"/>
<application>
    ...
    <meta-data
        android:name="thawani_payment.api_key"
        android:value="YOUR_API_KEY"/>
</application>
```

### iOS Configuration
1. Open your `Info.plist` file located at `ios/Runner/Info.plist`.
2. Add the following entries:

```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
<key>thawani_payment.api_key</key>
<string>YOUR_API_KEY</string>
```

## Step 3: Using the Package
Now that you have configured the package, you can start using it in your Flutter application. Hereâ€™s a simple example of how to initiate a payment:

```dart
import 'package:flutter/material.dart';
import 'package:thawani_payment/thawani_payment.dart';

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('Thawani Payment Example')),
        body: Center(
          child: ElevatedButton(
            onPressed: () {
              // Initiate payment process
              ThawaniPayment.startPayment(
                amount: 100.0, // Amount to be charged
                currency: 'USD', // Currency type
                onSuccess: (response) {
                  // Handle successful payment
                  print('Payment Successful: $response');
                },
                onError: (error) {
                  // Handle payment error
                  print('Payment Error: $error');
                },
              );
            },
            child: Text('Pay Now'),
          ),
        ),
      ),
    );
  }
}
```

This code sets up a simple Flutter application with a button that initiates a payment when pressed. The `ThawaniPayment.startPayment` method is called with the required parameters, and success/error callbacks are provided to handle the payment response.
<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Thawani Payment Integration

```dart
import 'package:flutter/material.dart';
import 'package:thawani_payment/thawani_payment.dart';

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(title: Text('Thawani Payment Example')),
        body: Center(
          child: ElevatedButton(
            onPressed: () {
              // Initiate payment process
              ThawaniPayment.startPayment(
                amount: 100.0, // Amount to be charged
                currency: 'USD', // Currency type
                onSuccess: (response) {
                  // Handle successful payment
                  print('Payment Successful: $response');
                },
                onError: (error) {
                  // Handle payment error
                  print('Payment Error: $error');
                },
              );
            },
            child: Text('Pay Now'),
          ),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The app starts with the RealFlutter widget, which builds a MaterialApp.
// 2. Inside the MaterialApp, a Scaffold is created with an AppBar and a Center widget.
// 3. The Center widget contains an ElevatedButton labeled 'Pay Now'.
// 4. When the button is pressed, the ThawaniPayment.startPayment method is called.
// 5. The payment amount and currency are specified, along with success and error callbacks.
// 6. If the payment is successful, the success callback prints the response to the console.
// 7. If there is an error during the payment process, the error callback prints the error message.
```
<!-- END_MAIN -->

# Summary
In this blog post, we explored the **thawani_payment** Flutter package, detailing its features, setup process, and providing a complete example of how to integrate it into a Flutter application. The package simplifies payment processing, making it an excellent choice for developers looking to implement secure and efficient payment solutions in their apps. By following the tutorial and example provided, you can easily get started with Thawani payments in your Flutter projects.
```