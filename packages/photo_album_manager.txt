```dart
import 'package:flutter/material.dart';
import 'package:photo_album_manager/photo_album_manager.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Photo Album Manager Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  PhotoAlbumManager _photoAlbumManager = PhotoAlbumManager();
  List<PhotoAlbum> _photoAlbums = [];

  @override
  void initState() {
    super.initState();
    _loadPhotoAlbums();
  }

  Future<void> _loadPhotoAlbums() async {
    // Get a list of all photo albums on the device
    List<PhotoAlbum> photoAlbums = await _photoAlbumManager.getPhotoAlbums();
    setState(() {
      _photoAlbums = photoAlbums;
    });
  }

  Future<void> _createPhotoAlbum() async {
    // Create a new photo album
    PhotoAlbum photoAlbum = await _photoAlbumManager.createPhotoAlbum('New Album');
    setState(() {
      _photoAlbums.add(photoAlbum);
    });
  }

  Future<void> _deletePhotoAlbum(PhotoAlbum photoAlbum) async {
    // Delete a photo album
    await _photoAlbumManager.deletePhotoAlbum(photoAlbum);
    setState(() {
      _photoAlbums.remove(photoAlbum);
    });
  }

  Future<void> _addPhotoToAlbum(PhotoAlbum photoAlbum) async {
    // Add a photo to an album
    await _photoAlbumManager.addPhotoToAlbum(photoAlbum, 'path/to/photo.jpg');
  }

  Future<void> _removePhotoFromAlbum(PhotoAlbum photoAlbum) async {
    // Remove a photo from an album
    await _photoAlbumManager.removePhotoFromAlbum(photoAlbum, 'path/to/photo.jpg');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Photo Album Manager Demo'),
      ),
      body: ListView.builder(
        itemCount: _photoAlbums.length,
        itemBuilder: (context, index) {
          PhotoAlbum photoAlbum = _photoAlbums[index];
          return ListTile(
            title: Text(photoAlbum.name),
            trailing: IconButton(
              icon: Icon(Icons.delete),
              onPressed: () {
                _deletePhotoAlbum(photoAlbum);
              },
            ),
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _createPhotoAlbum,
        tooltip: 'Create Photo Album',
        child: Icon(Icons.add),
      ),
    );
  }
}

// Application flow:
// 1. The app loads a list of all photo albums on the device using the `getPhotoAlbums` method.
// 2. The user can create a new photo album by pressing the floating action button, which calls the `createPhotoAlbum` method.
// 3. The user can delete a photo album by pressing the delete button next to the album name, which calls the `deletePhotoAlbum` method.
// 4. The user can add a photo to an album by calling the `addPhotoToAlbum` method.
// 5. The user can remove a photo from an album by calling the `removePhotoFromAlbum` method.

<-- END_MAIN -->
```