<-- START_DESCRIPTION -->

Selectable Box Flutter Package
==============================

The `selectable_box` Flutter package provides a customizable widget that allows users to select multiple items from a list. It is a useful package when you need to implement a multi-select feature in your app.

Features
--------

*   Customizable widget for selecting multiple items
*   Supports various platforms, including Android and iOS
*   Easy to use and integrate into existing Flutter projects

When to Use
------------

Use the `selectable_box` package when you need to implement a multi-select feature in your app. For example, when you want to allow users to select multiple items from a list, such as selecting multiple contacts to send a message.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
----------------

To use the `selectable_box` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the `selectable_box` package to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  selectable_box: ^1.0.0
```

Then, run `flutter pub get` to get the package.

### Step 2: Import the Package

Import the `selectable_box` package in your Dart file:

```dart
import 'package:selectable_box/selectable_box.dart';
```

### Step 3: Use the SelectableBox Widget

Use the `SelectableBox` widget to create a multi-select list:

```dart
SelectableBox(
  items: [
    SelectableBoxItem(
      value: 'item1',
      label: 'Item 1',
    ),
    SelectableBoxItem(
      value: 'item2',
      label: 'Item 2',
    ),
    SelectableBoxItem(
      value: 'item3',
      label: 'Item 3',
    ),
  ],
  onChanged: (selectedItems) {
    print(selectedItems);
  },
)
```

Platform-Specific Details
-------------------------

The `selectable_box` package supports various platforms, including Android and iOS. However, there are some platform-specific details to note:

*   On Android, the `SelectableBox` widget uses the `ListView` widget to display the list of items. This means that the list will be scrollable if there are more items than can fit on the screen.
*   On iOS, the `SelectableBox` widget uses the `UITableView` widget to display the list of items. This means that the list will be scrollable if there are more items than can fit on the screen.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:selectable_box/selectable_box.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Selectable Box Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<SelectableBoxItem> _items = [
    SelectableBoxItem(
      value: 'item1',
      label: 'Item 1',
    ),
    SelectableBoxItem(
      value: 'item2',
      label: 'Item 2',
    ),
    SelectableBoxItem(
      value: 'item3',
      label: 'Item 3',
    ),
  ];

  List<String> _selectedItems = [];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Selectable Box Demo'),
      ),
      body: Center(
        child: SelectableBox(
          items: _items,
          onChanged: (selectedItems) {
            setState(() {
              _selectedItems = selectedItems;
            });
          },
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            Text('Selected Items:'),
            Text(_selectedItems.join(', ')),
          ],
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget is a stateless widget that wraps the MaterialApp widget.
// The MaterialApp widget is a top-level widget that provides a material design theme to the app.
// The home property of the MaterialApp widget is set to the MyHomePage widget.
// The MyHomePage widget is a stateful widget that provides a scaffold for the app.
// The scaffold includes an app bar, a body, and a bottom navigation bar.
// The body of the scaffold is a Center widget that wraps the SelectableBox widget.
// The SelectableBox widget is a customizable widget that allows users to select multiple items from a list.
// The items property of the SelectableBox widget is set to a list of SelectableBoxItem widgets.
// The onChanged property of the SelectableBox widget is a callback function that is called when the user selects or deselects an item.
// The callback function updates the _selectedItems list with the currently selected items.
// The bottom navigation bar displays the currently selected items.

```

<-- END_MAIN -->