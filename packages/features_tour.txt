<-- START_DESCRIPTION -->

# Features Tour Flutter Package
================================

The `features_tour` Flutter package is a powerful tool for creating interactive, step-by-step guides for your app's features. It allows you to highlight specific parts of your app's UI and provide explanations, making it easier for users to understand how to use your app.

When to use this package:

* When you want to introduce new features to your app and need to guide users through them.
* When you want to provide a tutorial or walkthrough for your app's main features.
* When you want to highlight specific parts of your app's UI and provide explanations.

Features:

* Customizable step-by-step guides
* Highlight specific parts of your app's UI
* Provide explanations and instructions for each step
* Support for multiple platforms (Android and iOS)

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting up the Features Tour Package
=====================================

To use the `features_tour` package, you need to add it to your pubspec.yaml file:

```yml
dependencies:
  features_tour: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Platform-Specific Configurations

For Android, you need to add the following configuration to your AndroidManifest.xml file:

```xml
<application
    ...
    android:hardwareAccelerated="true"
    ...>
```

For iOS, you need to add the following configuration to your Info.plist file:

```xml
<key>UIViewControllerBasedStatusBarAppearance</key>
<false/>
```

### Using the Package

To use the package, you need to create a `FeaturesTour` instance and pass it a list of `Feature` objects. Each `Feature` object represents a step in the guide and contains a `title`, `description`, and `target` (the widget to highlight).

```dart
FeaturesTour(
  features: [
    Feature(
      title: 'Step 1',
      description: 'This is the first step',
      target: Container(
        color: Colors.red,
        width: 100,
        height: 100,
      ),
    ),
    Feature(
      title: 'Step 2',
      description: 'This is the second step',
      target: Container(
        color: Colors.blue,
        width: 100,
        height: 100,
      ),
    ),
  ],
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:features_tour/features_tour.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Features Tour Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Features Tour Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Step 1: Highlight the red container
            Container(
              color: Colors.red,
              width: 100,
              height: 100,
            ),
            SizedBox(height: 20),
            // Step 2: Highlight the blue container
            Container(
              color: Colors.blue,
              width: 100,
              height: 100,
            ),
            SizedBox(height: 20),
            // Start the features tour
            ElevatedButton(
              onPressed: () {
                FeaturesTour(
                  features: [
                    Feature(
                      title: 'Step 1',
                      description: 'This is the first step',
                      target: Container(
                        color: Colors.red,
                        width: 100,
                        height: 100,
                      ),
                    ),
                    Feature(
                      title: 'Step 2',
                      description: 'This is the second step',
                      target: Container(
                        color: Colors.blue,
                        width: 100,
                        height: 100,
                      ),
                    ),
                  ],
                ).start(context);
              },
              child: Text('Start Features Tour'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow:
// 1. The user opens the app and sees the two containers (red and blue) on the screen.
// 2. The user clicks the "Start Features Tour" button to start the features tour.
// 3. The features tour starts and highlights the red container with a title and description.
// 4. The user clicks the "Next" button to move to the next step.
// 5. The features tour highlights the blue container with a title and description.
// 6. The user clicks the "Finish" button to end the features tour.
```

<-- END_MAIN -->

In summary, the code flows as follows:

1. The user opens the app and sees the two containers (red and blue) on the screen.
2. The user clicks the "Start Features Tour" button to start the features tour.
3. The features tour starts and highlights the red container with a title and description.
4. The user clicks the "Next" button to move to the next step.
5. The features tour highlights the blue container with a title and description.
6. The user clicks the "Finish" button to end the features tour.