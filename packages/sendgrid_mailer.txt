<-- START_DESCRIPTION -->

Sendgrid Mailer Flutter Package
==============================

The `sendgrid_mailer` Flutter package is a powerful tool for sending emails from your Flutter application using the SendGrid API. SendGrid is a cloud-based email service that provides a scalable and reliable way to send emails.

When to Use This Package
------------------------

You can use this package in a variety of scenarios, such as:

* Sending automated emails to users, like welcome emails or password reset emails
* Sending transactional emails, like order confirmations or shipping updates
* Sending marketing emails, like newsletters or promotional offers

Features
--------

The `sendgrid_mailer` package provides the following features:

* Easy integration with the SendGrid API
* Support for sending plain text and HTML emails
* Support for adding attachments to emails
* Support for using templates to generate email content

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Configuration
-----------------------

To use the `sendgrid_mailer` package, you need to add it to your Flutter project's `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  sendgrid_mailer: ^0.1.0
```

Then, run `flutter pub get` to install the package.

Android Configuration
--------------------

To use the `sendgrid_mailer` package on Android, you need to add the following configuration to your `AndroidManifest.xml` file:

```xml
<uses-permission android:name="android.permission.INTERNET" />
```

iOS Configuration
-----------------

To use the `sendgrid_mailer` package on iOS, you need to add the following configuration to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

Using the Package
-----------------

To use the `sendgrid_mailer` package, you need to import it in your Dart file:

```dart
import 'package:sendgrid_mailer/sendgrid_mailer.dart';
```

Then, you can use the `SendGridMailer` class to send emails:

```dart
SendGridMailer mailer = SendGridMailer(
  apiKey: 'YOUR_SENDGRID_API_KEY',
  from: 'your_email@example.com',
  to: 'recipient_email@example.com',
  subject: 'Test Email',
  body: 'This is a test email.',
);

mailer.send();
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:sendgrid_mailer/sendgrid_mailer.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  final _formKey = GlobalKey<FormState>();
  final _toController = TextEditingController();
  final _subjectController = TextEditingController();
  final _bodyController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'SendGrid Mailer Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('SendGrid Mailer Demo'),
        ),
        body: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Form(
            key: _formKey,
            child: Column(
              children: [
                TextFormField(
                  controller: _toController,
                  decoration: InputDecoration(
                    labelText: 'To',
                    border: OutlineInputBorder(),
                  ),
                  validator: (value) {
                    if (value.isEmpty) {
                      return 'Please enter a recipient email';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 16),
                TextFormField(
                  controller: _subjectController,
                  decoration: InputDecoration(
                    labelText: 'Subject',
                    border: OutlineInputBorder(),
                  ),
                  validator: (value) {
                    if (value.isEmpty) {
                      return 'Please enter a subject';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 16),
                TextFormField(
                  controller: _bodyController,
                  decoration: InputDecoration(
                    labelText: 'Body',
                    border: OutlineInputBorder(),
                  ),
                  validator: (value) {
                    if (value.isEmpty) {
                      return 'Please enter a body';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 16),
                ElevatedButton(
                  onPressed: () async {
                    if (_formKey.currentState.validate()) {
                      SendGridMailer mailer = SendGridMailer(
                        apiKey: 'YOUR_SENDGRID_API_KEY',
                        from: 'your_email@example.com',
                        to: _toController.text,
                        subject: _subjectController.text,
                        body: _bodyController.text,
                      );
                      await mailer.send();
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text('Email sent successfully')),
                      );
                    }
                  },
                  child: Text('Send Email'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters the recipient email, subject, and body in the form.
// 2. When the user clicks the "Send Email" button, the form is validated.
// 3. If the form is valid, a SendGridMailer object is created with the entered data.
// 4. The send() method of the SendGridMailer object is called to send the email.
// 5. If the email is sent successfully, a snackbar is shown with a success message.

// Note: You should replace 'YOUR_SENDGRID_API_KEY' with your actual SendGrid API key.
```

<-- END_MAIN -->