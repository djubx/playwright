<-- START_DESCRIPTION -->

# Geofence Flutter Package
The `geofence_flutter` package is a Flutter plugin that allows you to create and manage geofences, which are virtual boundaries around a specific location. This package is useful for apps that require location-based services, such as tracking a user's location, sending notifications when a user enters or exits a specific area, and more.

## Features
The `geofence_flutter` package offers the following features:

* Create and manage geofences
* Set up notifications when a user enters or exits a geofence
* Monitor the user's location and update the geofence status accordingly
* Support for both Android and iOS platforms

## When to Use
This package is useful for apps that require location-based services, such as:

* Tracking a user's location
* Sending notifications when a user enters or exits a specific area
* Providing location-based services, such as finding nearby restaurants or shops
* Creating location-based games or challenges

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Geofence Flutter Package
To use the `geofence_flutter` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File
Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  geofence_flutter: ^1.0.0
```
### Step 2: Import the Package
Import the package in your Dart file:
```dart
import 'package:geofence_flutter/geofence_flutter.dart';
```
### Step 3: Initialize the Package
Initialize the package by calling the `init` method:
```dart
GeofenceFlutter.initialize();
```
### Step 4: Create a Geofence
Create a geofence by calling the `createGeofence` method:
```dart
Geofence geofence = await GeofenceFlutter.createGeofence(
  id: 'my_geofence',
  latitude: 37.7749,
  longitude: -122.4194,
  radius: 1000,
);
```
### Step 5: Set Up Notifications
Set up notifications by calling the `setNotification` method:
```dart
await GeofenceFlutter.setNotification(
  id: 'my_notification',
  title: 'You have entered the geofence!',
  message: 'You are now within the geofence.',
);
```
### Platform-Specific Details
For Android, add the following lines to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
```
For iOS, add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to your location to work properly.</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to your location to work properly.</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:geofence_flutter/geofence_flutter.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Initialize the geofence package
  Future<void> _initGeofence() async {
    await GeofenceFlutter.initialize();
  }

  // Create a geofence
  Future<void> _createGeofence() async {
    Geofence geofence = await GeofenceFlutter.createGeofence(
      id: 'my_geofence',
      latitude: 37.7749,
      longitude: -122.4194,
      radius: 1000,
    );
    print('Geofence created: ${geofence.id}');
  }

  // Set up notifications
  Future<void> _setNotification() async {
    await GeofenceFlutter.setNotification(
      id: 'my_notification',
      title: 'You have entered the geofence!',
      message: 'You are now within the geofence.',
    );
    print('Notification set up');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Geofence Flutter Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _initGeofence,
              child: Text('Initialize Geofence'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _createGeofence,
              child: Text('Create Geofence'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _setNotification,
              child: Text('Set Up Notification'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and clicks the "Initialize Geofence" button.
// 2. The geofence package is initialized, and the user is prompted to allow location access.
// 3. The user clicks the "Create Geofence" button, and a geofence is created with the specified coordinates and radius.
// 4. The user clicks the "Set Up Notification" button, and a notification is set up to trigger when the user enters the geofence.
// 5. When the user enters the geofence, the notification is triggered, and the user receives a notification.

```

<-- END_MAIN -->