```markdown
<-- START_DESCRIPTION -->

# Websafe SVG Flutter Package: An Overview

The `websafe_svg` Flutter package is a powerful tool designed to simplify the process of rendering SVG (Scalable Vector Graphics) images in Flutter applications. SVGs are vector-based images that can scale without losing quality, making them ideal for responsive design. This package provides a straightforward API to load and display SVGs from various sources, including assets, network, and memory.

## When to Use `websafe_svg`

- **Responsive Design**: SVGs are perfect for applications that need to support multiple screen sizes and resolutions.
- **Iconography**: Use SVGs for icons to ensure they look sharp on all devices.
- **Animations**: SVGs can be animated, providing a richer user experience.

## Features

- **Asset Loading**: Easily load SVGs from your project's assets.
- **Network Loading**: Fetch and display SVGs from the web.
- **Memory Loading**: Render SVGs from raw string data.
- **Customization**: Modify SVG properties such as color and size directly in your Flutter code.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the Websafe SVG Package

In this tutorial, we'll walk through the setup and usage of the `websafe_svg` package in a Flutter project. We'll cover platform-specific configurations for both Android and iOS to ensure smooth integration.

## Setup

1. **Add Dependency**

   Add `websafe_svg` to your `pubspec.yaml` file:

   ```yaml
   dependencies:
     flutter:
       sdk: flutter
     websafe_svg: ^1.0.0
   ```

2. **Install Packages**

   Run the following command to install the new package:

   ```bash
   flutter pub get
   ```

## Platform-Specific Configuration

### Android

No additional configuration is required for Android. Ensure your `minSdkVersion` in `android/app/build.gradle` is set to at least 21 to support all SVG features.

### iOS

Ensure your iOS deployment target is set to at least iOS 9.0. You can set this in your `ios/Podfile`:

```ruby
platform :ios, '9.0'
```

## Using the Package

To use the `websafe_svg` package, import it into your Dart file:

```dart
import 'package:websafe_svg/websafe_svg.dart';
```

### Displaying an SVG from Assets

```dart
WebsafeSvg.asset(
  'assets/images/example.svg',
  width: 100.0,
  height: 100.0,
)
```

### Displaying an SVG from Network

```dart
WebsafeSvg.network(
  'https://example.com/image.svg',
  width: 100.0,
  height: 100.0,
)
```

### Displaying an SVG from Memory

```dart
WebsafeSvg.memory(
  svgStringData,
  width: 100.0,
  height: 100.0,
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

# Complete Example: Flutter Application Using Websafe SVG

Below is a complete Flutter application demonstrating the use of the `websafe_svg` package. This example covers loading SVGs from assets, network, and memory.

```dart
import 'package:flutter/material.dart';
import 'package:websafe_svg/websafe_svg.dart';

void main() {
  runApp(RealFlutterApp());
}

class RealFlutterApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Websafe SVG Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: SvgDemoPage(),
    );
  }
}

class SvgDemoPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Scaffold provides the basic material design visual layout structure
    return Scaffold(
      appBar: AppBar(
        title: Text('Websafe SVG Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Load SVG from assets
            WebsafeSvg.asset(
              'assets/images/example.svg',
              width: 100.0,
              height: 100.0,
            ),
            SizedBox(height: 20),
            // Load SVG from network
            WebsafeSvg.network(
              'https://example.com/image.svg',
              width: 100.0,
              height: 100.0,
            ),
            SizedBox(height: 20),
            // Load SVG from memory
            WebsafeSvg.memory(
              '<svg>...</svg>', // Replace with actual SVG string data
              width: 100.0,
              height: 100.0,
            ),
          ],
        ),
      ),
    );
  }
}
```

// The application starts by running the `RealFlutterApp` class.
// `RealFlutterApp` is a stateless widget that sets up the MaterialApp.
// The MaterialApp uses `SvgDemoPage` as its home, which is another stateless widget.
// `SvgDemoPage` builds a Scaffold with an AppBar and a body containing a Column.
// The Column centers its children and displays three SVGs using `WebsafeSvg`:
// 1. An SVG loaded from assets.
// 2. An SVG loaded from a network URL.
// 3. An SVG loaded from a memory string.
// Each SVG is displayed with a specified width and height, and separated by a SizedBox for spacing.

<-- END_MAIN -->
```