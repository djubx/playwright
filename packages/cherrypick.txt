<-- START_DESCRIPTION -->

# Cherrypick Flutter Package
The Cherrypick Flutter package is a powerful tool for managing and optimizing the process of picking images and videos from a device's gallery or camera. It provides a simple and intuitive API for developers to integrate media picking functionality into their Flutter applications.

## Key Features

*   Supports picking images and videos from the gallery or camera
*   Allows for customization of the media picking interface
*   Provides options for compressing and resizing images
*   Supports platform-specific features, such as Android's scoped storage and iOS's photo library

## When to Use Cherrypick

Cherrypick is ideal for applications that require users to select and upload media files, such as social media platforms, photo editing apps, and content management systems.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up Cherrypick

To use Cherrypick in your Flutter application, follow these steps:

1.  Add the Cherrypick package to your `pubspec.yaml` file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  cherrypick: ^1.0.0
```

2.  Run `flutter pub get` to install the package.

## Platform-Specific Configurations

### Android

*   Add the following permissions to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
<uses-permission android:name="android.permission.CAMERA" />
```

*   If you're targeting Android 10 or later, add the following code to your `AndroidManifest.xml` file to enable scoped storage:

    ```xml
<application
  ...
  android:requestLegacyExternalStorage="true"
  ...>
```

### iOS

*   Add the following permissions to your `Info.plist` file:

    ```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library to pick images.</string>
<key>NSCameraUsageDescription</key>
<string>This app needs access to your camera to take photos.</string>
```

## Using Cherrypick

To use Cherrypick, import the package and create an instance of the `Cherrypick` class:

```dart
import 'package:cherrypick/cherrypick.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  final Cherrypick _cherrypick = Cherrypick();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cherrypick Example'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            final pickedFile = await _cherrypick.pickImage();
            if (pickedFile != null) {
              print('Picked file: ${pickedFile.path}');
            }
          },
          child: Text('Pick Image'),
        ),
      ),
    );
  }
}
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:cherrypick/cherrypick.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Cherrypick Example',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  final Cherrypick _cherrypick = Cherrypick();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cherrypick Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () async {
                // Pick an image from the gallery
                final pickedFile = await _cherrypick.pickImage();
                if (pickedFile != null) {
                  print('Picked file: ${pickedFile.path}');
                }
              },
              child: Text('Pick Image'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                // Pick a video from the gallery
                final pickedFile = await _cherrypick.pickVideo();
                if (pickedFile != null) {
                  print('Picked file: ${pickedFile.path}');
                }
              },
              child: Text('Pick Video'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                // Take a photo with the camera
                final pickedFile = await _cherrypick.takePhoto();
                if (pickedFile != null) {
                  print('Picked file: ${pickedFile.path}');
                }
              },
              child: Text('Take Photo'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks on one of the buttons to pick an image, video, or take a photo.
// 2. The Cherrypick package is used to open the gallery or camera.
// 3. The user selects a file or takes a photo.
// 4. The selected file is returned to the application.
// 5. The file path is printed to the console.

// This example demonstrates how to use the Cherrypick package to pick images and videos from the gallery, and take photos with the camera.

```

<-- END_MAIN -->