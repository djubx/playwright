<-- START_DESCRIPTION -->

Interactive Bottom Sheet Flutter Package
=====================================

The `interactive_bottom_sheet` Flutter package provides a customizable bottom sheet that can be used to display interactive content, such as menus, settings, or other secondary content. This package is ideal for apps that require a flexible and customizable bottom sheet solution.

When to Use This Package
------------------------

*   Displaying menus or settings that require user interaction
*   Providing secondary content that complements the main app content
*   Creating a customizable bottom sheet that fits your app's design

Features
--------

*   Customizable bottom sheet with support for various content types
*   Support for gestures, such as dragging and tapping
*   Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `interactive_bottom_sheet` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  interactive_bottom_sheet: ^0.1.0
```

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:interactive_bottom_sheet/interactive_bottom_sheet.dart';
```

### Step 3: Create a Bottom Sheet

Create a bottom sheet using the `InteractiveBottomSheet` widget:

```dart
InteractiveBottomSheet(
  content: // Your content here,
  onDrag: // Handle drag events,
  onTap: // Handle tap events,
)
```

### Platform-Specific Details

*   Android: No additional configuration required.
*   iOS: No additional configuration required.

### Required Configurations or Optimizations

*   No additional configurations or optimizations required.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:interactive_bottom_sheet/interactive_bottom_sheet.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Interactive Bottom Sheet Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Interactive Bottom Sheet Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            showInteractiveBottomSheet(
              context: context,
              content: Container(
                height: 200,
                child: Center(
                  child: Text('Hello, World!'),
                ),
              ),
              onDrag: (value) {
                print('Dragged: $value');
              },
              onTap: () {
                print('Tapped');
              },
            );
          },
          child: Text('Show Bottom Sheet'),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user presses the "Show Bottom Sheet" button.
// 2. The `showInteractiveBottomSheet` function is called, displaying the bottom sheet.
// 3. The user can drag the bottom sheet up or down.
// 4. The `onDrag` callback is called with the current drag value.
// 5. The user can tap on the bottom sheet.
// 6. The `onTap` callback is called.
// 7. The bottom sheet can be dismissed by dragging it down or tapping outside of it.

// Summary: This code demonstrates how to use the `interactive_bottom_sheet` package to display a customizable bottom sheet. The bottom sheet can be dragged up or down and tapped, triggering the corresponding callbacks.
```

<-- END_MAIN -->