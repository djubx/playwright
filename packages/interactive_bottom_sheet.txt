```markdown
<-- START_DESCRIPTION -->

# Interactive Bottom Sheet Flutter Package

The `interactive_bottom_sheet` Flutter package is a versatile tool designed to enhance user interaction by providing a customizable bottom sheet widget. This package allows developers to create bottom sheets that can be dragged, resized, and interacted with in various ways, making it ideal for applications that require dynamic content presentation.

## When to Use

- **Dynamic Content Display**: Use this package when you need to display content that can change based on user interaction, such as filters, settings, or additional options.
- **Space Management**: Ideal for applications where screen space is limited, and you want to provide additional information without navigating away from the current screen.
- **Enhanced User Experience**: When you want to offer a more interactive and engaging user experience by allowing users to control how much content they see.

## Features

- **Customizable Height**: Adjust the height of the bottom sheet dynamically based on content or user interaction.
- **Smooth Animations**: Built-in animations for opening, closing, and resizing the bottom sheet.
- **Gesture Support**: Supports drag and swipe gestures for intuitive user interaction.
- **Platform Consistency**: Provides a consistent look and feel across both Android and iOS platforms.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Interactive Bottom Sheet

In this tutorial, we will walk through the process of setting up the `interactive_bottom_sheet` package in a Flutter project and demonstrate how to use it effectively.

## Setup Process

1. **Add Dependency**: First, add the package to your `pubspec.yaml` file.

   ```yaml
   dependencies:
     flutter:
       sdk: flutter
     interactive_bottom_sheet: ^1.0.0
   ```

2. **Install Packages**: Run `flutter pub get` to install the new package.

3. **Import the Package**: In your Dart file, import the package.

   ```dart
   import 'package:interactive_bottom_sheet/interactive_bottom_sheet.dart';
   ```

## Platform-Specific Details

### Android

- Ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21 to support the necessary animations and gestures.

  ```gradle
  android {
      defaultConfig {
          minSdkVersion 21
      }
  }
  ```

### iOS

- No additional setup is required for iOS, but ensure your deployment target is set to iOS 11.0 or higher in your `ios/Podfile`.

  ```ruby
  platform :ios, '11.0'
  ```

## Using the Package

To use the `interactive_bottom_sheet`, wrap your main widget with the `RealFlutter` class and define the bottom sheet content.

```dart
RealFlutter(
  bottomSheet: InteractiveBottomSheet(
    initialHeight: 0.3,
    maxHeight: 0.8,
    minHeight: 0.1,
    child: YourBottomSheetContent(),
  ),
  child: YourMainContent(),
);
```

- **initialHeight**: The initial height of the bottom sheet when it first appears.
- **maxHeight**: The maximum height the bottom sheet can expand to.
- **minHeight**: The minimum height the bottom sheet can shrink to.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:interactive_bottom_sheet/interactive_bottom_sheet.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Interactive Bottom Sheet Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutterDemo(),
    );
  }
}

class RealFlutterDemo extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Interactive Bottom Sheet'),
      ),
      body: RealFlutter(
        // Main content of the application
        child: Center(
          child: Text('Main Content Area'),
        ),
        // Interactive bottom sheet configuration
        bottomSheet: InteractiveBottomSheet(
          initialHeight: 0.3, // Initial height of the bottom sheet
          maxHeight: 0.8,     // Maximum height the bottom sheet can expand to
          minHeight: 0.1,     // Minimum height the bottom sheet can shrink to
          child: BottomSheetContent(), // Content of the bottom sheet
        ),
      ),
    );
  }
}

class BottomSheetContent extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      color: Colors.white,
      child: Column(
        children: [
          ListTile(
            leading: Icon(Icons.info),
            title: Text('Information'),
            onTap: () {
              // Handle tap
            },
          ),
          ListTile(
            leading: Icon(Icons.settings),
            title: Text('Settings'),
            onTap: () {
              // Handle tap
            },
          ),
          // Additional list items can be added here
        ],
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The `MyApp` class sets up the MaterialApp and defines the home screen as `RealFlutterDemo`.
// 2. `RealFlutterDemo` is a StatelessWidget that builds a Scaffold with an AppBar and a body.
// 3. The body of the Scaffold uses the `RealFlutter` widget to wrap the main content and the interactive bottom sheet.
// 4. The `InteractiveBottomSheet` is configured with initial, max, and min heights, and contains a `BottomSheetContent` widget.
// 5. `BottomSheetContent` is a simple widget with a list of options, each represented by a ListTile.
// 6. The bottom sheet can be dragged and resized by the user, providing an interactive experience.

<-- END_MAIN -->
```