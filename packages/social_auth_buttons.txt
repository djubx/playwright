<-- START_DESCRIPTION -->

# Social Auth Buttons Flutter Package
=====================================

The `social_auth_buttons` Flutter package provides a simple and convenient way to add social media authentication buttons to your Flutter app. With this package, you can easily integrate authentication with popular social media platforms such as Facebook, Twitter, Google, and more.

### When to Use This Package

This package is ideal for apps that require social media authentication, such as:

* Social media sharing apps
* Online communities
* E-commerce apps
* Gaming apps

### Features

* Supports multiple social media platforms (Facebook, Twitter, Google, etc.)
* Customizable button styles and layouts
* Easy integration with existing authentication systems

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `social_auth_buttons` package, follow these steps:

### Step 1: Add the Package to Your Pubspec File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  social_auth_buttons: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:social_auth_buttons/social_auth_buttons.dart';
```
### Step 3: Configure Platform-Specific Settings

#### Android

Add the following lines to your `AndroidManifest.xml` file:
```xml
<application>
  ...
  <meta-data android:name="com.facebook.sdk.ApplicationId" android:value="YOUR_APP_ID"/>
  <meta-data android:name="com.twitter.sdk.android.CONSUMER_KEY" android:value="YOUR_CONSUMER_KEY"/>
  <meta-data android:name="com.twitter.sdk.android.CONSUMER_SECRET" android:value="YOUR_CONSUMER_SECRET"/>
  ...
</application>
```
Replace `YOUR_APP_ID`, `YOUR_CONSUMER_KEY`, and `YOUR_CONSUMER_SECRET` with your actual Facebook and Twitter app credentials.

#### iOS

Add the following lines to your `Info.plist` file:
```xml
<key>FacebookAppID</key>
<string>YOUR_APP_ID</string>
<key>TwitterConsumerKey</key>
<string>YOUR_CONSUMER_KEY</string>
<key>TwitterConsumerSecret</key>
<string>YOUR_CONSUMER_SECRET</string>
```
Replace `YOUR_APP_ID`, `YOUR_CONSUMER_KEY`, and `YOUR_CONSUMER_SECRET` with your actual Facebook and Twitter app credentials.

### Step 4: Use the Package

Create a `SocialAuthButtons` widget and pass in the required parameters:
```dart
SocialAuthButtons(
  facebookAppId: 'YOUR_APP_ID',
  twitterConsumerKey: 'YOUR_CONSUMER_KEY',
  twitterConsumerSecret: 'YOUR_CONSUMER_SECRET',
  googleClientId: 'YOUR_CLIENT_ID',
  onPressed: (platform) {
    // Handle authentication response
  },
)
```
Replace `YOUR_APP_ID`, `YOUR_CONSUMER_KEY`, `YOUR_CONSUMER_SECRET`, and `YOUR_CLIENT_ID` with your actual app credentials.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:social_auth_buttons/social_auth_buttons.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Social Auth Buttons Demo'),
        ),
        body: Center(
          child: SocialAuthButtons(
            facebookAppId: 'YOUR_APP_ID',
            twitterConsumerKey: 'YOUR_CONSUMER_KEY',
            twitterConsumerSecret: 'YOUR_CONSUMER_SECRET',
            googleClientId: 'YOUR_CLIENT_ID',
            onPressed: (platform) {
              // Handle authentication response
              print('Authenticated with $platform');
            },
          ),
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user opens the app and is presented with a screen containing social media authentication buttons.
// 2. The user clicks on a button to authenticate with a social media platform.
// 3. The app redirects the user to the social media platform's authentication page.
// 4. The user authenticates with the social media platform and is redirected back to the app.
// 5. The app receives the authentication response and handles it accordingly.
// 6. The user is logged in to the app and can access protected content.

// Summary:
// The Social Auth Buttons package provides a simple and convenient way to add social media authentication to your Flutter app.
// The package supports multiple social media platforms and provides a customizable button layout.
// The app flow involves redirecting the user to the social media platform's authentication page and handling the authentication response.
```

<-- END_MAIN -->