```markdown
<-- START_DESCRIPTION -->

# Animated Toast List Flutter Package

The `animated_toast_list` Flutter package is a versatile tool designed to enhance user interaction by providing animated toast notifications. These notifications are temporary, non-intrusive messages that appear on the screen to inform users about various events or actions within the app. The package is particularly useful in scenarios where you need to provide feedback to users without disrupting their workflow, such as confirming an action, displaying error messages, or showing updates.

## Features

- **Customizable Animations**: Choose from a variety of animations to display your toast messages, making them more engaging and visually appealing.
- **Flexible Positioning**: Display toasts at different positions on the screen, such as top, center, or bottom.
- **Duration Control**: Set how long each toast message should be visible.
- **Queue Management**: Automatically manage multiple toast messages in a queue, ensuring that each message is displayed in sequence.

## When to Use

- **Form Submissions**: Notify users of successful or failed form submissions.
- **Background Processes**: Inform users about the completion of background tasks.
- **User Actions**: Provide feedback for user actions like button presses or menu selections.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using Animated Toast List

In this tutorial, we will walk through the process of setting up the `animated_toast_list` package in a Flutter project and demonstrate how to use its features effectively.

## Setup

1. **Add Dependency**

   First, add the `animated_toast_list` package to your `pubspec.yaml` file:

   ```yaml
   dependencies:
     flutter:
       sdk: flutter
     animated_toast_list: ^1.0.0
   ```

2. **Install Packages**

   Run the following command to install the new package:

   ```bash
   flutter pub get
   ```

3. **Platform-Specific Configurations**

   - **Android**: Ensure your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

     ```gradle
     android {
         defaultConfig {
             minSdkVersion 21
         }
     }
     ```

   - **iOS**: No additional configuration is required for iOS.

## Usage

To use the `animated_toast_list` package, follow these steps:

1. **Import the Package**

   Import the package in your Dart file:

   ```dart
   import 'package:animated_toast_list/animated_toast_list.dart';
   ```

2. **Initialize the Toast List**

   Create an instance of the `RealFlutter` class to manage your toast notifications:

   ```dart
   final RealFlutter toastManager = RealFlutter();
   ```

3. **Display a Toast**

   Use the `showToast` method to display a toast message:

   ```dart
   toastManager.showToast(
     message: "This is a toast message!",
     duration: Duration(seconds: 3),
     position: ToastPosition.bottom,
     animation: ToastAnimation.fade,
   );
   ```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:animated_toast_list/animated_toast_list.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Animated Toast List Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: ToastDemoPage(),
    );
  }
}

class ToastDemoPage extends StatefulWidget {
  @override
  _ToastDemoPageState createState() => _ToastDemoPageState();
}

class _ToastDemoPageState extends State<ToastDemoPage> {
  // Initialize the RealFlutter toast manager
  final RealFlutter toastManager = RealFlutter();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Toast Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Show a toast message when the button is pressed
            toastManager.showToast(
              message: "Hello, this is a toast!",
              duration: Duration(seconds: 2),
              position: ToastPosition.bottom,
              animation: ToastAnimation.slide,
            );
          },
          child: Text('Show Toast'),
        ),
      ),
    );
  }
}

// Application Flow:
// 1. The app starts with the main function, which runs MyApp.
// 2. MyApp is a StatelessWidget that sets up the MaterialApp with a home page of ToastDemoPage.
// 3. ToastDemoPage is a StatefulWidget that manages the state for displaying toast messages.
// 4. In the _ToastDemoPageState, a RealFlutter instance is created to manage toast notifications.
// 5. The build method of _ToastDemoPageState returns a Scaffold with an AppBar and a Center widget containing an ElevatedButton.
// 6. When the button is pressed, the showToast method of RealFlutter is called to display a toast message at the bottom of the screen with a slide animation.
// 7. The toast message is displayed for 2 seconds before disappearing.

```

<-- END_MAIN -->
```