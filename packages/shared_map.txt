<-- START_DESCRIPTION -->

# Shared Map Flutter Package
The `shared_map` Flutter package allows you to share a map between different parts of your app, enabling features like map caching and offline support. It's particularly useful when you need to display a map in multiple places within your app, or when you want to provide a seamless map experience even when the user's internet connection is unstable.

Some key features of the `shared_map` package include:

* Map caching: The package caches map tiles locally, reducing the need for repeated network requests and improving performance.
* Offline support: The package allows you to download map tiles for offline use, making it ideal for apps that require map functionality even without an internet connection.
* Shared map instance: The package provides a shared map instance that can be accessed from anywhere within your app, making it easy to display the same map in multiple places.

When to use this package:

* When you need to display a map in multiple places within your app.
* When you want to provide offline map support.
* When you want to improve map performance by reducing network requests.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Shared Map Package
To use the `shared_map` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter:
    sdk: flutter
  shared_map: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:shared_map/shared_map.dart';
```
4. Create a new instance of the `SharedMap` class:
```dart
SharedMap _sharedMap = SharedMap();
```
5. Configure the map by setting the map type, initial camera position, and other options:
```dart
_sharedMap.mapType = MapType.normal;
_sharedMap.initialCameraPosition = CameraPosition(
  target: LatLng(37.7749, -122.4194),
  zoom: 12,
);
```
6. Use the `SharedMap` instance to display the map in your app:
```dart
SharedMapWidget(
  sharedMap: _sharedMap,
)
```
Platform-specific details:

* On Android, you need to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
```
* On iOS, you need to add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:shared_map/shared_map.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shared Map Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  SharedMap _sharedMap;

  @override
  void initState() {
    super.initState();
    _sharedMap = SharedMap();
    _sharedMap.mapType = MapType.normal;
    _sharedMap.initialCameraPosition = CameraPosition(
      target: LatLng(37.7749, -122.4194),
      zoom: 12,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Shared Map Demo'),
      ),
      body: Center(
        child: SharedMapWidget(
          sharedMap: _sharedMap,
        ),
      ),
    );
  }
}

// The app starts by creating a new instance of the MyApp class.
// The MyApp class builds a MaterialApp with a title and a home page.
// The home page is an instance of the MyHomePage class.
// The MyHomePage class is a stateful widget that creates a new instance of the SharedMap class.
// The SharedMap class is configured with a map type and an initial camera position.
// The SharedMap instance is then used to display the map in the app.
// The map is displayed using the SharedMapWidget.
```

<-- END_MAIN -->