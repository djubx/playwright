<-- START_DESCRIPTION -->

# Date Cupertino Bottom Sheet Picker
The `date_cupertino_bottom_sheet_picker` Flutter package provides a simple and intuitive way to display a Cupertino-style bottom sheet for selecting dates. This package is ideal for applications that require a seamless and user-friendly date selection experience.

## Features
- Cupertino-style bottom sheet for date selection
- Support for both Android and iOS platforms
- Customizable date format and display
- Easy integration with existing Flutter applications

## When to Use
This package is perfect for applications that require a simple and intuitive date selection experience, such as:

- Scheduling appointments or events
- Setting deadlines or reminders
- Selecting dates for travel or booking

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
To use the `date_cupertino_bottom_sheet_picker` package, follow these steps:

### Step 1: Add the Package to Your Project
Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  date_cupertino_bottom_sheet_picker: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package
Import the package in your Dart file:
```dart
import 'package:date_cupertino_bottom_sheet_picker/date_cupertino_bottom_sheet_picker.dart';
```
### Step 3: Use the Package
To display the date picker, use the `showCupertinoDatePicker` function:
```dart
showCupertinoDatePicker(
  context: context,
  initialDate: DateTime.now(),
  onDateChanged: (date) {
    // Handle date selection
  },
);
```
### Platform-Specific Details
- For Android, make sure to add the following line to your `AndroidManifest.xml` file:
```xml
<uses-feature android:name="android.hardware.touchscreen" android:required="false" />
```
- For iOS, make sure to add the following line to your `Info.plist` file:
```xml
<key>UIViewControllerBasedStatusBarAppearance</key>
<false/>
```
### Configurations and Optimizations
- To customize the date format, use the `dateFormat` property:
```dart
showCupertinoDatePicker(
  context: context,
  initialDate: DateTime.now(),
  dateFormat: 'yyyy-MM-dd',
  onDateChanged: (date) {
    // Handle date selection
  },
);
```
- To optimize performance, use the `use24HourFormat` property:
```dart
showCupertinoDatePicker(
  context: context,
  initialDate: DateTime.now(),
  use24HourFormat: true,
  onDateChanged: (date) {
    // Handle date selection
  },
);
```
<-- END_TUTORIAL -->

<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:date_cupertino_bottom_sheet_picker/date_cupertino_bottom_sheet_picker.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Date Cupertino Bottom Sheet Picker Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  DateTime _selectedDate = DateTime.now();

  void _showDatePicker() {
    showCupertinoDatePicker(
      context: context,
      initialDate: _selectedDate,
      onDateChanged: (date) {
        setState(() {
          _selectedDate = date;
        });
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Date Cupertino Bottom Sheet Picker Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Selected Date: ${_selectedDate.toString()}',
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _showDatePicker,
              child: Text('Show Date Picker'),
            ),
          ],
        ),
      ),
    );
  }
}
```
// This code demonstrates the usage of the `date_cupertino_bottom_sheet_picker` package.
// The `_showDatePicker` function is called when the "Show Date Picker" button is pressed.
// This function displays the Cupertino-style date picker using the `showCupertinoDatePicker` function.
// When a date is selected, the `_selectedDate` variable is updated, and the UI is rebuilt to display the new date.
// The `Scaffold` widget is used to provide a basic material design layout.
// The `AppBar` widget is used to display the app title.
// The `Center` widget is used to center the content horizontally and vertically.
// The `Column` widget is used to display the content in a vertical column.
// The `Text` widget is used to display the selected date.
// The `ElevatedButton` widget is used to display the "Show Date Picker" button.

<-- END_MAIN -->