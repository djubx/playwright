<-- START_DESCRIPTION -->

# grecaptcha Flutter Package
================================

The grecaptcha Flutter package is a powerful tool for integrating Google's reCAPTCHA into your Flutter applications. reCAPTCHA is a free service that protects your website from spam and abuse by verifying that the user is a human, not a bot. This package provides a simple and convenient way to add reCAPTCHA to your Flutter app, ensuring that your app is protected from automated traffic.

## When to Use This Package
---------------------------

You should use this package in the following scenarios:

* When you want to protect your app from spam and abuse
* When you need to verify that the user is a human, not a bot
* When you want to add an extra layer of security to your app

## Features
------------

The grecaptcha Flutter package provides the following features:

* Supports both Android and iOS platforms
* Easy to integrate and use
* Supports multiple reCAPTCHA types, including Invisible reCAPTCHA and reCAPTCHA v2
* Provides a customizable widget for displaying the reCAPTCHA

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Pubspec.yaml File
------------------------------------------------

Add the following line to your pubspec.yaml file:
```yml
dependencies:
  grecaptcha: ^1.0.0
```
Then, run `flutter pub get` to get the package.

## Step 2: Import the Package
---------------------------

Import the package in your Dart file:
```dart
import 'package:grecaptcha/grecaptcha.dart';
```
## Step 3: Create a reCAPTCHA Instance
----------------------------------

Create a reCAPTCHA instance using the `GRecaptcha` class:
```dart
GRecaptcha _recaptcha = GRecaptcha(
  apiKey: 'YOUR_API_KEY',
  apiSecret: 'YOUR_API_SECRET',
);
```
Replace `YOUR_API_KEY` and `YOUR_API_SECRET` with your actual reCAPTCHA API key and secret.

## Step 4: Display the reCAPTCHA
------------------------------

Use the `GRecaptchaWidget` to display the reCAPTCHA:
```dart
GRecaptchaWidget(
  recaptcha: _recaptcha,
  onVerified: (token) {
    // Handle the verified token
  },
)
```
## Platform-Specific Details
---------------------------

### Android

Add the following lines to your AndroidManifest.xml file:
```xml
<application>
  ...
  <meta-data
    android:name="com.google.android.gms.version"
    android:value="@integer/google_play_services_version" />
</application>
```
### iOS

Add the following lines to your Info.plist file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:grecaptcha/grecaptcha.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'reCAPTCHA Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  GRecaptcha _recaptcha;

  @override
  void initState() {
    super.initState();
    _recaptcha = GRecaptcha(
      apiKey: 'YOUR_API_KEY',
      apiSecret: 'YOUR_API_SECRET',
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('reCAPTCHA Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            GRecaptchaWidget(
              recaptcha: _recaptcha,
              onVerified: (token) {
                // Handle the verified token
                print('Verified token: $token');
              },
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by creating a MaterialApp with a title and theme.
// The home page is a Scaffold with an AppBar and a body.
// The body contains a Center widget with a Column of children.
// The Column contains a single child, the GRecaptchaWidget.
// When the user interacts with the reCAPTCHA, the onVerified callback is called with the verified token.
// The verified token is then printed to the console.
```

<-- END_MAIN -->