<-- START_DESCRIPTION -->

# kkiapay_flutter_sdk Package Overview
=====================================

The `kkiapay_flutter_sdk` package is a Flutter library that provides a simple and convenient way to integrate Kkiapay payment gateway into your Flutter application. Kkiapay is a popular payment gateway in Africa that allows users to make payments using their mobile phones.

### When to Use This Package

You can use this package when you want to integrate Kkiapay payment gateway into your Flutter application. This package is particularly useful when you want to provide a seamless payment experience to your users in Africa.

### Features

The `kkiapay_flutter_sdk` package provides the following features:

*   Support for multiple payment methods, including mobile money and credit/debit cards
*   Support for multiple currencies
*   Secure payment processing using HTTPS encryption
*   Easy integration with your existing Flutter application

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# kkiapay_flutter_sdk Tutorial
=============================

In this tutorial, we will walk through the setup process and explain how to use the `kkiapay_flutter_sdk` package in your Flutter application.

### Step 1: Add the Package to Your pubspec.yaml File

To use the `kkiapay_flutter_sdk` package, you need to add it to your `pubspec.yaml` file. Open your `pubspec.yaml` file and add the following line:

```yml
dependencies:
  kkiapay_flutter_sdk: ^1.0.0
```

Then, run `flutter pub get` to get the package.

### Step 2: Import the Package

To use the package, you need to import it into your Dart file. Add the following line at the top of your Dart file:

```dart
import 'package:kkiapay_flutter_sdk/kkiapay_flutter_sdk.dart';
```

### Step 3: Initialize the Package

To initialize the package, you need to call the `init` method and pass your Kkiapay API key and secret key. You can do this in your `main` method:

```dart
void main() {
  KkiapayFlutterSdk.init(
    apiKey: 'YOUR_API_KEY',
    secretKey: 'YOUR_SECRET_KEY',
  );
  runApp(MyApp());
}
```

### Step 4: Create a Payment Request

To create a payment request, you need to call the `createPaymentRequest` method and pass the payment amount, currency, and payment method. You can do this in your `build` method:

```dart
@override
Widget build(BuildContext context) {
  return Scaffold(
    appBar: AppBar(
      title: Text('Kkiapay Payment'),
    ),
    body: Center(
      child: ElevatedButton(
        onPressed: () async {
          final paymentRequest = await KkiapayFlutterSdk.createPaymentRequest(
            amount: 1000,
            currency: 'XOF',
            paymentMethod: 'mobile_money',
          );
          if (paymentRequest != null) {
            // Handle payment request
          } else {
            // Handle error
          }
        },
        child: Text('Make Payment'),
      ),
    ),
  );
}
```

### Platform-Specific Details

The `kkiapay_flutter_sdk` package uses platform-specific code to handle payments. On Android, it uses the Kkiapay Android SDK to handle payments. On iOS, it uses the Kkiapay iOS SDK to handle payments.

### Required Configurations or Optimizations

To use the `kkiapay_flutter_sdk` package, you need to configure your Kkiapay account and obtain an API key and secret key. You also need to configure your payment settings, such as your payment methods and currencies.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:kkiapay_flutter_sdk/kkiapay_flutter_sdk.dart';

void main() {
  // Initialize the package
  KkiapayFlutterSdk.init(
    apiKey: 'YOUR_API_KEY',
    secretKey: 'YOUR_SECRET_KEY',
  );
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Kkiapay Payment',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Kkiapay Payment'),
        ),
        body: Center(
          child: ElevatedButton(
            onPressed: () async {
              // Create a payment request
              final paymentRequest = await KkiapayFlutterSdk.createPaymentRequest(
                amount: 1000,
                currency: 'XOF',
                paymentMethod: 'mobile_money',
              );
              if (paymentRequest != null) {
                // Handle payment request
                print('Payment request created successfully');
              } else {
                // Handle error
                print('Error creating payment request');
              }
            },
            child: Text('Make Payment'),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Make Payment" button.
// 2. The `createPaymentRequest` method is called to create a payment request.
// 3. The payment request is handled by the Kkiapay payment gateway.
// 4. If the payment request is successful, the payment is processed.
// 5. If the payment request fails, an error message is displayed.

// In summary, this code creates a simple payment application using the `kkiapay_flutter_sdk` package.
// The application allows the user to make a payment using the Kkiapay payment gateway.
```

<-- END_MAIN -->