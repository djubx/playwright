```markdown
<!-- START_DESCRIPTION -->
# Shamsi Date Flutter Package

The **shamsi_date** Flutter package is a powerful tool for developers who need to work with the Shamsi (Jalali) calendar in their Flutter applications. This package provides a comprehensive set of features to convert Gregorian dates to Shamsi dates and vice versa, making it particularly useful for applications targeting Persian-speaking users or regions where the Shamsi calendar is prevalent.

## When to Use This Package

You might consider using the **shamsi_date** package in scenarios such as:
- Developing applications for Iranian users that require date manipulation.
- Creating calendars, event planners, or scheduling applications that need to display dates in the Shamsi format.
- Building educational apps that teach users about the Shamsi calendar.

## Features

- **Date Conversion**: Easily convert between Gregorian and Shamsi dates.
- **Date Formatting**: Format dates in various styles to suit your application's needs.
- **Leap Year Calculation**: Automatically handle leap years in the Shamsi calendar.
- **Localization Support**: Display dates in a format that is familiar to Persian-speaking users.

With these features, the **shamsi_date** package simplifies the complexities of date handling in Flutter applications that require Shamsi calendar support.

<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Tutorial: Setting Up and Using the Shamsi Date Package

## Step 1: Adding the Dependency

To get started, you need to add the **shamsi_date** package to your Flutter project. Open your `pubspec.yaml` file and add the following line under dependencies:

```yaml
dependencies:
  flutter:
    sdk: flutter
  shamsi_date: ^1.0.0  # Check for the latest version on pub.dev
```

After adding the dependency, run the following command to install it:

```bash
flutter pub get
```

## Step 2: Platform-Specific Configuration

### Android

For Android, ensure that your `minSdkVersion` in `android/app/build.gradle` is set to at least 21:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21
    }
}
```

### iOS

For iOS, you may need to set the deployment target in your `ios/Podfile`:

```ruby
platform :ios, '10.0'
```

## Step 3: Importing the Package

In your Dart files, import the package as follows:

```dart
import 'package:shamsi_date/shamsi_date.dart';
```

## Step 4: Basic Usage

Hereâ€™s how to use the **shamsi_date** package to convert dates:

```dart
void main() {
  // Create a Gregorian date
  DateTime gregorianDate = DateTime.now();
  
  // Convert to Shamsi date
  ShamsiDate shamsiDate = ShamsiDate.fromGregorian(gregorianDate.year, gregorianDate.month, gregorianDate.day);
  
  // Print the Shamsi date
  print('Shamsi Date: ${shamsiDate.year}/${shamsiDate.month}/${shamsiDate.day}');
}
```

This code snippet demonstrates how to convert the current Gregorian date to a Shamsi date and print it.

<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of Using the Shamsi Date Package

```dart
import 'package:flutter/material.dart';
import 'package:shamsi_date/shamsi_date.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Shamsi Date Example',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Shamsi Date Example'),
        ),
        body: Center(
          child: ShamsiDateWidget(),
        ),
      ),
    );
  }
}

class ShamsiDateWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Get the current Gregorian date
    DateTime currentDate = DateTime.now();
    
    // Convert the current Gregorian date to Shamsi date
    ShamsiDate shamsiDate = ShamsiDate.fromGregorian(currentDate.year, currentDate.month, currentDate.day);
    
    // Format the Shamsi date as a string
    String formattedDate = '${shamsiDate.year}/${shamsiDate.month}/${shamsiDate.day}';
    
    return Text(
      'Current Shamsi Date: $formattedDate',
      style: TextStyle(fontSize: 24),
    );
  }
}

// Application Flow Explanation:
// 1. The main function initializes the Flutter app by calling runApp() with MyApp.
// 2. MyApp builds a MaterialApp with a title and a home Scaffold containing an AppBar and a centered ShamsiDateWidget.
// 3. ShamsiDateWidget retrieves the current date using DateTime.now().
// 4. It converts the current Gregorian date to a Shamsi date using ShamsiDate.fromGregorian().
// 5. The Shamsi date is formatted into a string and displayed in a Text widget.
// 6. The app shows the current Shamsi date on the screen.
```
<!-- END_MAIN -->
```

This structured blog provides a comprehensive overview of the **shamsi_date** Flutter package, guiding users through its features, setup, and practical usage with a complete example.