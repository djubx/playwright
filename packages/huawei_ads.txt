<-- START_DESCRIPTION -->

# Huawei Ads Flutter Package
================================

The Huawei Ads Flutter package is a powerful tool for integrating Huawei's advertising services into your Flutter applications. With this package, you can easily display ads, track user interactions, and earn revenue from your app.

## When to Use This Package
---------------------------

You should use this package when you want to monetize your Flutter app with ads. This package is particularly useful when you want to target users in regions where Huawei has a strong presence.

## Features
------------

*   Supports multiple ad formats, including banner, interstitial, and rewarded video ads
*   Allows for customizable ad layouts and designs
*   Provides detailed ad performance reports and analytics
*   Supports both Android and iOS platforms

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Huawei Ads Flutter Package
------------------------------------------

## Step 1: Add the Package to Your Project
-----------------------------------------

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  huawei_ads: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Configure the Package
-------------------------------

### Android Configuration

Add the following code to your `AndroidManifest.xml` file:

```xml
<application>
    ...
    <meta-data
        android:name="com.huawei.hms.ads.APPLICATION_ID"
        android:value="YOUR_APP_ID" />
</application>
```

Replace `YOUR_APP_ID` with your actual Huawei app ID.

### iOS Configuration

Add the following code to your `Info.plist` file:

```xml
<key>HuaweiAdsAppID</key>
<string>YOUR_APP_ID</string>
```

Replace `YOUR_APP_ID` with your actual Huawei app ID.

## Step 3: Initialize the Package
-------------------------------

Import the package and initialize it in your Dart code:

```dart
import 'package:huawei_ads/huawei_ads.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Huawei Ads Demo'),
        ),
        body: Center(
          child: HuaweiAds(
            adFormat: AdFormat.banner,
            adUnitId: 'YOUR_AD_UNIT_ID',
          ),
        ),
      ),
    );
  }
}
```

Replace `YOUR_AD_UNIT_ID` with your actual Huawei ad unit ID.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:huawei_ads/huawei_ads.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Create a MaterialApp with a Scaffold
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Huawei Ads Demo'),
        ),
        body: Center(
          // Create a HuaweiAds widget with a banner ad format
          child: HuaweiAds(
            adFormat: AdFormat.banner,
            adUnitId: 'YOUR_AD_UNIT_ID',
            // Set the ad listener to handle ad events
            adListener: AdListener(
              onAdLoaded: () {
                print('Ad loaded');
              },
              onAdFailedToLoad: (error) {
                print('Ad failed to load: $error');
              },
              onAdOpened: () {
                print('Ad opened');
              },
              onAdClosed: () {
                print('Ad closed');
              },
            ),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and the HuaweiAds widget is displayed.
// 2. The HuaweiAds widget requests an ad from the Huawei ad server.
// 3. If the ad request is successful, the ad is displayed and the onAdLoaded callback is called.
// 4. If the ad request fails, the onAdFailedToLoad callback is called with an error message.
// 5. When the user clicks on the ad, the onAdOpened callback is called.
// 6. When the user closes the ad, the onAdClosed callback is called.

// In summary, the code creates a HuaweiAds widget with a banner ad format and sets an ad listener to handle ad events.
// The ad listener callbacks are used to track the ad lifecycle and handle any errors that may occur.
```

<-- END_MAIN -->