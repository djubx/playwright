<-- START_DESCRIPTION -->

# Flutter Cashfree PG SDK Package
=====================================

The `flutter_cashfree_pg_sdk` package is a Flutter wrapper for the Cashfree Payment Gateway SDK. It allows developers to integrate Cashfree payment gateway into their Flutter applications.

## When to Use
--------------

Use this package when you need to integrate a payment gateway into your Flutter application and you have a Cashfree account.

## Features
------------

*   Supports payment through credit/debit cards, net banking, UPI, and wallets
*   Supports EMI payments
*   Supports international payments
*   Supports refund and cancel transactions

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Step 1: Add the Package to Your Project
-----------------------------------------

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_cashfree_pg_sdk: ^1.0.0
```

Then, run `flutter pub get` to get the package.

## Step 2: Import the Package
---------------------------

Import the package in your Dart file:

```dart
import 'package:flutter_cashfree_pg_sdk/flutter_cashfree_pg_sdk.dart';
```

## Step 3: Initialize the SDK
---------------------------

Initialize the SDK with your Cashfree credentials:

```dart
CashfreePGSDK.init(
  appId: 'YOUR_APP_ID',
  secretKey: 'YOUR_SECRET_KEY',
);
```

## Step 4: Create a Payment Order
------------------------------

Create a payment order with the required details:

```dart
CashfreePGSDK.createOrder(
  orderId: 'ORDER_ID',
  orderAmount: 100,
  customerName: 'Customer Name',
  customerEmail: 'customer@example.com',
  customerPhone: '1234567890',
);
```

## Step 5: Start the Payment Flow
------------------------------

Start the payment flow using the `startPayment` method:

```dart
CashfreePGSDK.startPayment(
  context: context,
  orderId: 'ORDER_ID',
  orderAmount: 100,
);
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_cashfree_pg_sdk/flutter_cashfree_pg_sdk.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Cashfree PG SDK Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Cashfree PG SDK Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            // Initialize the SDK
            CashfreePGSDK.init(
              appId: 'YOUR_APP_ID',
              secretKey: 'YOUR_SECRET_KEY',
            );

            // Create a payment order
            CashfreePGSDK.createOrder(
              orderId: 'ORDER_ID',
              orderAmount: 100,
              customerName: 'Customer Name',
              customerEmail: 'customer@example.com',
              customerPhone: '1234567890',
            );

            // Start the payment flow
            CashfreePGSDK.startPayment(
              context: context,
              orderId: 'ORDER_ID',
              orderAmount: 100,
            );
          },
          child: Text('Start Payment'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Start Payment" button.
// 2. The `startPayment` method is called, which initializes the SDK and creates a payment order.
// 3. The user is redirected to the Cashfree payment gateway to complete the payment.
// 4. After the payment is complete, the user is redirected back to the app.
// 5. The app receives the payment response and displays the result to the user.

// This code demonstrates the basic flow of the Cashfree PG SDK.
// You can customize the payment flow and handle errors as per your requirements.
```

<-- END_MAIN -->