```markdown
<!-- START_DESCRIPTION -->
# WootricSDK Flutter Package

The `wootricsdk_flutter` package is a Flutter plugin that integrates the Wootric SDK, allowing developers to collect customer feedback through Net Promoter Score (NPS) surveys. This package is particularly useful for applications that prioritize user experience and want to gather insights on customer satisfaction. 

## When to Use This Package
- **User Feedback Collection**: If your application requires user feedback to improve services or products.
- **Customer Satisfaction Measurement**: To measure customer satisfaction through NPS surveys.
- **Real-time Feedback**: When you want to gather feedback in real-time during user interactions.

## Features
- **Easy Integration**: Simple setup process to integrate Wootric SDK into your Flutter application.
- **Customizable Surveys**: Ability to customize the appearance and questions of the surveys.
- **Analytics Dashboard**: Access to an analytics dashboard to view collected feedback.
- **Cross-Platform Support**: Works seamlessly on both Android and iOS platforms.

<!-- END_DESCRIPTION -->
```

```markdown
<!-- START_TUTORIAL -->
# Tutorial: Setting Up WootricSDK in Your Flutter Project

## Step 1: Add Dependency
To get started, add the `wootricsdk_flutter` package to your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  wootricsdk_flutter: ^latest_version
```

Make sure to replace `latest_version` with the most recent version available on [pub.dev](https://pub.dev/packages/wootricsdk_flutter).

## Step 2: Platform-Specific Configuration

### Android Configuration
1. Open `android/app/build.gradle` and ensure you have the following permissions:

```groovy
android {
    ...
    defaultConfig {
        ...
        minSdkVersion 21 // Ensure this is set to at least 21
    }
}
```

2. Add the following to your `AndroidManifest.xml`:

```xml
<manifest>
    <application>
        ...
        <meta-data
            android:name="wootric_sdk_key"
            android:value="YOUR_WOOTRIC_SDK_KEY" />
    </application>
</manifest>
```

### iOS Configuration
1. Open `ios/Runner/Info.plist` and add the following:

```xml
<key>NSAppTransportSecurity</key>
<dict>
    <key>NSAllowsArbitraryLoads</key>
    <true/>
</dict>
<key>wootric_sdk_key</key>
<string>YOUR_WOOTRIC_SDK_KEY</string>
```

## Step 3: Initialize the SDK
In your main application file, initialize the Wootric SDK:

```dart
import 'package:wootricsdk_flutter/wootricsdk_flutter.dart';

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  WootricSDK.initialize("YOUR_WOOTRIC_SDK_KEY");
  runApp(MyApp());
}
```

## Step 4: Displaying the Survey
You can now display the survey at appropriate times in your application. For example, you might want to show it after a user completes a task:

```dart
WootricSDK.showSurvey();
```

This will trigger the survey to appear to the user.

<!-- END_TUTORIAL -->
```

```markdown
<!-- START_MAIN -->
# Complete Example of Using WootricSDK in Flutter

```dart
import 'package:flutter/material.dart';
import 'package:wootricsdk_flutter/wootricsdk_flutter.dart';

void main() {
  WidgetsFlutterBinding.ensureInitialized();
  // Initialize the Wootric SDK with your unique key
  WootricSDK.initialize("YOUR_WOOTRIC_SDK_KEY");
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Wootric SDK Example',
      home: HomeScreen(),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Wootric SDK Example'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Show the Wootric survey when the button is pressed
            WootricSDK.showSurvey();
          },
          child: Text('Give Feedback'),
        ),
      ),
    );
  }
}

// Application Flow Explanation:
// 1. The app starts with the main function, initializing the Wootric SDK.
// 2. The MyApp widget is created, which sets up the MaterialApp.
// 3. The HomeScreen widget is displayed as the home screen of the app.
// 4. The HomeScreen contains a button labeled "Give Feedback".
// 5. When the button is pressed, the Wootric survey is displayed to the user.
// 6. Users can then provide their feedback through the survey interface.
```
<!-- END_MAIN -->
``` 

This structured approach provides a comprehensive overview of the `wootricsdk_flutter` package, guiding developers through its features, setup, and practical usage in a Flutter application.