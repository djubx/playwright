<-- START_DESCRIPTION -->

# Flutter Sliding Drawer Package
=====================================

The `flutter_sliding_drawer` package provides a customizable sliding drawer for Flutter applications. It allows developers to create a drawer that can be opened and closed by sliding it from the left or right side of the screen.

### When to Use

This package is useful when you want to provide a navigation menu or a settings panel that can be easily accessed by the user. It's also a great way to add a hidden panel that can be revealed by sliding it from the side.

### Features

* Customizable drawer width and height
* Support for left and right side drawers
* Optional drawer header and footer
* Support for custom drawer content
* Smooth animation for opening and closing the drawer

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
---------------------------

To use the `flutter_sliding_drawer` package, you need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_sliding_drawer: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Platform-Specific Configurations

For Android, you need to add the following code to your `AndroidManifest.xml` file:

```xml
<application
  ...
  android:hardwareAccelerated="true"
  ...
>
```

For iOS, you need to add the following code to your `Info.plist` file:

```xml
<key>UIViewControllerBasedStatusBarAppearance</key>
<false/>
```

### Using the Package

To use the package, you need to import it in your Dart file:

```dart
import 'package:flutter_sliding_drawer/flutter_sliding_drawer.dart';
```

Then, you can create a `SlidingDrawer` widget and add it to your app:

```dart
SlidingDrawer(
  width: 200.0,
  height: 400.0,
  header: Text('Drawer Header'),
  footer: Text('Drawer Footer'),
  child: Text('Drawer Content'),
)
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_sliding_drawer/flutter_sliding_drawer.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Sliding Drawer Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter Sliding Drawer Demo'),
        ),
        body: SlidingDrawer(
          // Set the width of the drawer
          width: 200.0,
          // Set the height of the drawer
          height: 400.0,
          // Set the header of the drawer
          header: Text('Drawer Header'),
          // Set the footer of the drawer
          footer: Text('Drawer Footer'),
          // Set the content of the drawer
          child: Text('Drawer Content'),
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates a RealFlutter widget.
// The RealFlutter widget is a stateful widget that builds a MaterialApp with a Scaffold.
// The Scaffold has an AppBar with a title and a body that contains a SlidingDrawer widget.
// The SlidingDrawer widget is configured with a width, height, header, footer, and child.
// When the app is run, the SlidingDrawer widget is displayed on the screen and can be opened and closed by sliding it from the left or right side.
```

<-- END_MAIN -->