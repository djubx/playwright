<-- START_DESCRIPTION -->

Backdrop Modal Route
=====================

The `backdrop_modal_route` package is a Flutter package that allows you to create a backdrop modal route, which is a modal route that displays a widget in front of the current route, with a backdrop that dims the current route.

When to Use
------------

You can use this package when you want to display a modal dialog that requires a complex layout, or when you want to display a modal dialog that needs to be displayed in front of the current route, but still allow the user to interact with the current route.

Features
--------

*   Displays a widget in front of the current route
*   Dims the current route with a backdrop
*   Allows the user to interact with the current route while the modal is displayed
*   Supports custom backdrop colors and opacity

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup
------

To use the `backdrop_modal_route` package, you need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  backdrop_modal_route: ^1.0.0
```

Then, run `flutter pub get` to get the package.

Usage
-----

To use the `backdrop_modal_route` package, you need to import it in your Dart file:

```dart
import 'package:backdrop_modal_route/backdrop_modal_route.dart';
```

Then, you can use the `BackdropModalRoute` class to create a backdrop modal route:

```dart
Navigator.push(
  context,
  BackdropModalRoute(
    child: YourWidget(),
  ),
);
```

Platform-Specific Details
-------------------------

### Android

On Android, the `backdrop_modal_route` package uses the `Dialog` class to display the modal dialog. This means that the modal dialog will be displayed in front of the current activity, and will dim the current activity with a backdrop.

### iOS

On iOS, the `backdrop_modal_route` package uses the `UIViewController` class to display the modal dialog. This means that the modal dialog will be displayed in front of the current view controller, and will dim the current view controller with a backdrop.

Configurations and Optimizations
---------------------------------

You can customize the backdrop color and opacity by using the `backdropColor` and `backdropOpacity` properties of the `BackdropModalRoute` class:

```dart
Navigator.push(
  context,
  BackdropModalRoute(
    child: YourWidget(),
    backdropColor: Colors.black,
    backdropOpacity: 0.5,
  ),
);
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:backdrop_modal_route/backdrop_modal_route.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Backdrop Modal Route Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Backdrop Modal Route Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            Navigator.push(
              context,
              BackdropModalRoute(
                child: MyModalDialog(),
              ),
            );
          },
          child: Text('Show Modal Dialog'),
        ),
      ),
    );
  }
}

class MyModalDialog extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: 300,
      height: 200,
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(10),
      ),
      child: Center(
        child: Text('This is a modal dialog'),
      ),
    );
  }
}
```

// This is the main entry point of the app.
// The RealFlutter class is the root widget of the app.
// It uses the MaterialApp widget to define the app's theme and home page.
// The home page is defined by the MyHomePage class.
// The MyHomePage class uses the Scaffold widget to define the app's layout.
// It has an AppBar with a title, and a body with a Center widget.
// The Center widget has an ElevatedButton that, when pressed, shows a modal dialog.
// The modal dialog is defined by the MyModalDialog class.
// It uses the Container widget to define its layout and appearance.
// The modal dialog is displayed in front of the current route using the BackdropModalRoute class.
// The BackdropModalRoute class dims the current route with a backdrop.

// When the app is run, the RealFlutter class is instantiated and built.
// The MaterialApp widget is built, and the home page is displayed.
// When the ElevatedButton is pressed, the modal dialog is displayed in front of the current route.
// The modal dialog is built and displayed using the BackdropModalRoute class.

<-- END_MAIN -->