<-- START_DESCRIPTION -->

# Flutter Desktop Folder Picker Package
=====================================

The `flutter_desktop_folder_picker` package is a Flutter plugin that allows users to select a folder from their desktop. It provides a simple and easy-to-use API for selecting folders, making it a great addition to any Flutter app that requires folder selection.

### When to Use This Package

This package is useful when you need to allow users to select a folder from their desktop, such as:

* When uploading files to a server
* When selecting a folder to save files to
* When selecting a folder to read files from

### Features

* Supports Windows, macOS, and Linux platforms
* Provides a simple and easy-to-use API for selecting folders
* Allows users to select a folder from their desktop

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
=======================

To use the `flutter_desktop_folder_picker` package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_desktop_folder_picker: ^1.0.0
```
### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_desktop_folder_picker/flutter_desktop_folder_picker.dart';
```
### Step 3: Use the Package

Use the `FlutterDesktopFolderPicker` class to select a folder:
```dart
Future<void> _selectFolder() async {
  final folderPath = await FlutterDesktopFolderPicker.pickFolder();
  if (folderPath != null) {
    print('Selected folder: $folderPath');
  } else {
    print('No folder selected');
  }
}
```
### Platform-Specific Details

* On Windows, the package uses the `SHBrowseForFolder` function to select a folder.
* On macOS, the package uses the `NSOpenPanel` class to select a folder.
* On Linux, the package uses the `gtk_file_chooser_dialog` function to select a folder.

### Required Configurations or Optimizations

* On Windows, you need to add the `SHBrowseForFolder` function to your app's manifest file.
* On macOS, you need to add the `NSOpenPanel` class to your app's Info.plist file.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_desktop_folder_picker/flutter_desktop_folder_picker.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Desktop Folder Picker Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _selectedFolder = '';

  Future<void> _selectFolder() async {
    // Step 1: Use the FlutterDesktopFolderPicker class to select a folder
    final folderPath = await FlutterDesktopFolderPicker.pickFolder();
    
    // Step 2: Check if a folder was selected
    if (folderPath != null) {
      // Step 3: Update the UI with the selected folder
      setState(() {
        _selectedFolder = folderPath;
      });
    } else {
      // Step 4: Handle the case where no folder was selected
      print('No folder selected');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Desktop Folder Picker Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Selected Folder:',
              style: TextStyle(fontSize: 24),
            ),
            Text(
              _selectedFolder,
              style: TextStyle(fontSize: 24),
            ),
            SizedBox(height: 24),
            ElevatedButton(
              onPressed: _selectFolder,
              child: Text('Select Folder'),
            ),
          ],
        ),
      ),
    );
  }
}

// The app starts by displaying a button to select a folder.
// When the button is clicked, the _selectFolder function is called.
// The _selectFolder function uses the FlutterDesktopFolderPicker class to select a folder.
// If a folder is selected, the UI is updated with the selected folder.
// If no folder is selected, a message is printed to the console.
```

<-- END_MAIN -->