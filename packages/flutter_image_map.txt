<-- START_DESCRIPTION -->
# Flutter Image Map Package
================================

The `flutter_image_map` package is a powerful tool for creating interactive image maps in Flutter applications. It allows developers to define clickable areas within an image and respond to user interactions.

## When to Use This Package
---------------------------

This package is ideal for applications that require interactive images, such as:

* Clickable diagrams or flowcharts
* Interactive maps or floor plans
* Image-based puzzles or games

## Features
------------

* Define clickable areas within an image using a simple JSON configuration
* Support for multiple image formats, including PNG, JPEG, and GIF
* Customizable click event handling
* Compatible with both Android and iOS platforms

<-- END_DESCRIPTION -->


<-- START_TUTORIAL -->
# Setting Up the Package
-------------------------

To use the `flutter_image_map` package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_image_map: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_image_map/flutter_image_map.dart';
```
### Step 3: Load the Image

Load the image you want to use for the image map:
```dart
Image image = Image.asset('assets/image.png');
```
### Step 4: Define the Clickable Areas

Define the clickable areas within the image using a JSON configuration:
```json
{
  "areas": [
    {
      "x": 10,
      "y": 20,
      "width": 50,
      "height": 30,
      "action": "print('Area 1 clicked')"
    },
    {
      "x": 70,
      "y": 40,
      "width": 30,
      "height": 50,
      "action": "print('Area 2 clicked')"
    }
  ]
}
```
### Step 5: Create the Image Map

Create the image map using the `ImageMap` widget:
```dart
ImageMap(
  image: image,
  areas: areas,
  onTap: (area) {
    print('Area ${area['action']}');
  },
)
```
<-- END_TUTORIAL -->


<-- START_MAIN -->
```dart
import 'package:flutter/material.dart';
import 'package:flutter_image_map/flutter_image_map.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Image Map Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // Load the image
  Image image = Image.asset('assets/image.png');

  // Define the clickable areas
  List areas = [
    {
      "x": 10,
      "y": 20,
      "width": 50,
      "height": 30,
      "action": "print('Area 1 clicked')"
    },
    {
      "x": 70,
      "y": 40,
      "width": 30,
      "height": 50,
      "action": "print('Area 2 clicked')"
    }
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Image Map Demo'),
      ),
      body: Center(
        child: ImageMap(
          image: image,
          areas: areas,
          onTap: (area) {
            print('Area ${area['action']}');
          },
        ),
      ),
    );
  }
}
```
// The application flow is as follows:
// 1. The user runs the application and is presented with an image.
// 2. The user clicks on a clickable area within the image.
// 3. The `onTap` event is triggered, and the corresponding action is printed to the console.
// 4. The user can continue to click on different areas within the image to trigger different actions.

// In summary, this code creates an interactive image map with clickable areas that trigger custom actions when clicked.
<-- END_MAIN -->