<-- START_DESCRIPTION -->

# Firebase Analytics Web Flutter Package
=====================================

The `firebase_analytics_web` Flutter package is a wrapper around the Firebase Analytics Web SDK, allowing you to track and analyze user behavior in your Flutter web applications. This package provides a simple and easy-to-use API for sending events, setting user properties, and tracking screen views.

### When to Use This Package

Use this package when you want to integrate Firebase Analytics into your Flutter web application to gain insights into user behavior, track key events, and measure the effectiveness of your marketing campaigns.

### Features

* Send custom events to Firebase Analytics
* Set user properties to segment your audience
* Track screen views to understand user navigation
* Support for Firebase Analytics Web SDK

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up Firebase Analytics Web
=====================================

To use the `firebase_analytics_web` package, you need to set up Firebase Analytics in your Flutter project. Here's a step-by-step guide:

### Step 1: Add the Package to Your Pubspec

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  firebase_analytics_web: ^0.2.0
```
### Step 2: Initialize Firebase Analytics

In your `main` function, initialize Firebase Analytics using the `FirebaseAnalyticsWeb` class:
```dart
import 'package:firebase_analytics_web/firebase_analytics_web.dart';

void main() {
  FirebaseAnalyticsWeb analytics = FirebaseAnalyticsWeb();
  // ...
}
```
### Step 3: Configure Firebase Analytics

In your `index.html` file, add the following script tag to include the Firebase Analytics Web SDK:
```html
<script src="https://www.gstatic.com/firebasejs/8.2.1/firebase-analytics.js"></script>
```
### Step 4: Set Up Firebase Analytics in Your Flutter App

In your Flutter app, use the `FirebaseAnalyticsWeb` class to send events, set user properties, and track screen views:
```dart
class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  FirebaseAnalyticsWeb analytics;

  @override
  void initState() {
    super.initState();
    analytics = FirebaseAnalyticsWeb();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Real Flutter'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            analytics.logEvent('button_clicked');
          },
          child: Text('Click me'),
        ),
      ),
    );
  }
}
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:firebase_analytics_web/firebase_analytics_web.dart';

void main() {
  FirebaseAnalyticsWeb analytics = FirebaseAnalyticsWeb();
  runApp(RealFlutter(analytics));
}

class RealFlutter extends StatefulWidget {
  final FirebaseAnalyticsWeb analytics;

  RealFlutter(this.analytics);

  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  @override
  void initState() {
    super.initState();
    // Set user property
    widget.analytics.setUserProperty('favorite_color', 'blue');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Real Flutter'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {
                // Log event
                widget.analytics.logEvent('button_clicked');
              },
              child: Text('Click me'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Track screen view
                widget.analytics.logScreenView('second_screen');
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => SecondScreen()),
                );
              },
              child: Text('Go to second screen'),
            ),
          ],
        ),
      ),
    );
  }
}

class SecondScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Second Screen'),
      ),
      body: Center(
        child: Text('Welcome to the second screen'),
      ),
    );
  }
}
```

// The app starts by initializing Firebase Analytics in the main function.
// The RealFlutter widget is then created, which sets a user property in its initState method.
// The widget tree consists of two buttons: one that logs an event when clicked, and another that tracks a screen view and navigates to a second screen.
// When the user clicks the buttons, the corresponding events are sent to Firebase Analytics.
// The app demonstrates how to use the Firebase Analytics Web package to track user behavior in a Flutter app.

<-- END_MAIN -->