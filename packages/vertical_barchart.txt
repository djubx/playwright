<-- START_DESCRIPTION -->

Vertical Bar Chart Flutter Package
=====================================

The `vertical_barchart` Flutter package is a powerful and customizable charting library that allows developers to create beautiful and interactive vertical bar charts for their Flutter applications. This package is ideal for displaying categorical data, such as sales figures, website traffic, or any other type of data that can be represented as a series of vertical bars.

Key Features:

*   Customizable chart appearance, including colors, fonts, and bar styles
*   Support for multiple data series and stacked bars
*   Interactive charts with touch events and animations
*   Compatible with both Android and iOS platforms

When to Use This Package:

*   Displaying categorical data, such as sales figures or website traffic
*   Creating interactive and engaging charts for user interfaces
*   Customizing chart appearance to match your application's branding and style

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

Setup and Usage
---------------

To use the `vertical_barchart` package in your Flutter project, follow these steps:

1.  Add the package to your `pubspec.yaml` file:

    ```yml
dependencies:
  flutter:
    sdk: flutter
  vertical_barchart: ^0.0.1
```

2.  Run `flutter pub get` to install the package.
3.  Import the package in your Dart file:

    ```dart
import 'package:vertical_barchart/vertical_barchart.dart';
```

4.  Create a `VerticalBarChart` widget and pass in your data:

    ```dart
VerticalBarChart(
  data: [
    VerticalBarChartModel(
      label: 'Jan',
      value: 100,
    ),
    VerticalBarChartModel(
      label: 'Feb',
      value: 200,
    ),
    // ...
  ],
)
```

Platform-Specific Details:

*   Android: No additional configuration is required.
*   iOS: No additional configuration is required.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:vertical_barchart/vertical_barchart.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Vertical Bar Chart Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<VerticalBarChartModel> _data = [
    VerticalBarChartModel(
      label: 'Jan',
      value: 100,
    ),
    VerticalBarChartModel(
      label: 'Feb',
      value: 200,
    ),
    VerticalBarChartModel(
      label: 'Mar',
      value: 300,
    ),
    VerticalBarChartModel(
      label: 'Apr',
      value: 400,
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Vertical Bar Chart Demo'),
      ),
      body: Center(
        child: VerticalBarChart(
          data: _data,
          // Customize chart appearance
          chartHeight: 300,
          chartWidth: 300,
          chartPadding: EdgeInsets.all(20),
          labelStyle: TextStyle(fontSize: 14),
          valueStyle: TextStyle(fontSize: 16),
          barColor: Colors.blue,
          barWidth: 20,
          // Handle touch events
          onTap: (index) {
            print('Tapped on ${_data[index].label}');
          },
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user runs the app and is presented with a vertical bar chart.
// 2. The chart displays the data from the _data list, with each bar representing a month.
// 3. The user can tap on a bar to print the corresponding month to the console.
// 4. The chart is customized with a height, width, padding, label style, value style, bar color, and bar width.
// 5. The user can interact with the chart by tapping on the bars.

```

<-- END_MAIN -->