<-- START_DESCRIPTION -->

# Flutter Pollfish Package Overview
=====================================

The `flutter_pollfish` package is a Flutter wrapper for the Pollfish SDK, which allows developers to monetize their apps through rewarded surveys. This package provides a simple and efficient way to integrate Pollfish into your Flutter app.

### When to Use This Package

You can use this package when you want to:

* Monetize your app through rewarded surveys
* Enhance user engagement and experience
* Collect valuable user feedback and opinions

### Features

The `flutter_pollfish` package offers the following features:

* Rewarded surveys: Earn revenue by displaying surveys to your users
* Customizable survey UI: Tailor the survey experience to your app's design
* User targeting: Show surveys to specific user segments based on demographics, interests, and more
* Survey filtering: Filter out surveys that don't match your app's content or audience

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Flutter Pollfish Package
==========================================

To use the `flutter_pollfish` package, follow these steps:

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_pollfish: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_pollfish/flutter_pollfish.dart';
```
### Step 3: Initialize the Pollfish SDK

Initialize the Pollfish SDK in your app's `main` function:
```dart
void main() {
  runApp(MyApp());
  Pollfish.init(apiKey: 'YOUR_API_KEY', appId: 'YOUR_APP_ID');
}
```
Replace `YOUR_API_KEY` and `YOUR_APP_ID` with your actual Pollfish API key and app ID.

### Step 4: Display Surveys

To display surveys, use the `Pollfish.showSurvey` method:
```dart
Pollfish.showSurvey();
```
You can customize the survey UI by passing a `SurveyOptions` object:
```dart
Pollfish.showSurvey(
  surveyOptions: SurveyOptions(
    surveyFormat: SurveyFormat.REWARDED_VIDEO,
    surveyTargeting: SurveyTargeting(
      demographics: Demographics(
        age: 18,
        gender: Gender.MALE,
      ),
    ),
  ),
);
```
### Platform-Specific Details

For Android, add the following lines to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```
For iOS, add the following lines to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_pollfish/flutter_pollfish.dart';

void main() {
  runApp(MyApp());
  Pollfish.init(apiKey: 'YOUR_API_KEY', appId: 'YOUR_APP_ID');
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Pollfish Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Pollfish Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Show a rewarded video survey
            Pollfish.showSurvey(
              surveyOptions: SurveyOptions(
                surveyFormat: SurveyFormat.REWARDED_VIDEO,
                surveyTargeting: SurveyTargeting(
                  demographics: Demographics(
                    age: 18,
                    gender: Gender.MALE,
                  ),
                ),
              ),
            );
          },
          child: Text('Show Survey'),
        ),
      ),
    );
  }
}
```

// This is the main entry point of the app.
// The app initializes the Pollfish SDK with the API key and app ID.
// The app then displays a button that, when pressed, shows a rewarded video survey.
// The survey is targeted to males aged 18 and above.
// The survey format is set to rewarded video.
// When the survey is completed, the user is rewarded with a virtual currency.

// The app uses the `flutter_pollfish` package to integrate Pollfish into the app.
// The package provides a simple and efficient way to display surveys and reward users.
// The app can be customized to display different types of surveys and target specific user segments.

// In summary, this app demonstrates how to integrate Pollfish into a Flutter app and display rewarded video surveys to users.

<-- END_MAIN -->