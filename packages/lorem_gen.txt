<-- START_DESCRIPTION -->

# lorem_gen Flutter Package
The lorem_gen package is a lightweight library for generating Lorem Ipsum text in Flutter applications. It provides a simple and efficient way to generate placeholder text for UI design and testing purposes.

## Features
- Generate Lorem Ipsum text with customizable length and format
- Support for generating text in paragraphs or as a single block
- Optional parameter to include a random image with the generated text

## When to Use
The lorem_gen package is ideal for UI designers and developers who need to create placeholder text for their Flutter applications. It can be used to generate text for a variety of purposes, such as:

- Filling empty spaces in UI designs
- Testing text layout and formatting
- Creating placeholder content for demos and presentations

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up lorem_gen
To use the lorem_gen package in your Flutter project, follow these steps:

1. Add the package to your pubspec.yaml file:
```yml
dependencies:
  flutter:
    sdk: flutter
  lorem_gen: ^1.0.0
```
2. Run `flutter pub get` to install the package.

## Platform-Specific Configurations
No platform-specific configurations are required for this package.

## Using lorem_gen
To generate Lorem Ipsum text, import the package and use the `LoremGen` class:
```dart
import 'package:lorem_gen/lorem_gen.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _loremText = '';

  @override
  void initState() {
    super.initState();
    _loremText = LoremGen().generateText(length: 100);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Text(_loremText),
      ),
    );
  }
}
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:lorem_gen/lorem_gen.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Lorem Gen Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: RealFlutter(),
    );
  }
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _loremText = '';
  int _length = 100;
  bool _includeImage = false;

  // Step 1: Initialize the LoremGen instance
  LoremGen _loremGen = LoremGen();

  @override
  void initState() {
    super.initState();
    // Step 2: Generate the initial Lorem Ipsum text
    _loremText = _loremGen.generateText(length: _length);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Lorem Gen Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Step 3: Display the generated Lorem Ipsum text
            Text(_loremText),
            SizedBox(height: 20),
            // Step 4: Allow the user to adjust the text length
            Slider(
              value: _length.toDouble(),
              min: 10,
              max: 1000,
              divisions: 10,
              label: _length.toString(),
              onChanged: (value) {
                setState(() {
                  _length = value.round();
                  // Step 5: Regenerate the Lorem Ipsum text with the new length
                  _loremText = _loremGen.generateText(length: _length);
                });
              },
            ),
            SizedBox(height: 20),
            // Step 6: Allow the user to toggle the inclusion of an image
            Checkbox(
              value: _includeImage,
              onChanged: (value) {
                setState(() {
                  _includeImage = value;
                  // Step 7: Regenerate the Lorem Ipsum text with or without an image
                  _loremText = _loremGen.generateText(length: _length, includeImage: _includeImage);
                });
              },
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user launches the app and is presented with a screen displaying the generated Lorem Ipsum text.
// 2. The user can adjust the length of the text using the slider.
// 3. When the user adjusts the length, the app regenerates the Lorem Ipsum text with the new length.
// 4. The user can toggle the inclusion of an image with the generated text.
// 5. When the user toggles the image inclusion, the app regenerates the Lorem Ipsum text with or without an image.
```

<-- END_MAIN -->