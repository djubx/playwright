<-- START_DESCRIPTION -->

# Flutter Highlighting Package
================================

The `flutter_highlighting` package is a powerful tool for highlighting text in Flutter applications. It provides a simple and efficient way to highlight text in various formats, including JSON, XML, and more.

## When to Use This Package
---------------------------

This package is ideal for applications that require text highlighting, such as:

* Code editors
* Text editors
* Documentation viewers
* Debugging tools

## Features
------------

* Supports multiple formats, including JSON, XML, and more
* Customizable highlighting styles
* Easy to use and integrate into existing applications

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `flutter_highlighting` package, follow these steps:

1. Add the package to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_highlighting: ^1.0.0
```
2. Run `flutter pub get` to install the package.
3. Import the package in your Dart file:
```dart
import 'package:flutter_highlighting/flutter_highlighting.dart';
```

## Platform-Specific Details
---------------------------

### Android

No additional setup is required for Android.

### iOS

No additional setup is required for iOS.

## Configurations and Optimizations
-----------------------------------

### Customizing Highlighting Styles

You can customize the highlighting styles by creating a custom `HighlightStyle` object:
```dart
HighlightStyle customStyle = HighlightStyle(
  backgroundColor: Colors.blue,
  textColor: Colors.white,
);
```
### Optimizing Performance

To optimize performance, you can use the `HighlightText` widget's `cache` property:
```dart
HighlightText(
  text: 'Hello, World!',
  style: customStyle,
  cache: true,
)
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_highlighting/flutter_highlighting.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  String _text = 'Hello, World!';
  HighlightStyle _style = HighlightStyle(
    backgroundColor: Colors.blue,
    textColor: Colors.white,
  );

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Highlighting Demo',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter Highlighting Demo'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: <Widget>[
              HighlightText(
                text: _text,
                style: _style,
                cache: true,
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  setState(() {
                    _text = 'Hello, Flutter!';
                  });
                },
                child: Text('Change Text'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user runs the application.
// 2. The `RealFlutter` widget is created and displayed.
// 3. The `HighlightText` widget is used to display the highlighted text.
// 4. The user can press the "Change Text" button to change the text.
// 5. The `setState` method is called to update the text.
// 6. The `HighlightText` widget is updated with the new text.
// 7. The highlighted text is displayed to the user.

// In summary, this code demonstrates how to use the `flutter_highlighting` package to highlight text in a Flutter application. It shows how to customize the highlighting styles and optimize performance.
```

<-- END_MAIN -->