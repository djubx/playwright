<-- START_DESCRIPTION -->

# Dismiss Keyboard on Tap Flutter Package
=============================================

The `dismiss_keyboard_on_tap` Flutter package is a utility package that allows you to dismiss the keyboard when the user taps outside of a text field or text form field. This package is useful when you want to provide a seamless user experience by hiding the keyboard when the user interacts with other parts of the app.

### When to Use This Package

You can use this package in scenarios where you have a text field or text form field and you want to dismiss the keyboard when the user taps outside of it. For example:

* When you have a login or registration screen with text fields and you want to dismiss the keyboard when the user taps on the login or register button.
* When you have a chat screen with a text field and you want to dismiss the keyboard when the user taps on the send button.
* When you have a form with multiple text fields and you want to dismiss the keyboard when the user taps on the submit button.

### Features

The `dismiss_keyboard_on_tap` package provides the following features:

* Dismisses the keyboard when the user taps outside of a text field or text form field.
* Works on both Android and iOS platforms.
* Easy to use and integrate into your existing Flutter app.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Dismiss Keyboard on Tap Package
=====================================================

In this tutorial, we will walk through the setup process and explain how to use the `dismiss_keyboard_on_tap` package in your Flutter app.

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  dismiss_keyboard_on_tap: ^1.0.0
```
Then, run `flutter pub get` in your terminal to get the package.

### Step 2: Import the Package in Your Dart File

Import the package in your Dart file:
```dart
import 'package:dismiss_keyboard_on_tap/dismiss_keyboard_on_tap.dart';
```
### Step 3: Wrap Your Scaffold with the DismissKeyboardOnTap Widget

Wrap your `Scaffold` with the `DismissKeyboardOnTap` widget:
```dart
DismissKeyboardOnTap(
  child: Scaffold(
    // Your scaffold content here
  ),
)
```
That's it! Now, when the user taps outside of a text field or text form field, the keyboard will be dismissed.

### Platform-Specific Details

The `dismiss_keyboard_on_tap` package works on both Android and iOS platforms. However, there are some platform-specific details to note:

* On Android, the package uses the `FocusManager` class to dismiss the keyboard.
* On iOS, the package uses the `FirstResponder` class to dismiss the keyboard.

### Required Configurations or Optimizations

There are no required configurations or optimizations needed to use the `dismiss_keyboard_on_tap` package. However, you may want to consider adding a delay before dismissing the keyboard to ensure that the user has finished typing.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:dismiss_keyboard_on_tap/dismiss_keyboard_on_tap.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Dismiss Keyboard on Tap Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _textController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return DismissKeyboardOnTap(
      child: Scaffold(
        appBar: AppBar(
          title: Text('Dismiss Keyboard on Tap Demo'),
        ),
        body: Center(
          child: Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                TextField(
                  controller: _textController,
                  decoration: InputDecoration(
                    labelText: 'Type something',
                    border: OutlineInputBorder(),
                  ),
                ),
                SizedBox(height: 20),
                ElevatedButton(
                  onPressed: () {
                    // Do something when the button is pressed
                  },
                  child: Text('Press me'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
```

// The app starts by running the `main` function, which creates a `MaterialApp` with a `MyHomePage` widget as its home page.
// The `MyHomePage` widget is a stateful widget that contains a `TextField` and an `ElevatedButton`.
// The `TextField` is wrapped with a `DismissKeyboardOnTap` widget, which dismisses the keyboard when the user taps outside of the text field.
// When the user taps the `ElevatedButton`, the keyboard is dismissed because the button is outside of the text field.
// The app demonstrates how to use the `dismiss_keyboard_on_tap` package to dismiss the keyboard when the user interacts with other parts of the app.

<-- END_MAIN -->