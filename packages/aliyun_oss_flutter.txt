<-- START_DESCRIPTION -->

# aliyun_oss_flutter Package Overview
=====================================

The `aliyun_oss_flutter` package is a Flutter plugin that allows developers to easily integrate Alibaba Cloud's Object Storage Service (OSS) into their Flutter applications. OSS is a cloud-based object storage service that provides a scalable, secure, and reliable way to store and manage large amounts of data.

### When to Use This Package

This package is ideal for Flutter developers who need to store and manage large files, such as images, videos, and documents, in their applications. It provides a simple and efficient way to upload, download, and manage files on OSS.

### Features

*   Upload and download files to and from OSS
*   Create and manage OSS buckets
*   List and delete OSS objects
*   Support for multipart upload and resumable upload
*   Support for custom metadata and ACLs

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the aliyun_oss_flutter Package
=====================================================

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  aliyun_oss_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:aliyun_oss_flutter/aliyun_oss_flutter.dart';
```

### Step 3: Initialize the OSS Client

 Initialize the OSS client with your OSS credentials:

```dart
String accessKeyId = 'your_access_key_id';
String accessKeySecret = 'your_access_key_secret';
String endpoint = 'your_endpoint';

OSSClient ossClient = OSSClient(
  accessKeyId: accessKeyId,
  accessKeySecret: accessKeySecret,
  endpoint: endpoint,
);
```

### Step 4: Create a Bucket

Create a new OSS bucket:

```dart
Future<void> createBucket() async {
  try {
    await ossClient.createBucket('your_bucket_name');
    print('Bucket created successfully!');
  } catch (e) {
    print('Error creating bucket: $e');
  }
}
```

### Step 5: Upload a File

Upload a file to OSS:

```dart
Future<void> uploadFile() async {
  try {
    await ossClient.uploadObject(
      'your_bucket_name',
      'your_object_key',
      'path/to/your/file',
    );
    print('File uploaded successfully!');
  } catch (e) {
    print('Error uploading file: $e');
  }
}
```

### Step 6: Download a File

Download a file from OSS:

```dart
Future<void> downloadFile() async {
  try {
    await ossClient.downloadObject(
      'your_bucket_name',
      'your_object_key',
      'path/to/your/download/folder',
    );
    print('File downloaded successfully!');
  } catch (e) {
    print('Error downloading file: $e');
  }
}
```

### Platform-Specific Details

*   For Android, you need to add the following permissions to your `AndroidManifest.xml` file:

    ```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
```

*   For iOS, you need to add the following configuration to your `Info.plist` file:

    ```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:aliyun_oss_flutter/aliyun_oss_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Aliyun OSS Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _bucketName = '';
  String _objectKey = '';
  String _filePath = '';

  Future<void> _createBucket() async {
    // Create a new OSS bucket
    try {
      await OSSClient(
        accessKeyId: 'your_access_key_id',
        accessKeySecret: 'your_access_key_secret',
        endpoint: 'your_endpoint',
      ).createBucket(_bucketName);
      print('Bucket created successfully!');
    } catch (e) {
      print('Error creating bucket: $e');
    }
  }

  Future<void> _uploadFile() async {
    // Upload a file to OSS
    try {
      await OSSClient(
        accessKeyId: 'your_access_key_id',
        accessKeySecret: 'your_access_key_secret',
        endpoint: 'your_endpoint',
      ).uploadObject(
        _bucketName,
        _objectKey,
        _filePath,
      );
      print('File uploaded successfully!');
    } catch (e) {
      print('Error uploading file: $e');
    }
  }

  Future<void> _downloadFile() async {
    // Download a file from OSS
    try {
      await OSSClient(
        accessKeyId: 'your_access_key_id',
        accessKeySecret: 'your_access_key_secret',
        endpoint: 'your_endpoint',
      ).downloadObject(
        _bucketName,
        _objectKey,
        _filePath,
      );
      print('File downloaded successfully!');
    } catch (e) {
      print('Error downloading file: $e');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Aliyun OSS Flutter Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              decoration: InputDecoration(
                labelText: 'Bucket Name',
              ),
              onChanged: (value) {
                setState(() {
                  _bucketName = value;
                });
              },
            ),
            TextField(
              decoration: InputDecoration(
                labelText: 'Object Key',
              ),
              onChanged: (value) {
                setState(() {
                  _objectKey = value;
                });
              },
            ),
            TextField(
              decoration: InputDecoration(
                labelText: 'File Path',
              ),
              onChanged: (value) {
                setState(() {
                  _filePath = value;
                });
              },
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _createBucket,
              child: Text('Create Bucket'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: _uploadFile,
              child: Text('Upload File'),
            ),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: _downloadFile,
              child: Text('Download File'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user enters the bucket name, object key, and file path in the text fields.
// 2. The user clicks the "Create Bucket" button to create a new OSS bucket.
// 3. The user clicks the "Upload File" button to upload a file to OSS.
// 4. The user clicks the "Download File" button to download a file from OSS.
// The application uses the aliyun_oss_flutter package to interact with OSS.
```

<-- END_MAIN -->