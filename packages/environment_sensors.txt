<-- START_DESCRIPTION -->

# Environment Sensors Flutter Package
=====================================

The `environment_sensors` Flutter package provides a simple and efficient way to access various environment sensors on both Android and iOS devices. This package allows you to retrieve data from sensors such as temperature, humidity, pressure, and more.

### When to Use This Package

This package is useful when you need to access environment sensor data in your Flutter application. For example, you might want to:

* Display the current temperature and humidity in a weather app
* Monitor the pressure sensor in a fitness app to track altitude changes
* Use the ambient light sensor to adjust the screen brightness in a reading app

### Features

The `environment_sensors` package provides the following features:

* Support for various environment sensors, including temperature, humidity, pressure, and more
* Simple and easy-to-use API for retrieving sensor data
* Platform-specific optimizations for Android and iOS

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `environment_sensors` package in your Flutter application, follow these steps:

### Step 1: Add the Package to Your `pubspec.yaml` File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  environment_sensors: ^1.0.0
```
### Step 2: Import the Package in Your Dart File

Import the package in your Dart file:
```dart
import 'package:environment_sensors/environment_sensors.dart';
```
### Step 3: Request Sensor Permissions (Android Only)

On Android, you need to request permissions to access sensor data. Add the following code to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.BODY_SENSORS" />
```
### Step 4: Initialize the Sensor

Initialize the sensor using the `EnvironmentSensors` class:
```dart
final sensor = EnvironmentSensors();
```
### Step 5: Retrieve Sensor Data

Use the `getSensorData` method to retrieve sensor data:
```dart
final data = await sensor.getSensorData(SensorType.temperature);
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:environment_sensors/environment_sensors.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Environment Sensors Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _sensor = EnvironmentSensors();
  String _temperature = '';
  String _humidity = '';
  String _pressure = '';

  @override
  void initState() {
    super.initState();
    _initSensor();
  }

  Future<void> _initSensor() async {
    // Initialize the sensor
    await _sensor.init();

    // Request sensor permissions (Android only)
    if (Platform.isAndroid) {
      await _sensor.requestPermissions();
    }
  }

  Future<void> _getSensorData() async {
    // Retrieve temperature data
    final temperatureData = await _sensor.getSensorData(SensorType.temperature);
    setState(() {
      _temperature = temperatureData.toString();
    });

    // Retrieve humidity data
    final humidityData = await _sensor.getSensorData(SensorType.humidity);
    setState(() {
      _humidity = humidityData.toString();
    });

    // Retrieve pressure data
    final pressureData = await _sensor.getSensorData(SensorType.pressure);
    setState(() {
      _pressure = pressureData.toString();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Environment Sensors Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text('Temperature: $_temperature'),
            Text('Humidity: $_humidity'),
            Text('Pressure: $_pressure'),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _getSensorData,
              child: Text('Get Sensor Data'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app initializes the sensor using the `EnvironmentSensors` class.
// 2. The app requests sensor permissions (Android only) using the `requestPermissions` method.
// 3. The app retrieves sensor data using the `getSensorData` method.
// 4. The app displays the retrieved sensor data on the screen.
// 5. The user can press the "Get Sensor Data" button to retrieve and display new sensor data.

```

<-- END_MAIN -->