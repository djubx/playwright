<-- START_DESCRIPTION -->

# Flutter Google Street View Package
=====================================

The `flutter_google_street_view` package is a Flutter library that allows you to embed Google Street View into your Flutter application. This package is perfect for apps that require location-based services, such as real estate, tourism, or navigation apps.

## Features

* Embed Google Street View into your Flutter app
* Control the camera position, zoom, and bearing
* Add markers and overlays to the Street View
* Support for both Android and iOS platforms

## When to Use

Use this package when you need to display Google Street View in your Flutter app. This can be useful in a variety of scenarios, such as:

* Real estate apps: Show potential buyers the street view of a property
* Tourism apps: Give users a virtual tour of a city or attraction
* Navigation apps: Provide users with a street-level view of their route

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
=====================

## Step 1: Add the Package to Your Pubspec

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_google_street_view: ^1.0.0
```
Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:flutter_google_street_view/flutter_google_street_view.dart';
```
## Step 3: Create a Street View Widget

Create a `StreetView` widget and pass in the required parameters:
```dart
StreetView(
  apiKey: 'YOUR_API_KEY',
  cameraPosition: CameraPosition(
    target: LatLng(37.7749, -122.4194),
    zoom: 12,
  ),
)
```
Replace `YOUR_API_KEY` with your actual Google Maps API key.

## Platform-Specific Details

### Android

Add the following lines to your `AndroidManifest.xml` file:
```xml
<application>
  ...
  <meta-data
    android:name="com.google.android.geo.API_KEY"
    android:value="YOUR_API_KEY" />
</application>
```
Replace `YOUR_API_KEY` with your actual Google Maps API key.

### iOS

Add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
<key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
<string>This app needs access to location to work properly</string>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_google_street_view/flutter_google_street_view.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Step 1: Create a Street View widget
  StreetView _streetView;

  // Step 2: Initialize the Street View widget
  void _initStreetView() {
    _streetView = StreetView(
      apiKey: 'YOUR_API_KEY',
      cameraPosition: CameraPosition(
        target: LatLng(37.7749, -122.4194),
        zoom: 12,
      ),
    );
  }

  // Step 3: Add a marker to the Street View
  void _addMarker() {
    _streetView.addMarker(
      Marker(
        markerId: MarkerId('marker_1'),
        position: LatLng(37.7749, -122.4194),
        infoWindow: InfoWindow(title: 'Marker 1'),
      ),
    );
  }

  @override
  void initState() {
    super.initState();
    _initStreetView();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Google Street View'),
      ),
      body: _streetView,
      floatingActionButton: FloatingActionButton(
        onPressed: _addMarker,
        tooltip: 'Add Marker',
        child: Icon(Icons.add),
      ),
    );
  }
}

// Application flow:
// 1. The app initializes the Street View widget with a camera position and API key.
// 2. The app adds a marker to the Street View widget when the floating action button is pressed.
// 3. The Street View widget displays the marker and allows the user to interact with it.
```

// Final summary:
// The code initializes a Street View widget with a camera position and API key, then adds a marker to the widget when the floating action button is pressed. The Street View widget displays the marker and allows the user to interact with it.

<-- END_MAIN -->