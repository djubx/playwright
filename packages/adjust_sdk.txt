<-- START_DESCRIPTION -->

# Adjust SDK Flutter Package
================================

The Adjust SDK Flutter package is a marketing analytics and attribution platform that helps you track and analyze the performance of your Flutter app. It provides a comprehensive set of tools to measure and optimize your app's user acquisition, retention, and revenue.

## When to Use This Package
---------------------------

You should use this package if you want to:

* Track user behavior and events in your app
* Measure the effectiveness of your marketing campaigns
* Analyze user retention and churn rates
* Optimize your app's performance and revenue

## Features
------------

The Adjust SDK Flutter package provides the following features:

* Event tracking: Track custom events in your app, such as button clicks, purchases, and level completions.
* Session tracking: Track user sessions, including duration, frequency, and intervals.
* Campaign tracking: Track the performance of your marketing campaigns, including clicks, conversions, and revenue.
* Attribution: Attribute user acquisitions to specific campaigns, ad groups, and ad creatives.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Configuration
-------------------------

To use the Adjust SDK Flutter package, follow these steps:

### Step 1: Add the Package to Your Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  adjust_sdk: ^4.28.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:adjust_sdk/adjust.dart';
```
### Step 3: Initialize the SDK

Initialize the SDK in your app's main function:
```dart
void main() {
  Adjust.init('YOUR_APP_TOKEN', 'YOUR_ENVIRONMENT');
  runApp(MyApp());
}
```
Replace `YOUR_APP_TOKEN` and `YOUR_ENVIRONMENT` with your actual app token and environment.

### Step 4: Track Events

Track events in your app using the `trackEvent` method:
```dart
Adjust.trackEvent('my_event');
```
You can also pass additional parameters with the event:
```dart
Adjust.trackEvent('my_event', {
  'key1': 'value1',
  'key2': 'value2',
});
```
### Platform-Specific Details

#### Android

To use the Adjust SDK on Android, you need to add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```
You also need to add the following meta-data to your `AndroidManifest.xml` file:
```xml
<meta-data
    android:name="com.adjust.sdk.Adjust"
    android:value="YOUR_APP_TOKEN" />
```
Replace `YOUR_APP_TOKEN` with your actual app token.

#### iOS

To use the Adjust SDK on iOS, you need to add the following frameworks to your `Info.plist` file:
```xml
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>${EXECUTABLE_NAME}</string>
```
You also need to add the following script to your `Podfile`:
```ruby
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'ADJUST_SDK_TOKEN=YOUR_APP_TOKEN'
    end
  end
end
```
Replace `YOUR_APP_TOKEN` with your actual app token.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:adjust_sdk/adjust.dart';

void main() {
  // Initialize the Adjust SDK
  Adjust.init('YOUR_APP_TOKEN', 'YOUR_ENVIRONMENT');

  // Run the app
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Adjust SDK Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Adjust SDK Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Track an event
            ElevatedButton(
              onPressed: () {
                Adjust.trackEvent('my_event');
              },
              child: Text('Track Event'),
            ),
            // Track an event with parameters
            ElevatedButton(
              onPressed: () {
                Adjust.trackEvent('my_event', {
                  'key1': 'value1',
                  'key2': 'value2',
                });
              },
              child: Text('Track Event with Parameters'),
            ),
          ],
        ),
      ),
    );
  }
}
```

// The app initializes the Adjust SDK with the app token and environment.
// The app then runs the main function, which builds the app's UI.
// The UI consists of two buttons: one to track an event and one to track an event with parameters.
// When the user clicks the "Track Event" button, the app tracks an event using the `trackEvent` method.
// When the user clicks the "Track Event with Parameters" button, the app tracks an event with parameters using the `trackEvent` method.
// The Adjust SDK sends the event data to the Adjust servers, where it is processed and analyzed.

<-- END_MAIN -->