```markdown
<!-- START_DESCRIPTION -->
# flutter_show_when_locked Package Overview

The `flutter_show_when_locked` package is a Flutter plugin that allows developers to display content on the lock screen of a mobile device. This can be particularly useful for applications that require real-time notifications, alerts, or any information that needs to be accessible without unlocking the device. 

## When to Use This Package
- **Messaging Apps**: To show incoming messages or notifications directly on the lock screen.
- **Health Monitoring**: To display real-time health metrics or alerts.
- **Security Applications**: To show alerts or notifications related to security events.

## Key Features
- **Customizable Content**: You can define what content to show on the lock screen.
- **Platform Support**: Works on both Android and iOS, with specific configurations for each platform.
- **User Control**: Users can choose to allow or disallow the display of content on the lock screen.

This package is particularly beneficial for applications that need to provide immediate information to users without requiring them to unlock their devices.
<!-- END_DESCRIPTION -->

<!-- START_TUTORIAL -->
# Setup and Usage of flutter_show_when_locked

## Installation
To add the `flutter_show_when_locked` package to your Flutter project, include it in your `pubspec.yaml` file:

```yaml
dependencies:
  flutter:
    sdk: flutter
  flutter_show_when_locked: ^latest_version
```

Make sure to replace `^latest_version` with the most recent version available on [pub.dev](https://pub.dev/packages/flutter_show_when_locked).

## Platform-Specific Configuration

### Android
1. Open your `AndroidManifest.xml` file located at `android/app/src/main/AndroidManifest.xml`.
2. Add the following permissions inside the `<manifest>` tag:

```xml
<uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
```

3. Ensure that your app's target SDK version is set to 29 or higher to support lock screen notifications.

### iOS
1. Open your `Info.plist` file located at `ios/Runner/Info.plist`.
2. Add the following key to request permission to show notifications:

```xml
<key>UIBackgroundModes</key>
<array>
    <string>fetch</string>
    <string>remote-notification</string>
</array>
```

## Basic Usage
To use the package, you need to import it into your Dart file:

```dart
import 'package:flutter_show_when_locked/flutter_show_when_locked.dart';
```

You can then use the `showWhenLocked` method to display content on the lock screen. Hereâ€™s a simple example:

```dart
void showLockScreenNotification(String message) {
  FlutterShowWhenLocked.showWhenLocked(
    title: 'New Notification',
    body: message,
  );
}
```

This function can be called whenever you want to display a notification on the lock screen.
<!-- END_TUTORIAL -->

<!-- START_MAIN -->
# Complete Example of flutter_show_when_locked

```dart
import 'package:flutter/material.dart';
import 'package:flutter_show_when_locked/flutter_show_when_locked.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Lock Screen Notification Demo',
      home: HomeScreen(),
    );
  }
}

class HomeScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Lock Screen Notification Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () {
            // Call the function to show a notification on the lock screen
            showLockScreenNotification("Hello! This is a lock screen notification.");
          },
          child: Text('Show Lock Screen Notification'),
        ),
      ),
    );
  }
}

// Function to show notification on the lock screen
void showLockScreenNotification(String message) {
  // Using the flutter_show_when_locked package to display the notification
  FlutterShowWhenLocked.showWhenLocked(
    title: 'New Notification',
    body: message,
  );
}

/*
Application Flow Explanation:
1. The app starts with the main function, which runs the RealFlutter widget.
2. The RealFlutter widget builds a MaterialApp with a title and a home screen.
3. The HomeScreen widget contains a button in the center of the screen.
4. When the button is pressed, it triggers the showLockScreenNotification function.
5. This function uses the flutter_show_when_locked package to display a notification on the lock screen with the specified title and message.
6. The user can see this notification without unlocking their device, making it useful for urgent messages or alerts.
*/
```
<!-- END_MAIN -->
```

### Summary
In this blog post, we explored the `flutter_show_when_locked` package, which allows developers to display notifications on the lock screen of mobile devices. We covered the installation process, platform-specific configurations, and provided a complete example demonstrating how to use the package effectively. This package is particularly useful for applications that need to deliver immediate information to users, enhancing user experience and engagement.