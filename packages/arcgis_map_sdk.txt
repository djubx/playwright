<-- START_DESCRIPTION -->

# Introduction to arcgis_map_sdk Flutter Package
=====================================================

The `arcgis_map_sdk` Flutter package is a powerful tool for integrating Esri's ArcGIS mapping capabilities into your Flutter applications. With this package, you can create interactive maps, perform spatial analysis, and leverage the full power of the ArcGIS platform.

### When to Use This Package

This package is ideal for applications that require:

* Interactive mapping and spatial analysis
* Integration with Esri's ArcGIS platform
* Support for various map layers and data sources
* Robust and customizable mapping capabilities

### Key Features

* Support for 2D and 3D mapping
* Integration with ArcGIS Online and ArcGIS Enterprise
* Various map layers and data sources (e.g., tile layers, feature layers, raster layers)
* Spatial analysis and geometry operations
* Customizable map interactions and gestures

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the arcgis_map_sdk Package
=============================================

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:
```yml
dependencies:
  arcgis_map_sdk: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package and Initialize the Map

Import the package in your Dart file:
```dart
import 'package:arcgis_map_sdk/arcgis_map_sdk.dart';
```
 Initialize the map with an API key or a portal URL:
```dart
Future<void> main() async {
  // Initialize the map with an API key
  await ArcgisMapSdk.init(apiKey: 'YOUR_API_KEY');

  // Alternatively, initialize the map with a portal URL
  // await ArcgisMapSdk.init(portalUrl: 'https://your-portal-url.com');
}
```
### Step 3: Create a Map View

Create a `MapView` widget to display the map:
```dart
MapView(
  map: ArcGISMap(
    basemap: Basemap(
      layer: TileLayer(
        url: 'https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Light_Gray_Base/MapServer',
      ),
    ),
  ),
)
```
### Platform-Specific Details

* Android: Add the following permissions to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
```
* iOS: Add the following lines to your `Info.plist` file:
```xml
<key>NSLocationWhenInUseUsageDescription</key>
<string>This app needs access to location services</string>
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:arcgis_map_sdk/arcgis_map_sdk.dart';

void main() async {
  // Initialize the map with an API key
  await ArcgisMapSdk.init(apiKey: 'YOUR_API_KEY');

  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'ArcGIS Map SDK Demo',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  late MapView _mapView;

  @override
  void initState() {
    super.initState();

    // Create a map view
    _mapView = MapView(
      map: ArcGISMap(
        basemap: Basemap(
          layer: TileLayer(
            url: 'https://services.arcgisonline.com/arcgis/rest/services/Canvas/World_Light_Gray_Base/MapServer',
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('ArcGIS Map SDK Demo'),
      ),
      body: _mapView,
    );
  }
}

// Application flow:
// 1. The app initializes the ArcGIS Map SDK with an API key.
// 2. The app creates a map view with a tile layer as the basemap.
// 3. The map view is displayed in the app's main window.
// 4. The user can interact with the map view, such as zooming and panning.
```

// Summary: This code demonstrates how to use the ArcGIS Map SDK to display a map in a Flutter app. It initializes the map with an API key, creates a map view with a tile layer as the basemap, and displays the map view in the app's main window. The user can interact with the map view, such as zooming and panning.

<-- END_MAIN -->