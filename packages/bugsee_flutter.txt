<-- START_DESCRIPTION -->

# Bugsee Flutter Package
================================

The Bugsee Flutter package is a powerful tool for debugging and testing Flutter applications. It provides a comprehensive set of features for logging, error reporting, and analytics. With Bugsee, developers can easily identify and fix issues in their apps, improving overall quality and user experience.

## Key Features

*   Logging: Bugsee allows developers to log events, errors, and other data points in their app.
*   Error Reporting: Bugsee automatically captures and reports crashes and errors, providing detailed information for debugging.
*   Analytics: Bugsee provides insights into app usage, user behavior, and other key metrics.

## When to Use Bugsee

*   Debugging: Bugsee is essential for identifying and fixing issues in Flutter apps.
*   Testing: Bugsee helps ensure that apps are thoroughly tested and validated before release.
*   Analytics: Bugsee provides valuable insights into app usage and user behavior.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up Bugsee
-------------------

To use Bugsee in a Flutter app, follow these steps:

### Step 1: Add the Bugsee Package

Add the Bugsee package to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  bugsee_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Initialize Bugsee

Import the Bugsee package and initialize it in your app's `main` function:

```dart
import 'package:bugsee_flutter/bugsee_flutter.dart';

void main() {
  BugseeFlutter.init('YOUR_API_KEY');
  runApp(MyApp());
}
```

Replace `YOUR_API_KEY` with your actual Bugsee API key.

### Step 3: Configure Bugsee

Configure Bugsee to suit your needs. For example, you can set the logging level:

```dart
BugseeFlutter.setLogLevel(LogLevel.debug);
```

### Platform-Specific Details

#### Android

For Android, you need to add the following configuration to your `AndroidManifest.xml` file:

```xml
<application>
    ...
    <meta-data
        android:name="com.bugsee.api.key"
        android:value="YOUR_API_KEY" />
</application>
```

#### iOS

For iOS, you need to add the following configuration to your `Info.plist` file:

```xml
<key>com.bugsee.api.key</key>
<string>YOUR_API_KEY</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:bugsee_flutter/bugsee_flutter.dart';

void main() {
  // Initialize Bugsee with your API key
  BugseeFlutter.init('YOUR_API_KEY');
  
  // Set the logging level to debug
  BugseeFlutter.setLogLevel(LogLevel.debug);
  
  // Run the app
  runApp(RealFlutter());
}

class RealFlutter extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // Log an event
    BugseeFlutter.log('App started');
    
    return MaterialApp(
      title: 'Real Flutter',
      home: Scaffold(
        appBar: AppBar(
          title: Text('Real Flutter'),
        ),
        body: Center(
          child: ElevatedButton(
            onPressed: () {
              // Log an error
              BugseeFlutter.error('Button pressed');
            },
            child: Text('Press me'),
          ),
        ),
      ),
    );
  }
}

// The app starts by initializing Bugsee with the API key.
// Then, it sets the logging level to debug.
// When the app is built, it logs an event 'App started'.
// When the button is pressed, it logs an error 'Button pressed'.

// In summary, this code demonstrates how to use Bugsee in a Flutter app.
// It initializes Bugsee, sets the logging level, logs events and errors, and provides a basic app structure.
```

<-- END_MAIN -->