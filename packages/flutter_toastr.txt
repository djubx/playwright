<-- START_DESCRIPTION -->

# Flutter Toastr Package Overview
=====================================

The `flutter_toastr` package is a Flutter package used to display toast messages in a Flutter application. It provides a simple and easy-to-use API for displaying toast messages.

### When to Use

You can use this package when you want to display a short message to the user, such as a success or error message, without interrupting the user's flow.

### Features

*   Display toast messages with a custom message, duration, and position.
*   Supports displaying toast messages with different types (success, error, warning, info).
*   Can be used to display toast messages from anywhere in the app.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using Flutter Toastr
=====================================

### Step 1: Add the Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_toastr: ^1.1.1
```

Then, run `flutter pub get` to get the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:flutter_toastr/flutter_toastr.dart';
```

### Step 3: Display a Toast Message

You can display a toast message using the `showToast` function:

```dart
FlutterToastr.showToast(
  msg: "This is a toast message",
  toastLength: Toast.LENGTH_SHORT,
  gravity: ToastGravity.CENTER,
  timeInSecForIosWeb: 1,
  backgroundColor: Colors.red,
  textColor: Colors.white,
  fontSize: 16.0,
);
```

### Platform-Specific Details

*   For Android, you need to add the following line to your `AndroidManifest.xml` file:

    ```xml
<application
    ...
    android:hardwareAccelerated="true"
    ...>
```

*   For iOS, you need to add the following line to your `Info.plist` file:

    ```xml
<key>UIViewControllerBasedStatusBarAppearance</key>
<false/>
```

### Required Configurations or Optimizations

You can configure the toast message to be displayed at a specific position, duration, and with a custom background color and text color.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_toastr/flutter_toastr.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Toastr Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  void _showToast() {
    // Show a toast message with a custom message, duration, and position
    FlutterToastr.showToast(
      msg: "This is a toast message",
      toastLength: Toast.LENGTH_SHORT,
      gravity: ToastGravity.CENTER,
      timeInSecForIosWeb: 1,
      backgroundColor: Colors.red,
      textColor: Colors.white,
      fontSize: 16.0,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Toastr Demo'),
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: _showToast,
          child: Text('Show Toast'),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Show Toast" button.
// 2. The _showToast function is called, which displays a toast message with a custom message, duration, and position.
// 3. The toast message is displayed on the screen for a short duration.
// 4. The user can click the "Show Toast" button again to display another toast message.

// In summary, this code demonstrates how to use the Flutter Toastr package to display toast messages in a Flutter application.
// The toast message can be customized with a specific message, duration, and position.
// The code also shows how to handle the button click event and display the toast message.
```

<-- END_MAIN -->