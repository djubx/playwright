<-- START_DESCRIPTION -->

# Flutter Notification Listener Package
=====================================

The `flutter_notification_listener` package is a Flutter plugin that allows you to listen to notifications on Android and iOS devices. This package provides a simple way to access notification data, such as title, message, and payload, and perform actions when a notification is received.

## When to Use This Package
---------------------------

This package is useful when you want to:

*   Listen to notifications in the background and perform actions when a notification is received.
*   Access notification data, such as title, message, and payload.
*   Handle notifications when the app is in the foreground, background, or terminated.

## Features
------------

*   Listen to notifications on Android and iOS devices.
*   Access notification data, such as title, message, and payload.
*   Perform actions when a notification is received.
*   Handle notifications when the app is in the foreground, background, or terminated.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
-----------------

## Step 1: Add the Package to Your Project
-----------------------------------------

Add the `flutter_notification_listener` package to your `pubspec.yaml` file:

```yml
dependencies:
  flutter_notification_listener: ^1.0.0
```

## Step 2: Import the Package
-----------------------------

Import the package in your Dart file:

```dart
import 'package:flutter_notification_listener/flutter_notification_listener.dart';
```

## Step 3: Request Permission (Android Only)
------------------------------------------

On Android, you need to request permission to listen to notifications. You can do this by calling the `requestPermission` method:

```dart
await FlutterNotificationListener.requestPermission();
```

## Step 4: Initialize the Package
---------------------------------

Initialize the package by calling the `initialize` method:

```dart
await FlutterNotificationListener.initialize();
```

## Step 5: Listen to Notifications
---------------------------------

Listen to notifications by calling the `listen` method:

```dart
FlutterNotificationListener.listen((notification) {
  // Handle the notification
});
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_notification_listener/flutter_notification_listener.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  void initState() {
    super.initState();
    _requestPermission();
  }

  Future<void> _requestPermission() async {
    // Request permission to listen to notifications (Android only)
    await FlutterNotificationListener.requestPermission();
  }

  Future<void> _initialize() async {
    // Initialize the package
    await FlutterNotificationListener.initialize();
  }

  void _listenToNotifications() {
    // Listen to notifications
    FlutterNotificationListener.listen((notification) {
      // Handle the notification
      print('Notification received: ${notification.title}');
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('Flutter Notification Listener'),
        ),
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              ElevatedButton(
                onPressed: _requestPermission,
                child: Text('Request Permission'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _initialize,
                child: Text('Initialize'),
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _listenToNotifications,
                child: Text('Listen to Notifications'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user opens the app and is presented with a screen with three buttons: Request Permission, Initialize, and Listen to Notifications.
// 2. The user clicks the Request Permission button, which requests permission to listen to notifications on Android devices.
// 3. The user clicks the Initialize button, which initializes the package and prepares it to listen to notifications.
// 4. The user clicks the Listen to Notifications button, which starts listening to notifications and prints the title of each notification received to the console.
// 5. When a notification is received, the package calls the callback function passed to the listen method, which handles the notification and prints its title to the console.

```

<-- END_MAIN -->