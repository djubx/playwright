<-- START_DESCRIPTION -->

# Debit Credit Card Widget Flutter Package
=============================================

The `debit_credit_card_widget` Flutter package provides a customizable and easy-to-use widget for displaying debit and credit card information. It's perfect for e-commerce, banking, and finance applications where users need to manage their card information.

## Features

*   Customizable card layout and design
*   Support for multiple card types (e.g., Visa, Mastercard, Amex)
*   Card number, expiration date, and CVV code fields
*   Optional cardholder name and address fields
*   Built-in validation for card number, expiration date, and CVV code

## When to Use This Package

Use this package when you need to display and manage debit and credit card information in your Flutter application. It's ideal for:

*   E-commerce apps: Display card information for payment processing
*   Banking and finance apps: Manage user card information for account management
*   Wallet apps: Store and display user card information for easy access

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Debit Credit Card Widget

## Step 1: Add the Package to Your Flutter Project

Add the `debit_credit_card_widget` package to your `pubspec.yaml` file:

```yml
dependencies:
  debit_credit_card_widget: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:debit_credit_card_widget/debit_credit_card_widget.dart';
```

## Step 3: Create a DebitCreditCardWidget Instance

Create a `DebitCreditCardWidget` instance and customize its properties:

```dart
DebitCreditCardWidget(
  cardNumber: '1234 5678 9012 3456',
  expirationDate: '12/25',
  cvvCode: '123',
  cardholderName: 'John Doe',
  address: '123 Main St',
  cardType: CardType.visa,
)
```

## Platform-Specific Details

### Android

No additional configuration is required for Android.

### iOS

Add the following line to your `Info.plist` file to enable the package:

```xml
<key>NSCameraUsageDescription</key>
<string>Can I use the camera please?</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:debit_credit_card_widget/debit_credit_card_widget.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Debit Credit Card Widget Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final _cardNumberController = TextEditingController();
  final _expirationDateController = TextEditingController();
  final _cvvCodeController = TextEditingController();
  final _cardholderNameController = TextEditingController();
  final _addressController = TextEditingController();

  CardType _cardType = CardType.visa;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Debit Credit Card Widget Demo'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            DebitCreditCardWidget(
              cardNumber: _cardNumberController.text,
              expirationDate: _expirationDateController.text,
              cvvCode: _cvvCodeController.text,
              cardholderName: _cardholderNameController.text,
              address: _addressController.text,
              cardType: _cardType,
            ),
            SizedBox(height: 16),
            TextField(
              controller: _cardNumberController,
              decoration: InputDecoration(
                labelText: 'Card Number',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 8),
            TextField(
              controller: _expirationDateController,
              decoration: InputDecoration(
                labelText: 'Expiration Date',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 8),
            TextField(
              controller: _cvvCodeController,
              decoration: InputDecoration(
                labelText: 'CVV Code',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 8),
            TextField(
              controller: _cardholderNameController,
              decoration: InputDecoration(
                labelText: 'Cardholder Name',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 8),
            TextField(
              controller: _addressController,
              decoration: InputDecoration(
                labelText: 'Address',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16),
            DropdownButton<CardType>(
              value: _cardType,
              onChanged: (value) {
                setState(() {
                  _cardType = value;
                });
              },
              items: [
                DropdownMenuItem(
                  child: Text('Visa'),
                  value: CardType.visa,
                ),
                DropdownMenuItem(
                  child: Text('Mastercard'),
                  value: CardType.mastercard,
                ),
                DropdownMenuItem(
                  child: Text('Amex'),
                  value: CardType.amex,
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user inputs their card information (card number, expiration date, CVV code, cardholder name, and address) into the corresponding text fields.
// 2. The user selects their card type (Visa, Mastercard, or Amex) from the dropdown menu.
// 3. The DebitCreditCardWidget displays the user's card information and card type.
// 4. The user can update their card information and card type in real-time, and the DebitCreditCardWidget will reflect the changes.

// This code demonstrates the usage of the DebitCreditCardWidget package and its customization options.
// It provides a simple and intuitive way to display and manage debit and credit card information in a Flutter application.
```

<-- END_MAIN -->