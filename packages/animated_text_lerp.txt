<-- START_DESCRIPTION -->

# Animated Text Lerp Package
==========================

The `animated_text_lerp` package is a Flutter library that allows you to create smooth and customizable text animations. It provides a simple and easy-to-use API for animating text, making it perfect for a wide range of applications, from simple text transitions to complex animations.

## Features

*   Smooth text animation
*   Customizable animation duration and curve
*   Support for multiple animation types (e.g., fade, scale, slide)
*   Easy-to-use API

## When to Use

The `animated_text_lerp` package is perfect for any situation where you need to animate text in your Flutter application. Some examples include:

*   Text transitions (e.g., fading in or out, sliding in or out)
*   Animated text overlays
*   Customizable text animations for buttons or other interactive elements

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial
==========

## Setup

To use the `animated_text_lerp` package, you'll need to add it to your `pubspec.yaml` file:

```yml
dependencies:
  animated_text_lerp: ^1.0.0
```

Then, run `flutter pub get` to install the package.

## Basic Usage

To use the `animated_text_lerp` package, you'll need to import it into your Dart file:

```dart
import 'package:animated_text_lerp/animated_text_lerp.dart';
```

Then, you can use the `AnimatedTextLerp` widget to animate your text:

```dart
AnimatedTextLerp(
  text: 'Hello, World!',
  duration: Duration(milliseconds: 500),
  curve: Curves.easeInOut,
)
```

This will animate the text "Hello, World!" over a period of 500 milliseconds using the `easeInOut` curve.

## Customization

The `AnimatedTextLerp` widget provides several properties for customizing the animation:

*   `text`: The text to animate.
*   `duration`: The duration of the animation.
*   `curve`: The curve to use for the animation.
*   `animationType`: The type of animation to use (e.g., fade, scale, slide).

You can customize these properties to create a wide range of animations.

## Platform-Specific Details

The `animated_text_lerp` package works on both Android and iOS platforms. However, you may need to adjust the animation duration or curve to achieve the desired effect on each platform.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:animated_text_lerp/animated_text_lerp.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Animated Text Lerp Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _text = 'Hello, World!';

  void _changeText() {
    setState(() {
      _text = _text == 'Hello, World!' ? 'Goodbye, World!' : 'Hello, World!';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Animated Text Lerp Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Animated text
            AnimatedTextLerp(
              text: _text,
              duration: Duration(milliseconds: 500),
              curve: Curves.easeInOut,
            ),
            // Button to change text
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _changeText,
              child: Text('Change Text'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts with the text "Hello, World!" displayed on the screen.
// 2. When the user presses the "Change Text" button, the text changes to "Goodbye, World!".
// 3. The text change is animated over a period of 500 milliseconds using the easeInOut curve.
// 4. When the user presses the "Change Text" button again, the text changes back to "Hello, World!".
// 5. The text change is again animated over a period of 500 milliseconds using the easeInOut curve.

// Summary:
// The app demonstrates the use of the AnimatedTextLerp widget to animate text changes.
// The text change is triggered by a button press, and the animation is customized using the duration and curve properties.
```

<-- END_MAIN -->