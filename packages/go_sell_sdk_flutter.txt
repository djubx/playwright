<-- START_DESCRIPTION -->

# go_sell_sdk_flutter Package Overview
=====================================

The `go_sell_sdk_flutter` package is a Flutter wrapper for the GoSell SDK, allowing developers to easily integrate payment gateway functionality into their Flutter applications. This package provides a seamless payment experience for users, supporting various payment methods, including credit cards, PayPal, and more.

### When to Use This Package

Use the `go_sell_sdk_flutter` package when you need to integrate a payment gateway into your Flutter application, providing users with a secure and convenient payment experience.

### Features

*   Supports various payment methods (credit cards, PayPal, etc.)
*   Secure payment processing
*   Easy integration with Flutter applications
*   Customizable payment UI

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up and Using the go_sell_sdk_flutter Package
=====================================================

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  go_sell_sdk_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:go_sell_sdk_flutter/go_sell_sdk_flutter.dart';
```

### Step 3: Initialize the GoSell SDK

Initialize the GoSell SDK with your API key:

```dart
GoSellSdkFlutter.init(apiKey: 'YOUR_API_KEY');
```

### Step 4: Create a Payment Session

Create a payment session with the desired payment method:

```dart
PaymentSession paymentSession = PaymentSession(
  paymentMethod: PaymentMethod.card,
  amount: 10.99,
  currency: 'USD',
);
```

### Step 5: Start the Payment Flow

Start the payment flow using the `startPaymentFlow` method:

```dart
GoSellSdkFlutter.startPaymentFlow(
  paymentSession: paymentSession,
  onSuccess: (paymentResult) {
    // Handle payment success
  },
  onError: (error) {
    // Handle payment error
  },
);
```

### Platform-Specific Details

#### Android

Add the following code to your `AndroidManifest.xml` file:

```xml
<application
  ...
  android:usesCleartextTraffic="true"
  ...>
</application>
```

#### iOS

Add the following code to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:go_sell_sdk_flutter/go_sell_sdk_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'GoSell SDK Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  // Initialize the GoSell SDK with your API key
  final String _apiKey = 'YOUR_API_KEY';

  // Create a payment session with the desired payment method
  PaymentSession _paymentSession = PaymentSession(
    paymentMethod: PaymentMethod.card,
    amount: 10.99,
    currency: 'USD',
  );

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('GoSell SDK Flutter Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Start the payment flow using the `startPaymentFlow` method
            ElevatedButton(
              onPressed: () {
                GoSellSdkFlutter.startPaymentFlow(
                  paymentSession: _paymentSession,
                  onSuccess: (paymentResult) {
                    // Handle payment success
                    print('Payment successful!');
                  },
                  onError: (error) {
                    // Handle payment error
                    print('Payment error: $error');
                  },
                );
              },
              child: Text('Start Payment Flow'),
            ),
          ],
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Start Payment Flow" button.
// 2. The `startPaymentFlow` method is called with the payment session and callback functions.
// 3. The GoSell SDK handles the payment flow and displays the payment UI to the user.
// 4. The user completes the payment flow and the SDK returns the payment result.
// 5. The `onSuccess` or `onError` callback function is called depending on the payment result.
// 6. The application handles the payment result and updates the UI accordingly.

// In summary, the code flows as follows:
// User clicks "Start Payment Flow" button -> `startPaymentFlow` method called -> GoSell SDK handles payment flow -> Payment result returned -> Callback function called -> Application handles payment result.

```

<-- END_MAIN -->