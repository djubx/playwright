<-- START_DESCRIPTION -->

# Flutter SMS Autofill Package
================================

The `flutter_sms_autofill` package is a Flutter plugin that allows you to autofill SMS codes in your app. It provides a simple and convenient way to handle SMS-based authentication, making it easier for users to verify their phone numbers.

## When to Use This Package
---------------------------

You can use this package in any Flutter app that requires SMS-based authentication, such as:

* Phone number verification
* Two-factor authentication (2FA)
* Account recovery

## Features
------------

* Autofill SMS codes
* Support for Android and iOS platforms
* Customizable SMS code format

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
==================

## Step 1: Add the Package to Your Pubspec File
---------------------------------------------

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  flutter_sms_autofill: ^1.0.0
```
## Step 2: Import the Package
---------------------------

Import the package in your Dart file:
```dart
import 'package:flutter_sms_autofill/flutter_sms_autofill.dart';
```
## Step 3: Initialize the Package
-------------------------------

Initialize the package in your app's `initState` method:
```dart
@override
void initState() {
  super.initState();
  FlutterSmsAutofill.initialize();
}
```
## Step 4: Request SMS Autofill Permission
-----------------------------------------

Request SMS autofill permission on Android:
```dart
@override
void initState() {
  super.initState();
  FlutterSmsAutofill.requestPermission();
}
```
On iOS, you need to add the following lines to your `Info.plist` file:
```xml
<key>NSUserTrackingUsageDescription</key>
<string>This app needs access to your SMS messages to autofill codes.</string>
```
## Step 5: Listen for SMS Autofill Events
-----------------------------------------

Listen for SMS autofill events using the `FlutterSmsAutofill.onSmsAutofill` stream:
```dart
StreamSubscription _subscription;

@override
void initState() {
  super.initState();
  _subscription = FlutterSmsAutofill.onSmsAutofill.listen((event) {
    // Handle SMS autofill event
  });
}
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:flutter_sms_autofill/flutter_sms_autofill.dart';

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Initialize the package
  @override
  void initState() {
    super.initState();
    FlutterSmsAutofill.initialize();
    // Request SMS autofill permission on Android
    FlutterSmsAutofill.requestPermission();
  }

  // Listen for SMS autofill events
  StreamSubscription _subscription;

  @override
  void initState() {
    super.initState();
    _subscription = FlutterSmsAutofill.onSmsAutofill.listen((event) {
      // Handle SMS autofill event
      print('SMS autofill event: $event');
    });
  }

  // Dispose of the subscription
  @override
  void dispose() {
    _subscription.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter SMS Autofill Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'Enter your phone number:',
            ),
            TextField(
              decoration: InputDecoration(
                border: OutlineInputBorder(),
                labelText: 'Phone Number',
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Send SMS code
                FlutterSmsAutofill.sendSmsCode('123456');
              },
              child: Text('Send SMS Code'),
            ),
          ],
        ),
      ),
    );
  }
}

// Application flow:
// 1. The user enters their phone number in the text field.
// 2. The user clicks the "Send SMS Code" button.
// 3. The app sends an SMS code to the user's phone number using the `FlutterSmsAutofill.sendSmsCode` method.
// 4. The user receives the SMS code and enters it in the app.
// 5. The app listens for SMS autofill events using the `FlutterSmsAutofill.onSmsAutofill` stream.
// 6. When the user enters the correct SMS code, the app receives an SMS autofill event and handles it accordingly.

// Summary:
// The app uses the `flutter_sms_autofill` package to send an SMS code to the user's phone number and listen for SMS autofill events.
// When the user enters the correct SMS code, the app receives an SMS autofill event and handles it accordingly.
```

<-- END_MAIN -->