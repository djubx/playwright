<-- START_DESCRIPTION -->

# Simple Mustache Flutter Package
=====================================

The `simple_mustache` Flutter package is a lightweight templating engine that allows you to render dynamic content in your Flutter applications. It uses the popular Mustache templating syntax, making it easy to integrate with your existing workflows.

### When to Use This Package

This package is ideal for rendering dynamic content in your Flutter applications, such as:

* Displaying user data in a profile page
* Rendering dynamic text in a chat application
* Creating customizable templates for your app's UI

### Features

* Supports Mustache templating syntax
* Easy to integrate with existing Flutter workflows
* Lightweight and performant

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setting Up the Package
-------------------------

To use the `simple_mustache` package in your Flutter application, follow these steps:

### Step 1: Add the Package to Your `pubspec.yaml` File

```yml
dependencies:
  simple_mustache: ^1.0.0
```

### Step 2: Run `flutter pub get` to Install the Package

```bash
flutter pub get
```

### Step 3: Import the Package in Your Dart File

```dart
import 'package:simple_mustache/simple_mustache.dart';
```

### Platform-Specific Details

* For Android, no additional configuration is required.
* For iOS, you may need to add the following line to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
This allows the app to make HTTP requests to load the template data.

### Optimizations

* To improve performance, consider caching the rendered templates using a package like `flutter_cache_manager`.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:simple_mustache/simple_mustache.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  // Define the template data
  Map<String, dynamic> _data = {
    'name': 'John Doe',
    'age': 30,
  };

  // Define the template string
  String _template = '''
  <h1>{{name}}</h1>
  <p>Age: {{age}}</p>
  ''';

  @override
  Widget build(BuildContext context) {
    // Render the template using the simple_mustache package
    String _renderedTemplate = Mustache(_template).renderString(_data);

    // Return the rendered template as a widget
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: Html(
            data: _renderedTemplate,
          ),
        ),
      ),
    );
  }
}
```

// The application flow is as follows:
// 1. The `RealFlutter` widget is created and rendered.
// 2. The `_data` map is defined, containing the dynamic data to be rendered.
// 3. The `_template` string is defined, containing the Mustache template syntax.
// 4. The `Mustache` class is used to render the template string with the dynamic data.
// 5. The rendered template is returned as a widget using the `Html` widget.
// 6. The rendered template is displayed in the app.

// In summary, this code demonstrates how to use the `simple_mustache` package to render dynamic content in a Flutter application. The package is used to render a template string with dynamic data, and the rendered template is displayed in the app using the `Html` widget.

<-- END_MAIN -->