<-- START_DESCRIPTION -->

# Compress Images Flutter Package
=====================================

The `compress_images_flutter` package is a Flutter library used to compress images. It provides an easy-to-use API to reduce the size of images while maintaining their quality. This package is useful when you need to upload images to a server or store them locally, and you want to reduce the amount of data transferred or stored.

### Features

*   Compress images using various algorithms (e.g., JPEG, PNG, WebP)
*   Adjust compression quality to balance between file size and image quality
*   Support for both Android and iOS platforms

### When to Use

*   Uploading images to a server and wanting to reduce the amount of data transferred
*   Storing images locally and wanting to reduce the amount of storage space used
*   Sharing images and wanting to reduce the size of the shared files

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Using the Compress Images Flutter Package
=====================================================

### Step 1: Add the Package to Your Flutter Project

Add the following dependency to your `pubspec.yaml` file:

```yml
dependencies:
  flutter:
    sdk: flutter
  compress_images_flutter: ^1.0.0
```

Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:

```dart
import 'package:compress_images_flutter/compress_images_flutter.dart';
```

### Step 3: Compress an Image

Use the `compressImage` function to compress an image:

```dart
Future<void> compressImage() async {
  final image = await ImagePicker().getImage(source: ImageSource.gallery);
  final compressedImage = await CompressImagesFlutter.compressImage(
    image.path,
    quality: 80, // adjust compression quality (0-100)
  );
  // use the compressed image
}
```

### Platform-Specific Details

*   **Android:** No additional configuration is required.
*   **iOS:** Add the following lines to your `Info.plist` file:

```xml
<key>NSPhotoLibraryUsageDescription</key>
<string>This app needs access to your photo library to compress images.</string>
```

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:compress_images_flutter/compress_images_flutter.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Compress Images Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _originalImagePath = '';
  String _compressedImagePath = '';

  Future<void> _selectImage() async {
    // Step 1: Select an image from the gallery
    final image = await ImagePicker().getImage(source: ImageSource.gallery);
    setState(() {
      _originalImagePath = image.path;
    });
  }

  Future<void> _compressImage() async {
    // Step 2: Compress the selected image
    final compressedImage = await CompressImagesFlutter.compressImage(
      _originalImagePath,
      quality: 80, // adjust compression quality (0-100)
    );
    setState(() {
      _compressedImagePath = compressedImage.path;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Compress Images Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            ElevatedButton(
              onPressed: _selectImage,
              child: Text('Select Image'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _compressImage,
              child: Text('Compress Image'),
            ),
            SizedBox(height: 20),
            Text('Original Image Path: $_originalImagePath'),
            Text('Compressed Image Path: $_compressedImagePath'),
          ],
        ),
      ),
    );
  }
}

// The application flow:
// 1. The user selects an image from the gallery using the "Select Image" button.
// 2. The selected image path is stored in the _originalImagePath variable.
// 3. The user clicks the "Compress Image" button to compress the selected image.
// 4. The compressImage function is called with the selected image path and compression quality.
// 5. The compressed image path is stored in the _compressedImagePath variable.
// 6. The original and compressed image paths are displayed on the screen.

```

<-- END_MAIN -->