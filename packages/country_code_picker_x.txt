<-- START_DESCRIPTION -->

# Country Code Picker X: A Flutter Package for Easy Country Code Selection
===========================================================

The `country_code_picker_x` Flutter package provides a simple and efficient way to allow users to select their country code from a list of available countries. This package is ideal for applications that require users to input their phone number or address, such as e-commerce apps, social media platforms, and more.

## Key Features

*   Easy integration: The package is simple to use and requires minimal setup.
*   Customizable: You can customize the appearance of the country code picker to fit your app's design.
*   Comprehensive country list: The package includes a list of countries with their corresponding country codes.
*   Search functionality: Users can search for their country by name or code.

### When to Use This Package

*   When you need to collect users' phone numbers or addresses and want to provide a convenient way for them to select their country code.
*   When you want to simplify the user experience and reduce errors caused by manual country code entry.

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Tutorial: Setting Up and Using the Country Code Picker X Package
===========================================================

## Step 1: Add the Package to Your Flutter Project

To use the `country_code_picker_x` package, you need to add it to your Flutter project. Open your `pubspec.yaml` file and add the following line under the `dependencies` section:

```yml
dependencies:
  flutter:
    sdk: flutter
  country_code_picker_x: ^1.0.0
```

Then, run `flutter pub get` in your terminal to get the package.

## Step 2: Import the Package

In your Dart file, import the `country_code_picker_x` package:

```dart
import 'package:country_code_picker_x/country_code_picker_x.dart';
```

## Step 3: Use the Country Code Picker

To use the country code picker, you can use the `CountryCodePicker` widget:

```dart
CountryCodePicker(
  onChanged: (CountryCode countryCode) {
    // Handle the selected country code
  },
)
```

You can customize the appearance of the country code picker by using the various properties provided by the `CountryCodePicker` widget, such as `showFlag`, `showName`, and `showCode`.

### Platform-Specific Details

The `country_code_picker_x` package works on both Android and iOS platforms. However, you may need to configure some settings specific to each platform.

#### Android

On Android, you need to add the following line to your `AndroidManifest.xml` file:

```xml
<uses-permission android:name="android.permission.INTERNET" />
```

This permission is required to load the country flag images.

#### iOS

On iOS, you need to add the following line to your `Info.plist` file:

```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```

This setting allows the app to load the country flag images from the internet.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:country_code_picker_x/country_code_picker_x.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Country Code Picker Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String _selectedCountryCode = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Country Code Picker Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            CountryCodePicker(
              onChanged: (CountryCode countryCode) {
                setState(() {
                  _selectedCountryCode = countryCode.code;
                });
              },
            ),
            SizedBox(height: 20),
            Text('Selected Country Code: $_selectedCountryCode'),
          ],
        ),
      ),
    );
  }
}

// The app starts by running the main function, which creates a new instance of the MyApp widget.
// The MyApp widget is a stateless widget that wraps the MaterialApp widget.
// The MaterialApp widget is the top-level widget for the app and provides the basic material design visual layout structure.
// The home property of the MaterialApp widget is set to the MyHomePage widget, which is the main page of the app.
// The MyHomePage widget is a stateful widget that displays the country code picker and the selected country code.
// When the user selects a new country code, the onChanged callback is called, which updates the _selectedCountryCode variable and rebuilds the widget tree.
// The selected country code is displayed below the country code picker.
```

<-- END_MAIN -->