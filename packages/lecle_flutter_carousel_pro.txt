<-- START_DESCRIPTION -->

# lecle_flutter_carousel_pro Package Overview
=============================================

The `lecle_flutter_carousel_pro` package is a powerful and customizable carousel library for Flutter. It provides a simple and efficient way to create a carousel layout with various features, such as infinite scrolling, auto-play, and custom indicators.

### When to Use This Package

This package is ideal for creating a carousel layout in your Flutter app, especially when you need to display a list of items in a cyclical manner. Some common use cases include:

* Image galleries
* Product showcases
* Testimonials
* Featured articles

### Key Features

* Infinite scrolling
* Auto-play with customizable duration and delay
* Customizable indicators (dots, bars, etc.)
* Support for multiple item types (images, text, etc.)
* Customizable layout and styling

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

# Setup and Usage
-----------------

### Step 1: Add the Package to Your Project

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  lecle_flutter_carousel_pro: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the Package

Import the package in your Dart file:
```dart
import 'package:lecle_flutter_carousel_pro/lecle_flutter_carousel_pro.dart';
```
### Step 3: Create a Carousel

Create a `Carousel` widget and pass in a list of items:
```dart
Carousel(
  items: [
    Image.asset('assets/image1.jpg'),
    Image.asset('assets/image2.jpg'),
    Image.asset('assets/image3.jpg'),
  ],
)
```
### Step 4: Customize the Carousel

Customize the carousel by passing in additional properties, such as `autoPlay`, `indicator`, and `layout`:
```dart
Carousel(
  items: [
    Image.asset('assets/image1.jpg'),
    Image.asset('assets/image2.jpg'),
    Image.asset('assets/image3.jpg'),
  ],
  autoPlay: true,
  indicator: Indicator.dots,
  layout: Layout.cover,
)
```
### Platform-Specific Details

* Android: No additional setup required.
* iOS: No additional setup required.

### Required Configurations or Optimizations

* Make sure to add the `assets` folder to your `pubspec.yaml` file if you're using image assets.

<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:lecle_flutter_carousel_pro/lecle_flutter_carousel_pro.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Lecle Flutter Carousel Pro Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Lecle Flutter Carousel Pro Demo'),
      ),
      body: Center(
        child: Carousel(
          items: [
            // Step 1: Create a list of items
            Image.asset('assets/image1.jpg'),
            Image.asset('assets/image2.jpg'),
            Image.asset('assets/image3.jpg'),
          ],
          // Step 2: Customize the carousel
          autoPlay: true,
          indicator: Indicator.dots,
          layout: Layout.cover,
        ),
      ),
    );
  }
}

// Application flow:
// 1. The app starts and runs the `main` function.
// 2. The `main` function creates a `MaterialApp` widget with a `MyHomePage` widget as its home page.
// 3. The `MyHomePage` widget creates a `Scaffold` widget with an `AppBar` and a `Center` widget.
// 4. The `Center` widget contains a `Carousel` widget with a list of image assets.
// 5. The `Carousel` widget is customized with auto-play, dots indicator, and cover layout.
// 6. The app displays the carousel with the customized settings.

```

<-- END_MAIN -->