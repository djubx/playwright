<-- START_DESCRIPTION -->

**PayNow Flutter Package: A Comprehensive Overview**
=====================================================

The PayNow Flutter package is a convenient and secure way to integrate payment functionality into your Flutter applications. It allows users to make payments using their preferred payment methods, such as credit/debit cards, online banking, and e-wallets.

**When to Use PayNow**
--------------------

You can use the PayNow package in various scenarios, such as:

* E-commerce apps: to enable users to make payments for their purchases
* Service-based apps: to allow users to pay for services, such as food delivery, ride-hailing, or home cleaning
* Subscription-based apps: to enable users to pay for recurring subscriptions

**Key Features**
----------------

The PayNow package offers the following features:

* Support for multiple payment methods
* Secure payment processing
* Easy integration with your Flutter app
* Customizable payment UI

<-- END_DESCRIPTION -->

<-- START_TUTORIAL -->

**Setting Up PayNow in Your Flutter App**
=============================================

To use the PayNow package in your Flutter app, follow these steps:

### Step 1: Add the PayNow Package to Your Pubspec.yaml File

Add the following line to your `pubspec.yaml` file:
```yml
dependencies:
  paynow: ^1.0.0
```
Then, run `flutter pub get` to install the package.

### Step 2: Import the PayNow Package in Your Dart File

Import the PayNow package in your Dart file:
```dart
import 'package:paynow/paynow.dart';
```
### Step 3: Initialize the PayNow Package

Initialize the PayNow package with your API key and secret key:
```dart
PayNow payNow = PayNow(
  apiKey: 'YOUR_API_KEY',
  secretKey: 'YOUR_SECRET_KEY',
);
```
### Step 4: Create a Payment Request

Create a payment request with the required amount and payment method:
```dart
PaymentRequest paymentRequest = PaymentRequest(
  amount: 10.99,
  paymentMethod: PaymentMethod.card,
);
```
### Step 5: Process the Payment

Process the payment using the PayNow package:
```dart
payNow.processPayment(paymentRequest).then((paymentResponse) {
  if (paymentResponse.isSuccessful) {
    print('Payment successful!');
  } else {
    print('Payment failed!');
  }
});
```
### Platform-Specific Details

For Android, add the following lines to your `AndroidManifest.xml` file:
```xml
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
```
For iOS, add the following lines to your `Info.plist` file:
```xml
<key>NSAppTransportSecurity</key>
<dict>
  <key>NSAllowsArbitraryLoads</key>
  <true/>
</dict>
```
<-- END_TUTORIAL -->

<-- START_MAIN -->

```dart
import 'package:flutter/material.dart';
import 'package:paynow/paynow.dart';

void main() {
  runApp(RealFlutter());
}

class RealFlutter extends StatefulWidget {
  @override
  _RealFlutterState createState() => _RealFlutterState();
}

class _RealFlutterState extends State<RealFlutter> {
  PayNow payNow;
  PaymentRequest paymentRequest;

  @override
  void initState() {
    super.initState();
    payNow = PayNow(
      apiKey: 'YOUR_API_KEY',
      secretKey: 'YOUR_SECRET_KEY',
    );
    paymentRequest = PaymentRequest(
      amount: 10.99,
      paymentMethod: PaymentMethod.card,
    );
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Text('PayNow Example'),
        ),
        body: Center(
          child: ElevatedButton(
            onPressed: () {
              payNow.processPayment(paymentRequest).then((paymentResponse) {
                if (paymentResponse.isSuccessful) {
                  print('Payment successful!');
                } else {
                  print('Payment failed!');
                }
              });
            },
            child: Text('Make Payment'),
          ),
        ),
      ),
    );
  }
}

// The application flow is as follows:
// 1. The user clicks the "Make Payment" button.
// 2. The PayNow package processes the payment request.
// 3. If the payment is successful, the package returns a successful payment response.
// 4. If the payment fails, the package returns a failed payment response.
// 5. The application displays the payment result to the user.

// In summary, this code demonstrates how to use the PayNow package to process a payment request in a Flutter application.
```

<-- END_MAIN -->